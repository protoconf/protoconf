// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.9.0
// source: exec/config/exec_config.proto

package config

import (
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Config_Serializer int32

const (
	Config_JSON Config_Serializer = 0
	Config_PB   Config_Serializer = 1
	Config_YAML Config_Serializer = 2
	Config_INI  Config_Serializer = 3
	Config_TOML Config_Serializer = 4
)

// Enum value maps for Config_Serializer.
var (
	Config_Serializer_name = map[int32]string{
		0: "JSON",
		1: "PB",
		2: "YAML",
		3: "INI",
		4: "TOML",
	}
	Config_Serializer_value = map[string]int32{
		"JSON": 0,
		"PB":   1,
		"YAML": 2,
		"INI":  3,
		"TOML": 4,
	}
)

func (x Config_Serializer) Enum() *Config_Serializer {
	p := new(Config_Serializer)
	*p = x
	return p
}

func (x Config_Serializer) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Config_Serializer) Descriptor() protoreflect.EnumDescriptor {
	return file_exec_config_exec_config_proto_enumTypes[0].Descriptor()
}

func (Config_Serializer) Type() protoreflect.EnumType {
	return &file_exec_config_exec_config_proto_enumTypes[0]
}

func (x Config_Serializer) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Config_Serializer.Descriptor instead.
func (Config_Serializer) EnumDescriptor() ([]byte, []int) {
	return file_exec_config_exec_config_proto_rawDescGZIP(), []int{0, 0}
}

type ActionTypeSignal_Signal int32

const (
	ActionTypeSignal_NONE      ActionTypeSignal_Signal = 0
	ActionTypeSignal_SIGHUP    ActionTypeSignal_Signal = 1
	ActionTypeSignal_SIGINT    ActionTypeSignal_Signal = 2
	ActionTypeSignal_SIGQUIT   ActionTypeSignal_Signal = 3
	ActionTypeSignal_SIGILL    ActionTypeSignal_Signal = 4
	ActionTypeSignal_SIGTRAP   ActionTypeSignal_Signal = 5
	ActionTypeSignal_SIGABRT   ActionTypeSignal_Signal = 6
	ActionTypeSignal_SIGBUS    ActionTypeSignal_Signal = 7
	ActionTypeSignal_SIGFPE    ActionTypeSignal_Signal = 8
	ActionTypeSignal_SIGKILL   ActionTypeSignal_Signal = 9
	ActionTypeSignal_SIGUSR1   ActionTypeSignal_Signal = 10
	ActionTypeSignal_SIGSEGV   ActionTypeSignal_Signal = 11
	ActionTypeSignal_SIGUSR2   ActionTypeSignal_Signal = 12
	ActionTypeSignal_SIGPIPE   ActionTypeSignal_Signal = 13
	ActionTypeSignal_SIGALRM   ActionTypeSignal_Signal = 14
	ActionTypeSignal_SIGTERM   ActionTypeSignal_Signal = 15
	ActionTypeSignal_SIGSTKFLT ActionTypeSignal_Signal = 16
	ActionTypeSignal_SIGCHLD   ActionTypeSignal_Signal = 17
	ActionTypeSignal_SIGCONT   ActionTypeSignal_Signal = 18
	ActionTypeSignal_SIGSTOP   ActionTypeSignal_Signal = 19
	ActionTypeSignal_SIGTSTP   ActionTypeSignal_Signal = 20
	ActionTypeSignal_SIGTTIN   ActionTypeSignal_Signal = 21
	ActionTypeSignal_SIGTTOU   ActionTypeSignal_Signal = 22
	ActionTypeSignal_SIGURG    ActionTypeSignal_Signal = 23
	ActionTypeSignal_SIGXCPU   ActionTypeSignal_Signal = 24
	ActionTypeSignal_SIGXFSZ   ActionTypeSignal_Signal = 25
	ActionTypeSignal_SIGVTALRM ActionTypeSignal_Signal = 26
	ActionTypeSignal_SIGPROF   ActionTypeSignal_Signal = 27
	ActionTypeSignal_SIGWINCH  ActionTypeSignal_Signal = 28
	ActionTypeSignal_SIGIO     ActionTypeSignal_Signal = 29
	ActionTypeSignal_SIGPWR    ActionTypeSignal_Signal = 30
	ActionTypeSignal_SIGSYS    ActionTypeSignal_Signal = 31
)

// Enum value maps for ActionTypeSignal_Signal.
var (
	ActionTypeSignal_Signal_name = map[int32]string{
		0:  "NONE",
		1:  "SIGHUP",
		2:  "SIGINT",
		3:  "SIGQUIT",
		4:  "SIGILL",
		5:  "SIGTRAP",
		6:  "SIGABRT",
		7:  "SIGBUS",
		8:  "SIGFPE",
		9:  "SIGKILL",
		10: "SIGUSR1",
		11: "SIGSEGV",
		12: "SIGUSR2",
		13: "SIGPIPE",
		14: "SIGALRM",
		15: "SIGTERM",
		16: "SIGSTKFLT",
		17: "SIGCHLD",
		18: "SIGCONT",
		19: "SIGSTOP",
		20: "SIGTSTP",
		21: "SIGTTIN",
		22: "SIGTTOU",
		23: "SIGURG",
		24: "SIGXCPU",
		25: "SIGXFSZ",
		26: "SIGVTALRM",
		27: "SIGPROF",
		28: "SIGWINCH",
		29: "SIGIO",
		30: "SIGPWR",
		31: "SIGSYS",
	}
	ActionTypeSignal_Signal_value = map[string]int32{
		"NONE":      0,
		"SIGHUP":    1,
		"SIGINT":    2,
		"SIGQUIT":   3,
		"SIGILL":    4,
		"SIGTRAP":   5,
		"SIGABRT":   6,
		"SIGBUS":    7,
		"SIGFPE":    8,
		"SIGKILL":   9,
		"SIGUSR1":   10,
		"SIGSEGV":   11,
		"SIGUSR2":   12,
		"SIGPIPE":   13,
		"SIGALRM":   14,
		"SIGTERM":   15,
		"SIGSTKFLT": 16,
		"SIGCHLD":   17,
		"SIGCONT":   18,
		"SIGSTOP":   19,
		"SIGTSTP":   20,
		"SIGTTIN":   21,
		"SIGTTOU":   22,
		"SIGURG":    23,
		"SIGXCPU":   24,
		"SIGXFSZ":   25,
		"SIGVTALRM": 26,
		"SIGPROF":   27,
		"SIGWINCH":  28,
		"SIGIO":     29,
		"SIGPWR":    30,
		"SIGSYS":    31,
	}
)

func (x ActionTypeSignal_Signal) Enum() *ActionTypeSignal_Signal {
	p := new(ActionTypeSignal_Signal)
	*p = x
	return p
}

func (x ActionTypeSignal_Signal) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActionTypeSignal_Signal) Descriptor() protoreflect.EnumDescriptor {
	return file_exec_config_exec_config_proto_enumTypes[1].Descriptor()
}

func (ActionTypeSignal_Signal) Type() protoreflect.EnumType {
	return &file_exec_config_exec_config_proto_enumTypes[1]
}

func (x ActionTypeSignal_Signal) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActionTypeSignal_Signal.Descriptor instead.
func (ActionTypeSignal_Signal) EnumDescriptor() ([]byte, []int) {
	return file_exec_config_exec_config_proto_rawDescGZIP(), []int{5, 0}
}

type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*WatcherConfig `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exec_config_exec_config_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_exec_config_exec_config_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_exec_config_exec_config_proto_rawDescGZIP(), []int{0}
}

func (x *Config) GetItems() []*WatcherConfig {
	if x != nil {
		return x.Items
	}
	return nil
}

type WatcherConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path               string             `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	ProtoFile          string             `protobuf:"bytes,2,opt,name=proto_file,json=protoFile,proto3" json:"proto_file,omitempty"`
	Actions            []*Action          `protobuf:"bytes,3,rep,name=actions,proto3" json:"actions,omitempty"`
	MainProcessCmdline string             `protobuf:"bytes,4,opt,name=main_process_cmdline,json=mainProcessCmdline,proto3" json:"main_process_cmdline,omitempty"`
	PidFile            string             `protobuf:"bytes,5,opt,name=pid_file,json=pidFile,proto3" json:"pid_file,omitempty"`
	KillTimeout        *duration.Duration `protobuf:"bytes,17,opt,name=kill_timeout,json=killTimeout,proto3" json:"kill_timeout,omitempty"`
	Splay              *duration.Duration `protobuf:"bytes,18,opt,name=splay,proto3" json:"splay,omitempty"`
	Timeout            *duration.Duration `protobuf:"bytes,19,opt,name=timeout,proto3" json:"timeout,omitempty"`
}

func (x *WatcherConfig) Reset() {
	*x = WatcherConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exec_config_exec_config_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatcherConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatcherConfig) ProtoMessage() {}

func (x *WatcherConfig) ProtoReflect() protoreflect.Message {
	mi := &file_exec_config_exec_config_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatcherConfig.ProtoReflect.Descriptor instead.
func (*WatcherConfig) Descriptor() ([]byte, []int) {
	return file_exec_config_exec_config_proto_rawDescGZIP(), []int{1}
}

func (x *WatcherConfig) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *WatcherConfig) GetProtoFile() string {
	if x != nil {
		return x.ProtoFile
	}
	return ""
}

func (x *WatcherConfig) GetActions() []*Action {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *WatcherConfig) GetMainProcessCmdline() string {
	if x != nil {
		return x.MainProcessCmdline
	}
	return ""
}

func (x *WatcherConfig) GetPidFile() string {
	if x != nil {
		return x.PidFile
	}
	return ""
}

func (x *WatcherConfig) GetKillTimeout() *duration.Duration {
	if x != nil {
		return x.KillTimeout
	}
	return nil
}

func (x *WatcherConfig) GetSplay() *duration.Duration {
	if x != nil {
		return x.Splay
	}
	return nil
}

func (x *WatcherConfig) GetTimeout() *duration.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

type ActionTypeWriteToFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path   string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Mode   string `protobuf:"bytes,2,opt,name=mode,proto3" json:"mode,omitempty"`
	Owner  string `protobuf:"bytes,3,opt,name=owner,proto3" json:"owner,omitempty"`
	Group  string `protobuf:"bytes,4,opt,name=group,proto3" json:"group,omitempty"`
	Header string `protobuf:"bytes,5,opt,name=header,proto3" json:"header,omitempty"`
	Footer string `protobuf:"bytes,6,opt,name=footer,proto3" json:"footer,omitempty"`
	// Types that are assignable to Output:
	//	*ActionTypeWriteToFile_Template
	//	*ActionTypeWriteToFile_Serializer
	Output isActionTypeWriteToFile_Output `protobuf_oneof:"output"`
}

func (x *ActionTypeWriteToFile) Reset() {
	*x = ActionTypeWriteToFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exec_config_exec_config_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionTypeWriteToFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionTypeWriteToFile) ProtoMessage() {}

func (x *ActionTypeWriteToFile) ProtoReflect() protoreflect.Message {
	mi := &file_exec_config_exec_config_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionTypeWriteToFile.ProtoReflect.Descriptor instead.
func (*ActionTypeWriteToFile) Descriptor() ([]byte, []int) {
	return file_exec_config_exec_config_proto_rawDescGZIP(), []int{2}
}

func (x *ActionTypeWriteToFile) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ActionTypeWriteToFile) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *ActionTypeWriteToFile) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *ActionTypeWriteToFile) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *ActionTypeWriteToFile) GetHeader() string {
	if x != nil {
		return x.Header
	}
	return ""
}

func (x *ActionTypeWriteToFile) GetFooter() string {
	if x != nil {
		return x.Footer
	}
	return ""
}

func (m *ActionTypeWriteToFile) GetOutput() isActionTypeWriteToFile_Output {
	if m != nil {
		return m.Output
	}
	return nil
}

func (x *ActionTypeWriteToFile) GetTemplate() string {
	if x, ok := x.GetOutput().(*ActionTypeWriteToFile_Template); ok {
		return x.Template
	}
	return ""
}

func (x *ActionTypeWriteToFile) GetSerializer() Config_Serializer {
	if x, ok := x.GetOutput().(*ActionTypeWriteToFile_Serializer); ok {
		return x.Serializer
	}
	return Config_JSON
}

type isActionTypeWriteToFile_Output interface {
	isActionTypeWriteToFile_Output()
}

type ActionTypeWriteToFile_Template struct {
	Template string `protobuf:"bytes,16,opt,name=template,proto3,oneof"`
}

type ActionTypeWriteToFile_Serializer struct {
	Serializer Config_Serializer `protobuf:"varint,17,opt,name=serializer,proto3,enum=exec_config.Config_Serializer,oneof"`
}

func (*ActionTypeWriteToFile_Template) isActionTypeWriteToFile_Output() {}

func (*ActionTypeWriteToFile_Serializer) isActionTypeWriteToFile_Output() {}

type ActionTypeHttp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uri        string            `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
	Method     string            `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`
	Headers    map[string]string `protobuf:"bytes,3,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Serializer Config_Serializer `protobuf:"varint,16,opt,name=serializer,proto3,enum=exec_config.Config_Serializer" json:"serializer,omitempty"`
}

func (x *ActionTypeHttp) Reset() {
	*x = ActionTypeHttp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exec_config_exec_config_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionTypeHttp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionTypeHttp) ProtoMessage() {}

func (x *ActionTypeHttp) ProtoReflect() protoreflect.Message {
	mi := &file_exec_config_exec_config_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionTypeHttp.ProtoReflect.Descriptor instead.
func (*ActionTypeHttp) Descriptor() ([]byte, []int) {
	return file_exec_config_exec_config_proto_rawDescGZIP(), []int{3}
}

func (x *ActionTypeHttp) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *ActionTypeHttp) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *ActionTypeHttp) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *ActionTypeHttp) GetSerializer() Config_Serializer {
	if x != nil {
		return x.Serializer
	}
	return Config_JSON
}

type ActionTypeRestart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ActionTypeRestart) Reset() {
	*x = ActionTypeRestart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exec_config_exec_config_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionTypeRestart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionTypeRestart) ProtoMessage() {}

func (x *ActionTypeRestart) ProtoReflect() protoreflect.Message {
	mi := &file_exec_config_exec_config_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionTypeRestart.ProtoReflect.Descriptor instead.
func (*ActionTypeRestart) Descriptor() ([]byte, []int) {
	return file_exec_config_exec_config_proto_rawDescGZIP(), []int{4}
}

type ActionTypeSignal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signal  ActionTypeSignal_Signal `protobuf:"varint,1,opt,name=signal,proto3,enum=exec_config.ActionTypeSignal_Signal" json:"signal,omitempty"`
	PidFile string                  `protobuf:"bytes,2,opt,name=pid_file,json=pidFile,proto3" json:"pid_file,omitempty"`
}

func (x *ActionTypeSignal) Reset() {
	*x = ActionTypeSignal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exec_config_exec_config_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionTypeSignal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionTypeSignal) ProtoMessage() {}

func (x *ActionTypeSignal) ProtoReflect() protoreflect.Message {
	mi := &file_exec_config_exec_config_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionTypeSignal.ProtoReflect.Descriptor instead.
func (*ActionTypeSignal) Descriptor() ([]byte, []int) {
	return file_exec_config_exec_config_proto_rawDescGZIP(), []int{5}
}

func (x *ActionTypeSignal) GetSignal() ActionTypeSignal_Signal {
	if x != nil {
		return x.Signal
	}
	return ActionTypeSignal_NONE
}

func (x *ActionTypeSignal) GetPidFile() string {
	if x != nil {
		return x.PidFile
	}
	return ""
}

type Action struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Action:
	//	*Action_File
	//	*Action_Http
	//	*Action_Restart
	//	*Action_Signal
	Action      isAction_Action    `protobuf_oneof:"action"`
	Then        []*Action          `protobuf:"bytes,5,rep,name=then,proto3" json:"then,omitempty"`
	OnError     []*Action          `protobuf:"bytes,6,rep,name=on_error,json=onError,proto3" json:"on_error,omitempty"`
	KillTimeout *duration.Duration `protobuf:"bytes,17,opt,name=kill_timeout,json=killTimeout,proto3" json:"kill_timeout,omitempty"`
	Splay       *duration.Duration `protobuf:"bytes,18,opt,name=splay,proto3" json:"splay,omitempty"`
	Timeout     *duration.Duration `protobuf:"bytes,19,opt,name=timeout,proto3" json:"timeout,omitempty"`
}

func (x *Action) Reset() {
	*x = Action{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exec_config_exec_config_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action) ProtoMessage() {}

func (x *Action) ProtoReflect() protoreflect.Message {
	mi := &file_exec_config_exec_config_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action.ProtoReflect.Descriptor instead.
func (*Action) Descriptor() ([]byte, []int) {
	return file_exec_config_exec_config_proto_rawDescGZIP(), []int{6}
}

func (m *Action) GetAction() isAction_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (x *Action) GetFile() *ActionTypeWriteToFile {
	if x, ok := x.GetAction().(*Action_File); ok {
		return x.File
	}
	return nil
}

func (x *Action) GetHttp() *ActionTypeHttp {
	if x, ok := x.GetAction().(*Action_Http); ok {
		return x.Http
	}
	return nil
}

func (x *Action) GetRestart() *ActionTypeRestart {
	if x, ok := x.GetAction().(*Action_Restart); ok {
		return x.Restart
	}
	return nil
}

func (x *Action) GetSignal() *ActionTypeSignal {
	if x, ok := x.GetAction().(*Action_Signal); ok {
		return x.Signal
	}
	return nil
}

func (x *Action) GetThen() []*Action {
	if x != nil {
		return x.Then
	}
	return nil
}

func (x *Action) GetOnError() []*Action {
	if x != nil {
		return x.OnError
	}
	return nil
}

func (x *Action) GetKillTimeout() *duration.Duration {
	if x != nil {
		return x.KillTimeout
	}
	return nil
}

func (x *Action) GetSplay() *duration.Duration {
	if x != nil {
		return x.Splay
	}
	return nil
}

func (x *Action) GetTimeout() *duration.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

type isAction_Action interface {
	isAction_Action()
}

type Action_File struct {
	File *ActionTypeWriteToFile `protobuf:"bytes,1,opt,name=file,proto3,oneof"`
}

type Action_Http struct {
	Http *ActionTypeHttp `protobuf:"bytes,2,opt,name=http,proto3,oneof"`
}

type Action_Restart struct {
	Restart *ActionTypeRestart `protobuf:"bytes,3,opt,name=restart,proto3,oneof"`
}

type Action_Signal struct {
	Signal *ActionTypeSignal `protobuf:"bytes,4,opt,name=signal,proto3,oneof"`
}

func (*Action_File) isAction_Action() {}

func (*Action_Http) isAction_Action() {}

func (*Action_Restart) isAction_Action() {}

func (*Action_Signal) isAction_Action() {}

var File_exec_config_exec_config_proto protoreflect.FileDescriptor

var file_exec_config_exec_config_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x65, 0x78, 0x65, 0x63, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x65, 0x78,
	0x65, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0b, 0x65, 0x78, 0x65, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x1e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x77, 0x0a, 0x06,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x30, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x3b, 0x0a, 0x0a, 0x53, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x72, 0x12, 0x08, 0x0a, 0x04, 0x4a, 0x53, 0x4f, 0x4e, 0x10, 0x00,
	0x12, 0x06, 0x0a, 0x02, 0x50, 0x42, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x59, 0x41, 0x4d, 0x4c,
	0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x49, 0x4e, 0x49, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x54,
	0x4f, 0x4d, 0x4c, 0x10, 0x04, 0x22, 0xe2, 0x02, 0x0a, 0x0d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x2d, 0x0a, 0x07, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x78,
	0x65, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x6d, 0x61, 0x69,
	0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x6d, 0x64, 0x6c, 0x69, 0x6e,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6d, 0x61, 0x69, 0x6e, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x43, 0x6d, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70,
	0x69, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70,
	0x69, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x3c, 0x0a, 0x0c, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x6b, 0x69, 0x6c, 0x6c, 0x54, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x12, 0x2f, 0x0a, 0x05, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x33, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22, 0x85, 0x02, 0x0a, 0x15, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x57, 0x72, 0x69, 0x74, 0x65, 0x54, 0x6f,
	0x46, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x40, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x69, 0x7a, 0x65, 0x72, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x65, 0x78, 0x65,
	0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x72, 0x42, 0x08, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x22, 0xfa, 0x01, 0x0a, 0x0e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x48, 0x74, 0x74, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12,
	0x42, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x48, 0x74, 0x74, 0x70, 0x2e, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x12, 0x3e, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65,
	0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x72, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69,
	0x7a, 0x65, 0x72, 0x1a, 0x3a, 0x0a, 0x0c, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x13, 0x0a, 0x11, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x22, 0x8e, 0x04, 0x0a, 0x10, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x12, 0x3c, 0x0a, 0x06, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x65, 0x78, 0x65, 0x63,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52,
	0x06, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x69, 0x64, 0x5f, 0x66,
	0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x69, 0x64, 0x46, 0x69,
	0x6c, 0x65, 0x22, 0xa0, 0x03, 0x0a, 0x06, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x49, 0x47, 0x48, 0x55,
	0x50, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x49, 0x47, 0x49, 0x4e, 0x54, 0x10, 0x02, 0x12,
	0x0b, 0x0a, 0x07, 0x53, 0x49, 0x47, 0x51, 0x55, 0x49, 0x54, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06,
	0x53, 0x49, 0x47, 0x49, 0x4c, 0x4c, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x49, 0x47, 0x54,
	0x52, 0x41, 0x50, 0x10, 0x05, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x49, 0x47, 0x41, 0x42, 0x52, 0x54,
	0x10, 0x06, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x49, 0x47, 0x42, 0x55, 0x53, 0x10, 0x07, 0x12, 0x0a,
	0x0a, 0x06, 0x53, 0x49, 0x47, 0x46, 0x50, 0x45, 0x10, 0x08, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x49,
	0x47, 0x4b, 0x49, 0x4c, 0x4c, 0x10, 0x09, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x49, 0x47, 0x55, 0x53,
	0x52, 0x31, 0x10, 0x0a, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x49, 0x47, 0x53, 0x45, 0x47, 0x56, 0x10,
	0x0b, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x49, 0x47, 0x55, 0x53, 0x52, 0x32, 0x10, 0x0c, 0x12, 0x0b,
	0x0a, 0x07, 0x53, 0x49, 0x47, 0x50, 0x49, 0x50, 0x45, 0x10, 0x0d, 0x12, 0x0b, 0x0a, 0x07, 0x53,
	0x49, 0x47, 0x41, 0x4c, 0x52, 0x4d, 0x10, 0x0e, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x49, 0x47, 0x54,
	0x45, 0x52, 0x4d, 0x10, 0x0f, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x49, 0x47, 0x53, 0x54, 0x4b, 0x46,
	0x4c, 0x54, 0x10, 0x10, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x49, 0x47, 0x43, 0x48, 0x4c, 0x44, 0x10,
	0x11, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x49, 0x47, 0x43, 0x4f, 0x4e, 0x54, 0x10, 0x12, 0x12, 0x0b,
	0x0a, 0x07, 0x53, 0x49, 0x47, 0x53, 0x54, 0x4f, 0x50, 0x10, 0x13, 0x12, 0x0b, 0x0a, 0x07, 0x53,
	0x49, 0x47, 0x54, 0x53, 0x54, 0x50, 0x10, 0x14, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x49, 0x47, 0x54,
	0x54, 0x49, 0x4e, 0x10, 0x15, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x49, 0x47, 0x54, 0x54, 0x4f, 0x55,
	0x10, 0x16, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x49, 0x47, 0x55, 0x52, 0x47, 0x10, 0x17, 0x12, 0x0b,
	0x0a, 0x07, 0x53, 0x49, 0x47, 0x58, 0x43, 0x50, 0x55, 0x10, 0x18, 0x12, 0x0b, 0x0a, 0x07, 0x53,
	0x49, 0x47, 0x58, 0x46, 0x53, 0x5a, 0x10, 0x19, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x49, 0x47, 0x56,
	0x54, 0x41, 0x4c, 0x52, 0x4d, 0x10, 0x1a, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x49, 0x47, 0x50, 0x52,
	0x4f, 0x46, 0x10, 0x1b, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x49, 0x47, 0x57, 0x49, 0x4e, 0x43, 0x48,
	0x10, 0x1c, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x49, 0x47, 0x49, 0x4f, 0x10, 0x1d, 0x12, 0x0a, 0x0a,
	0x06, 0x53, 0x49, 0x47, 0x50, 0x57, 0x52, 0x10, 0x1e, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x49, 0x47,
	0x53, 0x59, 0x53, 0x10, 0x1f, 0x22, 0xf1, 0x03, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x38, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x65, 0x78, 0x65, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x57, 0x72, 0x69, 0x74, 0x65, 0x54, 0x6f, 0x46, 0x69,
	0x6c, 0x65, 0x48, 0x00, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x68, 0x74,
	0x74, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x48, 0x74, 0x74, 0x70, 0x48, 0x00, 0x52, 0x04, 0x68, 0x74, 0x74, 0x70, 0x12, 0x3a, 0x0a,
	0x07, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x65, 0x78, 0x65, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x48, 0x00,
	0x52, 0x07, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x37, 0x0a, 0x06, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x78, 0x65, 0x63,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x12, 0x27, 0x0a, 0x04, 0x74, 0x68, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x74, 0x68, 0x65, 0x6e, 0x12, 0x2e, 0x0a, 0x08, 0x6f,
	0x6e, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x65, 0x78, 0x65, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x07, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3c, 0x0a, 0x0c, 0x6b,
	0x69, 0x6c, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x6b, 0x69,
	0x6c, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x2f, 0x0a, 0x05, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x05, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x33, 0x0a, 0x07, 0x74, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x42,
	0x08, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x2c, 0x5a, 0x2a, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6e,
	0x66, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6e, 0x66, 0x2f, 0x65, 0x78, 0x65, 0x63,
	0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_exec_config_exec_config_proto_rawDescOnce sync.Once
	file_exec_config_exec_config_proto_rawDescData = file_exec_config_exec_config_proto_rawDesc
)

func file_exec_config_exec_config_proto_rawDescGZIP() []byte {
	file_exec_config_exec_config_proto_rawDescOnce.Do(func() {
		file_exec_config_exec_config_proto_rawDescData = protoimpl.X.CompressGZIP(file_exec_config_exec_config_proto_rawDescData)
	})
	return file_exec_config_exec_config_proto_rawDescData
}

var file_exec_config_exec_config_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_exec_config_exec_config_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_exec_config_exec_config_proto_goTypes = []interface{}{
	(Config_Serializer)(0),        // 0: exec_config.Config.Serializer
	(ActionTypeSignal_Signal)(0),  // 1: exec_config.ActionTypeSignal.Signal
	(*Config)(nil),                // 2: exec_config.Config
	(*WatcherConfig)(nil),         // 3: exec_config.WatcherConfig
	(*ActionTypeWriteToFile)(nil), // 4: exec_config.ActionTypeWriteToFile
	(*ActionTypeHttp)(nil),        // 5: exec_config.ActionTypeHttp
	(*ActionTypeRestart)(nil),     // 6: exec_config.ActionTypeRestart
	(*ActionTypeSignal)(nil),      // 7: exec_config.ActionTypeSignal
	(*Action)(nil),                // 8: exec_config.Action
	nil,                           // 9: exec_config.ActionTypeHttp.HeadersEntry
	(*duration.Duration)(nil),     // 10: google.protobuf.Duration
}
var file_exec_config_exec_config_proto_depIdxs = []int32{
	3,  // 0: exec_config.Config.items:type_name -> exec_config.WatcherConfig
	8,  // 1: exec_config.WatcherConfig.actions:type_name -> exec_config.Action
	10, // 2: exec_config.WatcherConfig.kill_timeout:type_name -> google.protobuf.Duration
	10, // 3: exec_config.WatcherConfig.splay:type_name -> google.protobuf.Duration
	10, // 4: exec_config.WatcherConfig.timeout:type_name -> google.protobuf.Duration
	0,  // 5: exec_config.ActionTypeWriteToFile.serializer:type_name -> exec_config.Config.Serializer
	9,  // 6: exec_config.ActionTypeHttp.headers:type_name -> exec_config.ActionTypeHttp.HeadersEntry
	0,  // 7: exec_config.ActionTypeHttp.serializer:type_name -> exec_config.Config.Serializer
	1,  // 8: exec_config.ActionTypeSignal.signal:type_name -> exec_config.ActionTypeSignal.Signal
	4,  // 9: exec_config.Action.file:type_name -> exec_config.ActionTypeWriteToFile
	5,  // 10: exec_config.Action.http:type_name -> exec_config.ActionTypeHttp
	6,  // 11: exec_config.Action.restart:type_name -> exec_config.ActionTypeRestart
	7,  // 12: exec_config.Action.signal:type_name -> exec_config.ActionTypeSignal
	8,  // 13: exec_config.Action.then:type_name -> exec_config.Action
	8,  // 14: exec_config.Action.on_error:type_name -> exec_config.Action
	10, // 15: exec_config.Action.kill_timeout:type_name -> google.protobuf.Duration
	10, // 16: exec_config.Action.splay:type_name -> google.protobuf.Duration
	10, // 17: exec_config.Action.timeout:type_name -> google.protobuf.Duration
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_exec_config_exec_config_proto_init() }
func file_exec_config_exec_config_proto_init() {
	if File_exec_config_exec_config_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_exec_config_exec_config_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exec_config_exec_config_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatcherConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exec_config_exec_config_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionTypeWriteToFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exec_config_exec_config_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionTypeHttp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exec_config_exec_config_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionTypeRestart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exec_config_exec_config_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionTypeSignal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exec_config_exec_config_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_exec_config_exec_config_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*ActionTypeWriteToFile_Template)(nil),
		(*ActionTypeWriteToFile_Serializer)(nil),
	}
	file_exec_config_exec_config_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*Action_File)(nil),
		(*Action_Http)(nil),
		(*Action_Restart)(nil),
		(*Action_Signal)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_exec_config_exec_config_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_exec_config_exec_config_proto_goTypes,
		DependencyIndexes: file_exec_config_exec_config_proto_depIdxs,
		EnumInfos:         file_exec_config_exec_config_proto_enumTypes,
		MessageInfos:      file_exec_config_exec_config_proto_msgTypes,
	}.Build()
	File_exec_config_exec_config_proto = out.File
	file_exec_config_exec_config_proto_rawDesc = nil
	file_exec_config_exec_config_proto_goTypes = nil
	file_exec_config_exec_config_proto_depIdxs = nil
}
