syntax = "proto3";

// Provider: aws 5.2.0
package terraform.aws.resources.v5;

import "terraform/v1/meta.proto";

// AwsDefaultNetworkAcl version is 0
message AwsDefaultNetworkAcl {
  string arn = 1;

  string default_network_acl_id = 2 [json_name = "default_network_acl_id"];

  string id = 3;

  string owner_id = 4 [json_name = "owner_id"];

  repeated string subnet_ids = 5 [json_name = "subnet_ids"];

  map<string, string> tags = 6;

  map<string, string> tags_all = 7 [json_name = "tags_all"];

  string vpc_id = 8 [json_name = "vpc_id"];

  repeated Egress egress = 9;

  repeated Ingress ingress = 10;

  map<string, string> for_each = 11 [json_name = "for_each"];

  repeated string depends_on = 12 [json_name = "depends_on"];

  int32 count = 13;

  string provider = 14;

  terraform.v1.Lifecycle lifecycle = 15;

  message Egress {
    string action = 1;

    string cidr_block = 2 [json_name = "cidr_block"];

    int64 from_port = 3 [json_name = "from_port"];

    int64 icmp_code = 4 [json_name = "icmp_code"];

    int64 icmp_type = 5 [json_name = "icmp_type"];

    string ipv6_cidr_block = 6 [json_name = "ipv6_cidr_block"];

    string protocol = 7;

    int64 rule_no = 8 [json_name = "rule_no"];

    int64 to_port = 9 [json_name = "to_port"];
  }

  message Ingress {
    string action = 1;

    string cidr_block = 2 [json_name = "cidr_block"];

    int64 from_port = 3 [json_name = "from_port"];

    int64 icmp_code = 4 [json_name = "icmp_code"];

    int64 icmp_type = 5 [json_name = "icmp_type"];

    string ipv6_cidr_block = 6 [json_name = "ipv6_cidr_block"];

    string protocol = 7;

    int64 rule_no = 8 [json_name = "rule_no"];

    int64 to_port = 9 [json_name = "to_port"];
  }
}

// AwsDefaultRouteTable version is 0
message AwsDefaultRouteTable {
  string arn = 1;

  string default_route_table_id = 2 [json_name = "default_route_table_id"];

  string id = 3;

  string owner_id = 4 [json_name = "owner_id"];

  repeated string propagating_vgws = 5 [json_name = "propagating_vgws"];

  repeated Route route = 6;

  map<string, string> tags = 7;

  map<string, string> tags_all = 8 [json_name = "tags_all"];

  string vpc_id = 9 [json_name = "vpc_id"];

  repeated Timeouts timeouts = 10;

  map<string, string> for_each = 11 [json_name = "for_each"];

  repeated string depends_on = 12 [json_name = "depends_on"];

  int32 count = 13;

  string provider = 14;

  terraform.v1.Lifecycle lifecycle = 15;

  message Route {
    // cidr_block: string
    string cidr_block = 1 [json_name = "cidr_block"];

    // core_network_arn: string
    string core_network_arn = 2 [json_name = "core_network_arn"];

    // destination_prefix_list_id: string
    string destination_prefix_list_id = 3 [json_name = "destination_prefix_list_id"];

    // egress_only_gateway_id: string
    string egress_only_gateway_id = 4 [json_name = "egress_only_gateway_id"];

    // gateway_id: string
    string gateway_id = 5 [json_name = "gateway_id"];

    // instance_id: string
    string instance_id = 6 [json_name = "instance_id"];

    // ipv6_cidr_block: string
    string ipv6_cidr_block = 7 [json_name = "ipv6_cidr_block"];

    // nat_gateway_id: string
    string nat_gateway_id = 8 [json_name = "nat_gateway_id"];

    // network_interface_id: string
    string network_interface_id = 9 [json_name = "network_interface_id"];

    // transit_gateway_id: string
    string transit_gateway_id = 10 [json_name = "transit_gateway_id"];

    // vpc_endpoint_id: string
    string vpc_endpoint_id = 11 [json_name = "vpc_endpoint_id"];

    // vpc_peering_connection_id: string
    string vpc_peering_connection_id = 12 [json_name = "vpc_peering_connection_id"];
  }

  message Timeouts {
    string create = 1;

    string update = 2;
  }
}

// AwsDefaultSecurityGroup version is 1
message AwsDefaultSecurityGroup {
  string arn = 1;

  string description = 2;

  repeated Egress egress = 3;

  string id = 4;

  repeated Ingress ingress = 5;

  string name = 6;

  string name_prefix = 7 [json_name = "name_prefix"];

  string owner_id = 8 [json_name = "owner_id"];

  bool revoke_rules_on_delete = 9 [json_name = "revoke_rules_on_delete"];

  map<string, string> tags = 10;

  map<string, string> tags_all = 11 [json_name = "tags_all"];

  string vpc_id = 12 [json_name = "vpc_id"];

  map<string, string> for_each = 13 [json_name = "for_each"];

  repeated string depends_on = 14 [json_name = "depends_on"];

  int32 count = 15;

  string provider = 16;

  terraform.v1.Lifecycle lifecycle = 17;

  message Egress {
    // cidr_blocks: list of string
    repeated string cidr_blocks = 1 [json_name = "cidr_blocks"];

    // description: string
    string description = 2;

    // from_port: number
    int64 from_port = 3 [json_name = "from_port"];

    // ipv6_cidr_blocks: list of string
    repeated string ipv6_cidr_blocks = 4 [json_name = "ipv6_cidr_blocks"];

    // prefix_list_ids: list of string
    repeated string prefix_list_ids = 5 [json_name = "prefix_list_ids"];

    // protocol: string
    string protocol = 6;

    // security_groups: set of string
    repeated string security_groups = 7 [json_name = "security_groups"];

    // self: bool
    bool self = 8;

    // to_port: number
    int64 to_port = 9 [json_name = "to_port"];
  }

  message Ingress {
    // cidr_blocks: list of string
    repeated string cidr_blocks = 1 [json_name = "cidr_blocks"];

    // description: string
    string description = 2;

    // from_port: number
    int64 from_port = 3 [json_name = "from_port"];

    // ipv6_cidr_blocks: list of string
    repeated string ipv6_cidr_blocks = 4 [json_name = "ipv6_cidr_blocks"];

    // prefix_list_ids: list of string
    repeated string prefix_list_ids = 5 [json_name = "prefix_list_ids"];

    // protocol: string
    string protocol = 6;

    // security_groups: set of string
    repeated string security_groups = 7 [json_name = "security_groups"];

    // self: bool
    bool self = 8;

    // to_port: number
    int64 to_port = 9 [json_name = "to_port"];
  }
}

// AwsDefaultSubnet version is 1
message AwsDefaultSubnet {
  string arn = 1;

  bool assign_ipv6_address_on_creation = 2 [json_name = "assign_ipv6_address_on_creation"];

  string availability_zone = 3 [json_name = "availability_zone"];

  string availability_zone_id = 4 [json_name = "availability_zone_id"];

  string cidr_block = 5 [json_name = "cidr_block"];

  string customer_owned_ipv4_pool = 6 [json_name = "customer_owned_ipv4_pool"];

  bool enable_dns64 = 7 [json_name = "enable_dns64"];

  int64 enable_lni_at_device_index = 8 [json_name = "enable_lni_at_device_index"];

  bool enable_resource_name_dns_a_record_on_launch = 9 [
    json_name = "enable_resource_name_dns_a_record_on_launch"
  ];

  bool enable_resource_name_dns_aaaa_record_on_launch = 10 [
    json_name = "enable_resource_name_dns_aaaa_record_on_launch"
  ];

  bool existing_default_subnet = 11 [json_name = "existing_default_subnet"];

  bool force_destroy = 12 [json_name = "force_destroy"];

  string id = 13;

  string ipv6_cidr_block = 14 [json_name = "ipv6_cidr_block"];

  string ipv6_cidr_block_association_id = 15 [json_name = "ipv6_cidr_block_association_id"];

  bool ipv6_native = 16 [json_name = "ipv6_native"];

  bool map_customer_owned_ip_on_launch = 17 [json_name = "map_customer_owned_ip_on_launch"];

  bool map_public_ip_on_launch = 18 [json_name = "map_public_ip_on_launch"];

  string outpost_arn = 19 [json_name = "outpost_arn"];

  string owner_id = 20 [json_name = "owner_id"];

  string private_dns_hostname_type_on_launch = 21 [json_name = "private_dns_hostname_type_on_launch"];

  map<string, string> tags = 22;

  map<string, string> tags_all = 23 [json_name = "tags_all"];

  string vpc_id = 24 [json_name = "vpc_id"];

  repeated Timeouts timeouts = 25;

  map<string, string> for_each = 26 [json_name = "for_each"];

  repeated string depends_on = 27 [json_name = "depends_on"];

  int32 count = 28;

  string provider = 29;

  terraform.v1.Lifecycle lifecycle = 30;

  message Timeouts {
    string create = 1;

    string delete = 2;
  }
}

// AwsDefaultVpc version is 1
message AwsDefaultVpc {
  string arn = 1;

  bool assign_generated_ipv6_cidr_block = 2 [json_name = "assign_generated_ipv6_cidr_block"];

  string cidr_block = 3 [json_name = "cidr_block"];

  string default_network_acl_id = 4 [json_name = "default_network_acl_id"];

  string default_route_table_id = 5 [json_name = "default_route_table_id"];

  string default_security_group_id = 6 [json_name = "default_security_group_id"];

  string dhcp_options_id = 7 [json_name = "dhcp_options_id"];

  bool enable_dns_hostnames = 8 [json_name = "enable_dns_hostnames"];

  bool enable_dns_support = 9 [json_name = "enable_dns_support"];

  bool enable_network_address_usage_metrics = 10 [json_name = "enable_network_address_usage_metrics"];

  bool existing_default_vpc = 11 [json_name = "existing_default_vpc"];

  bool force_destroy = 12 [json_name = "force_destroy"];

  string id = 13;

  string instance_tenancy = 14 [json_name = "instance_tenancy"];

  string ipv6_association_id = 15 [json_name = "ipv6_association_id"];

  string ipv6_cidr_block = 16 [json_name = "ipv6_cidr_block"];

  string ipv6_cidr_block_network_border_group = 17 [json_name = "ipv6_cidr_block_network_border_group"];

  string ipv6_ipam_pool_id = 18 [json_name = "ipv6_ipam_pool_id"];

  int64 ipv6_netmask_length = 19 [json_name = "ipv6_netmask_length"];

  string main_route_table_id = 20 [json_name = "main_route_table_id"];

  string owner_id = 21 [json_name = "owner_id"];

  map<string, string> tags = 22;

  map<string, string> tags_all = 23 [json_name = "tags_all"];

  map<string, string> for_each = 24 [json_name = "for_each"];

  repeated string depends_on = 25 [json_name = "depends_on"];

  int32 count = 26;

  string provider = 27;

  terraform.v1.Lifecycle lifecycle = 28;
}

// AwsDefaultVpcDhcpOptions version is 0
message AwsDefaultVpcDhcpOptions {
  string arn = 1;

  string domain_name = 2 [json_name = "domain_name"];

  string domain_name_servers = 3 [json_name = "domain_name_servers"];

  string id = 4;

  string netbios_name_servers = 5 [json_name = "netbios_name_servers"];

  string netbios_node_type = 6 [json_name = "netbios_node_type"];

  string ntp_servers = 7 [json_name = "ntp_servers"];

  string owner_id = 8 [json_name = "owner_id"];

  map<string, string> tags = 9;

  map<string, string> tags_all = 10 [json_name = "tags_all"];

  map<string, string> for_each = 11 [json_name = "for_each"];

  repeated string depends_on = 12 [json_name = "depends_on"];

  int32 count = 13;

  string provider = 14;

  terraform.v1.Lifecycle lifecycle = 15;
}
