syntax = "proto3";

// Provider: aws 5.2.0
package terraform.aws.resources.v5;

import "terraform/v1/meta.proto";

// AwsRoute53CidrCollection version is 0
message AwsRoute53CidrCollection {
  string arn = 1;

  string id = 2;

  string name = 3;

  int64 version = 4;

  map<string, string> for_each = 5 [json_name = "for_each"];

  repeated string depends_on = 6 [json_name = "depends_on"];

  int32 count = 7;

  string provider = 8;

  terraform.v1.Lifecycle lifecycle = 9;
}

// AwsRoute53CidrLocation version is 0
message AwsRoute53CidrLocation {
  repeated string cidr_blocks = 1 [json_name = "cidr_blocks"];

  string cidr_collection_id = 2 [json_name = "cidr_collection_id"];

  string id = 3;

  string name = 4;

  map<string, string> for_each = 5 [json_name = "for_each"];

  repeated string depends_on = 6 [json_name = "depends_on"];

  int32 count = 7;

  string provider = 8;

  terraform.v1.Lifecycle lifecycle = 9;
}

// AwsRoute53DelegationSet version is 0
message AwsRoute53DelegationSet {
  string arn = 1;

  string id = 2;

  repeated string name_servers = 3 [json_name = "name_servers"];

  string reference_name = 4 [json_name = "reference_name"];

  map<string, string> for_each = 5 [json_name = "for_each"];

  repeated string depends_on = 6 [json_name = "depends_on"];

  int32 count = 7;

  string provider = 8;

  terraform.v1.Lifecycle lifecycle = 9;
}

// AwsRoute53HealthCheck version is 0
message AwsRoute53HealthCheck {
  string arn = 1;

  int64 child_health_threshold = 2 [json_name = "child_health_threshold"];

  repeated string child_healthchecks = 3 [json_name = "child_healthchecks"];

  string cloudwatch_alarm_name = 4 [json_name = "cloudwatch_alarm_name"];

  string cloudwatch_alarm_region = 5 [json_name = "cloudwatch_alarm_region"];

  bool disabled = 6;

  bool enable_sni = 7 [json_name = "enable_sni"];

  int64 failure_threshold = 8 [json_name = "failure_threshold"];

  string fqdn = 9;

  string id = 10;

  string insufficient_data_health_status = 11 [json_name = "insufficient_data_health_status"];

  bool invert_healthcheck = 12 [json_name = "invert_healthcheck"];

  string ip_address = 13 [json_name = "ip_address"];

  bool measure_latency = 14 [json_name = "measure_latency"];

  int64 port = 15;

  string reference_name = 16 [json_name = "reference_name"];

  repeated string regions = 17;

  int64 request_interval = 18 [json_name = "request_interval"];

  string resource_path = 19 [json_name = "resource_path"];

  string routing_control_arn = 20 [json_name = "routing_control_arn"];

  string search_string = 21 [json_name = "search_string"];

  map<string, string> tags = 22;

  map<string, string> tags_all = 23 [json_name = "tags_all"];

  string type = 24;

  map<string, string> for_each = 25 [json_name = "for_each"];

  repeated string depends_on = 26 [json_name = "depends_on"];

  int32 count = 27;

  string provider = 28;

  terraform.v1.Lifecycle lifecycle = 29;
}

// AwsRoute53HostedZoneDnssec version is 0
message AwsRoute53HostedZoneDnssec {
  string hosted_zone_id = 1 [json_name = "hosted_zone_id"];

  string id = 2;

  string signing_status = 3 [json_name = "signing_status"];

  map<string, string> for_each = 4 [json_name = "for_each"];

  repeated string depends_on = 5 [json_name = "depends_on"];

  int32 count = 6;

  string provider = 7;

  terraform.v1.Lifecycle lifecycle = 8;
}

// AwsRoute53KeySigningKey version is 0
message AwsRoute53KeySigningKey {
  string digest_algorithm_mnemonic = 1 [json_name = "digest_algorithm_mnemonic"];

  int64 digest_algorithm_type = 2 [json_name = "digest_algorithm_type"];

  string digest_value = 3 [json_name = "digest_value"];

  string dnskey_record = 4 [json_name = "dnskey_record"];

  string ds_record = 5 [json_name = "ds_record"];

  int64 flag = 6;

  string hosted_zone_id = 7 [json_name = "hosted_zone_id"];

  string id = 8;

  string key_management_service_arn = 9 [json_name = "key_management_service_arn"];

  int64 key_tag = 10 [json_name = "key_tag"];

  string name = 11;

  string public_key = 12 [json_name = "public_key"];

  string signing_algorithm_mnemonic = 13 [json_name = "signing_algorithm_mnemonic"];

  int64 signing_algorithm_type = 14 [json_name = "signing_algorithm_type"];

  string status = 15;

  map<string, string> for_each = 16 [json_name = "for_each"];

  repeated string depends_on = 17 [json_name = "depends_on"];

  int32 count = 18;

  string provider = 19;

  terraform.v1.Lifecycle lifecycle = 20;
}

// AwsRoute53QueryLog version is 0
message AwsRoute53QueryLog {
  string arn = 1;

  string cloudwatch_log_group_arn = 2 [json_name = "cloudwatch_log_group_arn"];

  string id = 3;

  string zone_id = 4 [json_name = "zone_id"];

  map<string, string> for_each = 5 [json_name = "for_each"];

  repeated string depends_on = 6 [json_name = "depends_on"];

  int32 count = 7;

  string provider = 8;

  terraform.v1.Lifecycle lifecycle = 9;
}

// AwsRoute53Record version is 2
message AwsRoute53Record {
  bool allow_overwrite = 1 [json_name = "allow_overwrite"];

  string fqdn = 2;

  string health_check_id = 3 [json_name = "health_check_id"];

  string id = 4;

  bool multivalue_answer_routing_policy = 5 [json_name = "multivalue_answer_routing_policy"];

  string name = 6;

  repeated string records = 7;

  string set_identifier = 8 [json_name = "set_identifier"];

  int64 ttl = 9;

  string type = 10;

  string zone_id = 11 [json_name = "zone_id"];

  Alias alias = 12;

  CidrRoutingPolicy cidr_routing_policy = 13 [json_name = "cidr_routing_policy"];

  FailoverRoutingPolicy failover_routing_policy = 14 [json_name = "failover_routing_policy"];

  GeolocationRoutingPolicy geolocation_routing_policy = 15 [json_name = "geolocation_routing_policy"];

  LatencyRoutingPolicy latency_routing_policy = 16 [json_name = "latency_routing_policy"];

  WeightedRoutingPolicy weighted_routing_policy = 17 [json_name = "weighted_routing_policy"];

  map<string, string> for_each = 18 [json_name = "for_each"];

  repeated string depends_on = 19 [json_name = "depends_on"];

  int32 count = 20;

  string provider = 21;

  terraform.v1.Lifecycle lifecycle = 22;

  message Alias {
    bool evaluate_target_health = 1 [json_name = "evaluate_target_health"];

    string name = 2;

    string zone_id = 3 [json_name = "zone_id"];
  }

  message CidrRoutingPolicy {
    string collection_id = 1 [json_name = "collection_id"];

    string location_name = 2 [json_name = "location_name"];
  }

  message FailoverRoutingPolicy {
    string type = 1;
  }

  message GeolocationRoutingPolicy {
    string continent = 1;

    string country = 2;

    string subdivision = 3;
  }

  message LatencyRoutingPolicy {
    string region = 1;
  }

  message WeightedRoutingPolicy {
    int64 weight = 1;
  }
}

// AwsRoute53ResolverConfig version is 0
message AwsRoute53ResolverConfig {
  string autodefined_reverse_flag = 1 [json_name = "autodefined_reverse_flag"];

  string id = 2;

  string owner_id = 3 [json_name = "owner_id"];

  string resource_id = 4 [json_name = "resource_id"];

  map<string, string> for_each = 5 [json_name = "for_each"];

  repeated string depends_on = 6 [json_name = "depends_on"];

  int32 count = 7;

  string provider = 8;

  terraform.v1.Lifecycle lifecycle = 9;
}

// AwsRoute53ResolverDnssecConfig version is 0
message AwsRoute53ResolverDnssecConfig {
  string arn = 1;

  string id = 2;

  string owner_id = 3 [json_name = "owner_id"];

  string resource_id = 4 [json_name = "resource_id"];

  string validation_status = 5 [json_name = "validation_status"];

  map<string, string> for_each = 6 [json_name = "for_each"];

  repeated string depends_on = 7 [json_name = "depends_on"];

  int32 count = 8;

  string provider = 9;

  terraform.v1.Lifecycle lifecycle = 10;
}

// AwsRoute53ResolverEndpoint version is 0
message AwsRoute53ResolverEndpoint {
  string arn = 1;

  string direction = 2;

  string host_vpc_id = 3 [json_name = "host_vpc_id"];

  string id = 4;

  string name = 5;

  repeated string security_group_ids = 6 [json_name = "security_group_ids"];

  map<string, string> tags = 7;

  map<string, string> tags_all = 8 [json_name = "tags_all"];

  repeated IpAddress ip_address = 9 [json_name = "ip_address"];

  repeated Timeouts timeouts = 10;

  map<string, string> for_each = 11 [json_name = "for_each"];

  repeated string depends_on = 12 [json_name = "depends_on"];

  int32 count = 13;

  string provider = 14;

  terraform.v1.Lifecycle lifecycle = 15;

  message IpAddress {
    string ip = 1;

    string ip_id = 2 [json_name = "ip_id"];

    string subnet_id = 3 [json_name = "subnet_id"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

// AwsRoute53ResolverFirewallConfig version is 0
message AwsRoute53ResolverFirewallConfig {
  string firewall_fail_open = 1 [json_name = "firewall_fail_open"];

  string id = 2;

  string owner_id = 3 [json_name = "owner_id"];

  string resource_id = 4 [json_name = "resource_id"];

  map<string, string> for_each = 5 [json_name = "for_each"];

  repeated string depends_on = 6 [json_name = "depends_on"];

  int32 count = 7;

  string provider = 8;

  terraform.v1.Lifecycle lifecycle = 9;
}

// AwsRoute53ResolverFirewallDomainList version is 0
message AwsRoute53ResolverFirewallDomainList {
  string arn = 1;

  repeated string domains = 2;

  string id = 3;

  string name = 4;

  map<string, string> tags = 5;

  map<string, string> tags_all = 6 [json_name = "tags_all"];

  map<string, string> for_each = 7 [json_name = "for_each"];

  repeated string depends_on = 8 [json_name = "depends_on"];

  int32 count = 9;

  string provider = 10;

  terraform.v1.Lifecycle lifecycle = 11;
}

// AwsRoute53ResolverFirewallRule version is 0
message AwsRoute53ResolverFirewallRule {
  string action = 1;

  string block_override_dns_type = 2 [json_name = "block_override_dns_type"];

  string block_override_domain = 3 [json_name = "block_override_domain"];

  int64 block_override_ttl = 4 [json_name = "block_override_ttl"];

  string block_response = 5 [json_name = "block_response"];

  string firewall_domain_list_id = 6 [json_name = "firewall_domain_list_id"];

  string firewall_rule_group_id = 7 [json_name = "firewall_rule_group_id"];

  string id = 8;

  string name = 9;

  int64 priority = 10;

  map<string, string> for_each = 11 [json_name = "for_each"];

  repeated string depends_on = 12 [json_name = "depends_on"];

  int32 count = 13;

  string provider = 14;

  terraform.v1.Lifecycle lifecycle = 15;
}

// AwsRoute53ResolverFirewallRuleGroup version is 0
message AwsRoute53ResolverFirewallRuleGroup {
  string arn = 1;

  string id = 2;

  string name = 3;

  string owner_id = 4 [json_name = "owner_id"];

  string share_status = 5 [json_name = "share_status"];

  map<string, string> tags = 6;

  map<string, string> tags_all = 7 [json_name = "tags_all"];

  map<string, string> for_each = 8 [json_name = "for_each"];

  repeated string depends_on = 9 [json_name = "depends_on"];

  int32 count = 10;

  string provider = 11;

  terraform.v1.Lifecycle lifecycle = 12;
}

// AwsRoute53ResolverFirewallRuleGroupAssociation version is 0
message AwsRoute53ResolverFirewallRuleGroupAssociation {
  string arn = 1;

  string firewall_rule_group_id = 2 [json_name = "firewall_rule_group_id"];

  string id = 3;

  string mutation_protection = 4 [json_name = "mutation_protection"];

  string name = 5;

  int64 priority = 6;

  map<string, string> tags = 7;

  map<string, string> tags_all = 8 [json_name = "tags_all"];

  string vpc_id = 9 [json_name = "vpc_id"];

  map<string, string> for_each = 10 [json_name = "for_each"];

  repeated string depends_on = 11 [json_name = "depends_on"];

  int32 count = 12;

  string provider = 13;

  terraform.v1.Lifecycle lifecycle = 14;
}

// AwsRoute53ResolverQueryLogConfig version is 0
message AwsRoute53ResolverQueryLogConfig {
  string arn = 1;

  string destination_arn = 2 [json_name = "destination_arn"];

  string id = 3;

  string name = 4;

  string owner_id = 5 [json_name = "owner_id"];

  string share_status = 6 [json_name = "share_status"];

  map<string, string> tags = 7;

  map<string, string> tags_all = 8 [json_name = "tags_all"];

  map<string, string> for_each = 9 [json_name = "for_each"];

  repeated string depends_on = 10 [json_name = "depends_on"];

  int32 count = 11;

  string provider = 12;

  terraform.v1.Lifecycle lifecycle = 13;
}

// AwsRoute53ResolverQueryLogConfigAssociation version is 0
message AwsRoute53ResolverQueryLogConfigAssociation {
  string id = 1;

  string resolver_query_log_config_id = 2 [json_name = "resolver_query_log_config_id"];

  string resource_id = 3 [json_name = "resource_id"];

  map<string, string> for_each = 4 [json_name = "for_each"];

  repeated string depends_on = 5 [json_name = "depends_on"];

  int32 count = 6;

  string provider = 7;

  terraform.v1.Lifecycle lifecycle = 8;
}

// AwsRoute53ResolverRule version is 0
message AwsRoute53ResolverRule {
  string arn = 1;

  string domain_name = 2 [json_name = "domain_name"];

  string id = 3;

  string name = 4;

  string owner_id = 5 [json_name = "owner_id"];

  string resolver_endpoint_id = 6 [json_name = "resolver_endpoint_id"];

  string rule_type = 7 [json_name = "rule_type"];

  string share_status = 8 [json_name = "share_status"];

  map<string, string> tags = 9;

  map<string, string> tags_all = 10 [json_name = "tags_all"];

  repeated TargetIp target_ip = 11 [json_name = "target_ip"];

  repeated Timeouts timeouts = 12;

  map<string, string> for_each = 13 [json_name = "for_each"];

  repeated string depends_on = 14 [json_name = "depends_on"];

  int32 count = 15;

  string provider = 16;

  terraform.v1.Lifecycle lifecycle = 17;

  message TargetIp {
    string ip = 1;

    int64 port = 2;
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

// AwsRoute53ResolverRuleAssociation version is 0
message AwsRoute53ResolverRuleAssociation {
  string id = 1;

  string name = 2;

  string resolver_rule_id = 3 [json_name = "resolver_rule_id"];

  string vpc_id = 4 [json_name = "vpc_id"];

  repeated Timeouts timeouts = 5;

  map<string, string> for_each = 6 [json_name = "for_each"];

  repeated string depends_on = 7 [json_name = "depends_on"];

  int32 count = 8;

  string provider = 9;

  terraform.v1.Lifecycle lifecycle = 10;

  message Timeouts {
    string create = 1;

    string delete = 2;
  }
}

// AwsRoute53TrafficPolicy version is 0
message AwsRoute53TrafficPolicy {
  string comment = 1;

  string document = 2;

  string id = 3;

  string name = 4;

  string type = 5;

  int64 version = 6;

  map<string, string> for_each = 7 [json_name = "for_each"];

  repeated string depends_on = 8 [json_name = "depends_on"];

  int32 count = 9;

  string provider = 10;

  terraform.v1.Lifecycle lifecycle = 11;
}

// AwsRoute53TrafficPolicyInstance version is 0
message AwsRoute53TrafficPolicyInstance {
  string hosted_zone_id = 1 [json_name = "hosted_zone_id"];

  string id = 2;

  string name = 3;

  string traffic_policy_id = 4 [json_name = "traffic_policy_id"];

  int64 traffic_policy_version = 5 [json_name = "traffic_policy_version"];

  int64 ttl = 6;

  map<string, string> for_each = 7 [json_name = "for_each"];

  repeated string depends_on = 8 [json_name = "depends_on"];

  int32 count = 9;

  string provider = 10;

  terraform.v1.Lifecycle lifecycle = 11;
}

// AwsRoute53VpcAssociationAuthorization version is 0
message AwsRoute53VpcAssociationAuthorization {
  string id = 1;

  string vpc_id = 2 [json_name = "vpc_id"];

  string vpc_region = 3 [json_name = "vpc_region"];

  string zone_id = 4 [json_name = "zone_id"];

  map<string, string> for_each = 5 [json_name = "for_each"];

  repeated string depends_on = 6 [json_name = "depends_on"];

  int32 count = 7;

  string provider = 8;

  terraform.v1.Lifecycle lifecycle = 9;
}

// AwsRoute53Zone version is 0
message AwsRoute53Zone {
  string arn = 1;

  string comment = 2;

  string delegation_set_id = 3 [json_name = "delegation_set_id"];

  bool force_destroy = 4 [json_name = "force_destroy"];

  string id = 5;

  string name = 6;

  repeated string name_servers = 7 [json_name = "name_servers"];

  string primary_name_server = 8 [json_name = "primary_name_server"];

  map<string, string> tags = 9;

  map<string, string> tags_all = 10 [json_name = "tags_all"];

  string zone_id = 11 [json_name = "zone_id"];

  repeated Vpc vpc = 12;

  map<string, string> for_each = 13 [json_name = "for_each"];

  repeated string depends_on = 14 [json_name = "depends_on"];

  int32 count = 15;

  string provider = 16;

  terraform.v1.Lifecycle lifecycle = 17;

  message Vpc {
    string vpc_id = 1 [json_name = "vpc_id"];

    string vpc_region = 2 [json_name = "vpc_region"];
  }
}

// AwsRoute53ZoneAssociation version is 0
message AwsRoute53ZoneAssociation {
  string id = 1;

  string owning_account = 2 [json_name = "owning_account"];

  string vpc_id = 3 [json_name = "vpc_id"];

  string vpc_region = 4 [json_name = "vpc_region"];

  string zone_id = 5 [json_name = "zone_id"];

  map<string, string> for_each = 6 [json_name = "for_each"];

  repeated string depends_on = 7 [json_name = "depends_on"];

  int32 count = 8;

  string provider = 9;

  terraform.v1.Lifecycle lifecycle = 10;
}
