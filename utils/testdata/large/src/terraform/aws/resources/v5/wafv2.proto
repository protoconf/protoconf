syntax = "proto3";

// Provider: aws 5.2.0
package terraform.aws.resources.v5;

import "terraform/v1/meta.proto";

// AwsWafv2IpSet version is 0
message AwsWafv2IpSet {
  repeated string addresses = 1;

  string arn = 2;

  string description = 3;

  string id = 4;

  string ip_address_version = 5 [json_name = "ip_address_version"];

  string lock_token = 6 [json_name = "lock_token"];

  string name = 7;

  string scope = 8;

  map<string, string> tags = 9;

  map<string, string> tags_all = 10 [json_name = "tags_all"];

  map<string, string> for_each = 11 [json_name = "for_each"];

  repeated string depends_on = 12 [json_name = "depends_on"];

  int32 count = 13;

  string provider = 14;

  terraform.v1.Lifecycle lifecycle = 15;
}

// AwsWafv2RegexPatternSet version is 0
message AwsWafv2RegexPatternSet {
  string arn = 1;

  string description = 2;

  string id = 3;

  string lock_token = 4 [json_name = "lock_token"];

  string name = 5;

  string scope = 6;

  map<string, string> tags = 7;

  map<string, string> tags_all = 8 [json_name = "tags_all"];

  repeated RegularExpression regular_expression = 9 [json_name = "regular_expression"];

  map<string, string> for_each = 10 [json_name = "for_each"];

  repeated string depends_on = 11 [json_name = "depends_on"];

  int32 count = 12;

  string provider = 13;

  terraform.v1.Lifecycle lifecycle = 14;

  message RegularExpression {
    string regex_string = 1 [json_name = "regex_string"];
  }
}

// AwsWafv2RuleGroup version is 0
message AwsWafv2RuleGroup {
  string arn = 1;

  int64 capacity = 2;

  string description = 3;

  string id = 4;

  string lock_token = 5 [json_name = "lock_token"];

  string name = 6;

  string scope = 7;

  map<string, string> tags = 8;

  map<string, string> tags_all = 9 [json_name = "tags_all"];

  repeated CustomResponseBody custom_response_body = 10 [json_name = "custom_response_body"];

  repeated Rule rule = 11;

  VisibilityConfig visibility_config = 12 [json_name = "visibility_config"];

  map<string, string> for_each = 13 [json_name = "for_each"];

  repeated string depends_on = 14 [json_name = "depends_on"];

  int32 count = 15;

  string provider = 16;

  terraform.v1.Lifecycle lifecycle = 17;

  message CustomResponseBody {
    string content = 1;

    string content_type = 2 [json_name = "content_type"];

    string key = 3;
  }

  message Rule {
    string name = 1;

    int64 priority = 2;

    Action action = 3;

    CaptchaConfig captcha_config = 4 [json_name = "captcha_config"];

    repeated RuleLabel rule_label = 5 [json_name = "rule_label"];

    Statement statement = 6;

    VisibilityConfig visibility_config = 7 [json_name = "visibility_config"];

    message Action {
      Allow allow = 1;

      Block block = 2;

      Captcha captcha = 3;

      Challenge challenge = 4;

      Count count = 5;

      message Allow {
        CustomRequestHandling custom_request_handling = 1 [json_name = "custom_request_handling"];

        message CustomRequestHandling {
          repeated InsertHeader insert_header = 1 [json_name = "insert_header"];

          message InsertHeader {
            string name = 1;

            string value = 2;
          }
        }
      }

      message Block {
        CustomResponse custom_response = 1 [json_name = "custom_response"];

        message CustomResponse {
          string custom_response_body_key = 1 [json_name = "custom_response_body_key"];

          int64 response_code = 2 [json_name = "response_code"];

          repeated ResponseHeader response_header = 3 [json_name = "response_header"];

          message ResponseHeader {
            string name = 1;

            string value = 2;
          }
        }
      }

      message Captcha {
        CustomRequestHandling custom_request_handling = 1 [json_name = "custom_request_handling"];

        message CustomRequestHandling {
          repeated InsertHeader insert_header = 1 [json_name = "insert_header"];

          message InsertHeader {
            string name = 1;

            string value = 2;
          }
        }
      }

      message Challenge {
        CustomRequestHandling custom_request_handling = 1 [json_name = "custom_request_handling"];

        message CustomRequestHandling {
          repeated InsertHeader insert_header = 1 [json_name = "insert_header"];

          message InsertHeader {
            string name = 1;

            string value = 2;
          }
        }
      }

      message Count {
        CustomRequestHandling custom_request_handling = 1 [json_name = "custom_request_handling"];

        message CustomRequestHandling {
          repeated InsertHeader insert_header = 1 [json_name = "insert_header"];

          message InsertHeader {
            string name = 1;

            string value = 2;
          }
        }
      }
    }

    message CaptchaConfig {
      ImmunityTimeProperty immunity_time_property = 1 [json_name = "immunity_time_property"];

      message ImmunityTimeProperty {
        int64 immunity_time = 1 [json_name = "immunity_time"];
      }
    }

    message RuleLabel {
      string name = 1;
    }

    message Statement {
      AndStatement and_statement = 1 [json_name = "and_statement"];

      ByteMatchStatement byte_match_statement = 2 [json_name = "byte_match_statement"];

      GeoMatchStatement geo_match_statement = 3 [json_name = "geo_match_statement"];

      IpSetReferenceStatement ip_set_reference_statement = 4 [json_name = "ip_set_reference_statement"];

      LabelMatchStatement label_match_statement = 5 [json_name = "label_match_statement"];

      NotStatement not_statement = 6 [json_name = "not_statement"];

      OrStatement or_statement = 7 [json_name = "or_statement"];

      RateBasedStatement rate_based_statement = 8 [json_name = "rate_based_statement"];

      RegexMatchStatement regex_match_statement = 9 [json_name = "regex_match_statement"];

      RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 10 [
        json_name = "regex_pattern_set_reference_statement"
      ];

      SizeConstraintStatement size_constraint_statement = 11 [json_name = "size_constraint_statement"];

      SqliMatchStatement sqli_match_statement = 12 [json_name = "sqli_match_statement"];

      XssMatchStatement xss_match_statement = 13 [json_name = "xss_match_statement"];

      message AndStatement {
        repeated Statement statement = 1;

        message Statement {
          AndStatement and_statement = 1 [json_name = "and_statement"];

          ByteMatchStatement byte_match_statement = 2 [json_name = "byte_match_statement"];

          GeoMatchStatement geo_match_statement = 3 [json_name = "geo_match_statement"];

          IpSetReferenceStatement ip_set_reference_statement = 4 [json_name = "ip_set_reference_statement"];

          LabelMatchStatement label_match_statement = 5 [json_name = "label_match_statement"];

          NotStatement not_statement = 6 [json_name = "not_statement"];

          OrStatement or_statement = 7 [json_name = "or_statement"];

          RegexMatchStatement regex_match_statement = 8 [json_name = "regex_match_statement"];

          RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 9 [
            json_name = "regex_pattern_set_reference_statement"
          ];

          SizeConstraintStatement size_constraint_statement = 10 [json_name = "size_constraint_statement"];

          SqliMatchStatement sqli_match_statement = 11 [json_name = "sqli_match_statement"];

          XssMatchStatement xss_match_statement = 12 [json_name = "xss_match_statement"];

          message AndStatement {
            repeated Statement statement = 1;

            message Statement {
              AndStatement and_statement = 1 [json_name = "and_statement"];

              ByteMatchStatement byte_match_statement = 2 [json_name = "byte_match_statement"];

              GeoMatchStatement geo_match_statement = 3 [json_name = "geo_match_statement"];

              IpSetReferenceStatement ip_set_reference_statement = 4 [json_name = "ip_set_reference_statement"];

              LabelMatchStatement label_match_statement = 5 [json_name = "label_match_statement"];

              NotStatement not_statement = 6 [json_name = "not_statement"];

              OrStatement or_statement = 7 [json_name = "or_statement"];

              RegexMatchStatement regex_match_statement = 8 [json_name = "regex_match_statement"];

              RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 9 [
                json_name = "regex_pattern_set_reference_statement"
              ];

              SizeConstraintStatement size_constraint_statement = 10 [json_name = "size_constraint_statement"];

              SqliMatchStatement sqli_match_statement = 11 [json_name = "sqli_match_statement"];

              XssMatchStatement xss_match_statement = 12 [json_name = "xss_match_statement"];

              message AndStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message ByteMatchStatement {
                string positional_constraint = 1 [json_name = "positional_constraint"];

                string search_string = 2 [json_name = "search_string"];

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message GeoMatchStatement {
                repeated string country_codes = 1 [json_name = "country_codes"];

                ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                message ForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];
                }
              }

              message IpSetReferenceStatement {
                string arn = 1;

                IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                message IpSetForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];

                  string position = 3;
                }
              }

              message LabelMatchStatement {
                string key = 1;

                string scope = 2;
              }

              message NotStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message OrStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message RegexMatchStatement {
                string regex_string = 1 [json_name = "regex_string"];

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message RegexPatternSetReferenceStatement {
                string arn = 1;

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SizeConstraintStatement {
                string comparison_operator = 1 [json_name = "comparison_operator"];

                int64 size = 2;

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SqliMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message XssMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }
            }
          }

          message ByteMatchStatement {
            string positional_constraint = 1 [json_name = "positional_constraint"];

            string search_string = 2 [json_name = "search_string"];

            FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Cookies cookies = 3;

              repeated Headers headers = 4;

              JsonBody json_body = 5 [json_name = "json_body"];

              Method method = 6;

              QueryString query_string = 7 [json_name = "query_string"];

              SingleHeader single_header = 8 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

              UriPath uri_path = 10 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
                string oversize_handling = 1 [json_name = "oversize_handling"];
              }

              message Cookies {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                  repeated string included_cookies = 2 [json_name = "included_cookies"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message Headers {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                  repeated string included_headers = 2 [json_name = "included_headers"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message JsonBody {
                string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                string match_scope = 2 [json_name = "match_scope"];

                string oversize_handling = 3 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string included_paths = 1 [json_name = "included_paths"];

                  All all = 2;

                  message All {
                  }
                }
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message GeoMatchStatement {
            repeated string country_codes = 1 [json_name = "country_codes"];

            ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

            message ForwardedIpConfig {
              string fallback_behavior = 1 [json_name = "fallback_behavior"];

              string header_name = 2 [json_name = "header_name"];
            }
          }

          message IpSetReferenceStatement {
            string arn = 1;

            IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

            message IpSetForwardedIpConfig {
              string fallback_behavior = 1 [json_name = "fallback_behavior"];

              string header_name = 2 [json_name = "header_name"];

              string position = 3;
            }
          }

          message LabelMatchStatement {
            string key = 1;

            string scope = 2;
          }

          message NotStatement {
            repeated Statement statement = 1;

            message Statement {
              AndStatement and_statement = 1 [json_name = "and_statement"];

              ByteMatchStatement byte_match_statement = 2 [json_name = "byte_match_statement"];

              GeoMatchStatement geo_match_statement = 3 [json_name = "geo_match_statement"];

              IpSetReferenceStatement ip_set_reference_statement = 4 [json_name = "ip_set_reference_statement"];

              LabelMatchStatement label_match_statement = 5 [json_name = "label_match_statement"];

              NotStatement not_statement = 6 [json_name = "not_statement"];

              OrStatement or_statement = 7 [json_name = "or_statement"];

              RegexMatchStatement regex_match_statement = 8 [json_name = "regex_match_statement"];

              RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 9 [
                json_name = "regex_pattern_set_reference_statement"
              ];

              SizeConstraintStatement size_constraint_statement = 10 [json_name = "size_constraint_statement"];

              SqliMatchStatement sqli_match_statement = 11 [json_name = "sqli_match_statement"];

              XssMatchStatement xss_match_statement = 12 [json_name = "xss_match_statement"];

              message AndStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message ByteMatchStatement {
                string positional_constraint = 1 [json_name = "positional_constraint"];

                string search_string = 2 [json_name = "search_string"];

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message GeoMatchStatement {
                repeated string country_codes = 1 [json_name = "country_codes"];

                ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                message ForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];
                }
              }

              message IpSetReferenceStatement {
                string arn = 1;

                IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                message IpSetForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];

                  string position = 3;
                }
              }

              message LabelMatchStatement {
                string key = 1;

                string scope = 2;
              }

              message NotStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message OrStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message RegexMatchStatement {
                string regex_string = 1 [json_name = "regex_string"];

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message RegexPatternSetReferenceStatement {
                string arn = 1;

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SizeConstraintStatement {
                string comparison_operator = 1 [json_name = "comparison_operator"];

                int64 size = 2;

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SqliMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message XssMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }
            }
          }

          message OrStatement {
            repeated Statement statement = 1;

            message Statement {
              AndStatement and_statement = 1 [json_name = "and_statement"];

              ByteMatchStatement byte_match_statement = 2 [json_name = "byte_match_statement"];

              GeoMatchStatement geo_match_statement = 3 [json_name = "geo_match_statement"];

              IpSetReferenceStatement ip_set_reference_statement = 4 [json_name = "ip_set_reference_statement"];

              LabelMatchStatement label_match_statement = 5 [json_name = "label_match_statement"];

              NotStatement not_statement = 6 [json_name = "not_statement"];

              OrStatement or_statement = 7 [json_name = "or_statement"];

              RegexMatchStatement regex_match_statement = 8 [json_name = "regex_match_statement"];

              RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 9 [
                json_name = "regex_pattern_set_reference_statement"
              ];

              SizeConstraintStatement size_constraint_statement = 10 [json_name = "size_constraint_statement"];

              SqliMatchStatement sqli_match_statement = 11 [json_name = "sqli_match_statement"];

              XssMatchStatement xss_match_statement = 12 [json_name = "xss_match_statement"];

              message AndStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message ByteMatchStatement {
                string positional_constraint = 1 [json_name = "positional_constraint"];

                string search_string = 2 [json_name = "search_string"];

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message GeoMatchStatement {
                repeated string country_codes = 1 [json_name = "country_codes"];

                ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                message ForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];
                }
              }

              message IpSetReferenceStatement {
                string arn = 1;

                IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                message IpSetForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];

                  string position = 3;
                }
              }

              message LabelMatchStatement {
                string key = 1;

                string scope = 2;
              }

              message NotStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message OrStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message RegexMatchStatement {
                string regex_string = 1 [json_name = "regex_string"];

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message RegexPatternSetReferenceStatement {
                string arn = 1;

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SizeConstraintStatement {
                string comparison_operator = 1 [json_name = "comparison_operator"];

                int64 size = 2;

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SqliMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message XssMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }
            }
          }

          message RegexMatchStatement {
            string regex_string = 1 [json_name = "regex_string"];

            FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Cookies cookies = 3;

              repeated Headers headers = 4;

              JsonBody json_body = 5 [json_name = "json_body"];

              Method method = 6;

              QueryString query_string = 7 [json_name = "query_string"];

              SingleHeader single_header = 8 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

              UriPath uri_path = 10 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
                string oversize_handling = 1 [json_name = "oversize_handling"];
              }

              message Cookies {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                  repeated string included_cookies = 2 [json_name = "included_cookies"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message Headers {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                  repeated string included_headers = 2 [json_name = "included_headers"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message JsonBody {
                string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                string match_scope = 2 [json_name = "match_scope"];

                string oversize_handling = 3 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string included_paths = 1 [json_name = "included_paths"];

                  All all = 2;

                  message All {
                  }
                }
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message RegexPatternSetReferenceStatement {
            string arn = 1;

            FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Cookies cookies = 3;

              repeated Headers headers = 4;

              JsonBody json_body = 5 [json_name = "json_body"];

              Method method = 6;

              QueryString query_string = 7 [json_name = "query_string"];

              SingleHeader single_header = 8 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

              UriPath uri_path = 10 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
                string oversize_handling = 1 [json_name = "oversize_handling"];
              }

              message Cookies {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                  repeated string included_cookies = 2 [json_name = "included_cookies"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message Headers {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                  repeated string included_headers = 2 [json_name = "included_headers"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message JsonBody {
                string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                string match_scope = 2 [json_name = "match_scope"];

                string oversize_handling = 3 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string included_paths = 1 [json_name = "included_paths"];

                  All all = 2;

                  message All {
                  }
                }
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message SizeConstraintStatement {
            string comparison_operator = 1 [json_name = "comparison_operator"];

            int64 size = 2;

            FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Cookies cookies = 3;

              repeated Headers headers = 4;

              JsonBody json_body = 5 [json_name = "json_body"];

              Method method = 6;

              QueryString query_string = 7 [json_name = "query_string"];

              SingleHeader single_header = 8 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

              UriPath uri_path = 10 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
                string oversize_handling = 1 [json_name = "oversize_handling"];
              }

              message Cookies {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                  repeated string included_cookies = 2 [json_name = "included_cookies"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message Headers {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                  repeated string included_headers = 2 [json_name = "included_headers"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message JsonBody {
                string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                string match_scope = 2 [json_name = "match_scope"];

                string oversize_handling = 3 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string included_paths = 1 [json_name = "included_paths"];

                  All all = 2;

                  message All {
                  }
                }
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message SqliMatchStatement {
            FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Cookies cookies = 3;

              repeated Headers headers = 4;

              JsonBody json_body = 5 [json_name = "json_body"];

              Method method = 6;

              QueryString query_string = 7 [json_name = "query_string"];

              SingleHeader single_header = 8 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

              UriPath uri_path = 10 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
                string oversize_handling = 1 [json_name = "oversize_handling"];
              }

              message Cookies {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                  repeated string included_cookies = 2 [json_name = "included_cookies"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message Headers {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                  repeated string included_headers = 2 [json_name = "included_headers"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message JsonBody {
                string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                string match_scope = 2 [json_name = "match_scope"];

                string oversize_handling = 3 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string included_paths = 1 [json_name = "included_paths"];

                  All all = 2;

                  message All {
                  }
                }
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message XssMatchStatement {
            FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Cookies cookies = 3;

              repeated Headers headers = 4;

              JsonBody json_body = 5 [json_name = "json_body"];

              Method method = 6;

              QueryString query_string = 7 [json_name = "query_string"];

              SingleHeader single_header = 8 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

              UriPath uri_path = 10 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
                string oversize_handling = 1 [json_name = "oversize_handling"];
              }

              message Cookies {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                  repeated string included_cookies = 2 [json_name = "included_cookies"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message Headers {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                  repeated string included_headers = 2 [json_name = "included_headers"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message JsonBody {
                string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                string match_scope = 2 [json_name = "match_scope"];

                string oversize_handling = 3 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string included_paths = 1 [json_name = "included_paths"];

                  All all = 2;

                  message All {
                  }
                }
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }
        }
      }

      message ByteMatchStatement {
        string positional_constraint = 1 [json_name = "positional_constraint"];

        string search_string = 2 [json_name = "search_string"];

        FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

        repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

        message FieldToMatch {
          AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

          Body body = 2;

          Cookies cookies = 3;

          repeated Headers headers = 4;

          JsonBody json_body = 5 [json_name = "json_body"];

          Method method = 6;

          QueryString query_string = 7 [json_name = "query_string"];

          SingleHeader single_header = 8 [json_name = "single_header"];

          SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

          UriPath uri_path = 10 [json_name = "uri_path"];

          message AllQueryArguments {
          }

          message Body {
            string oversize_handling = 1 [json_name = "oversize_handling"];
          }

          message Cookies {
            string match_scope = 1 [json_name = "match_scope"];

            string oversize_handling = 2 [json_name = "oversize_handling"];

            repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

            message MatchPattern {
              repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

              repeated string included_cookies = 2 [json_name = "included_cookies"];

              All all = 3;

              message All {
              }
            }
          }

          message Headers {
            string match_scope = 1 [json_name = "match_scope"];

            string oversize_handling = 2 [json_name = "oversize_handling"];

            MatchPattern match_pattern = 3 [json_name = "match_pattern"];

            message MatchPattern {
              repeated string excluded_headers = 1 [json_name = "excluded_headers"];

              repeated string included_headers = 2 [json_name = "included_headers"];

              All all = 3;

              message All {
              }
            }
          }

          message JsonBody {
            string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

            string match_scope = 2 [json_name = "match_scope"];

            string oversize_handling = 3 [json_name = "oversize_handling"];

            MatchPattern match_pattern = 4 [json_name = "match_pattern"];

            message MatchPattern {
              repeated string included_paths = 1 [json_name = "included_paths"];

              All all = 2;

              message All {
              }
            }
          }

          message Method {
          }

          message QueryString {
          }

          message SingleHeader {
            string name = 1;
          }

          message SingleQueryArgument {
            string name = 1;
          }

          message UriPath {
          }
        }

        message TextTransformation {
          int64 priority = 1;

          string type = 2;
        }
      }

      message GeoMatchStatement {
        repeated string country_codes = 1 [json_name = "country_codes"];

        ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

        message ForwardedIpConfig {
          string fallback_behavior = 1 [json_name = "fallback_behavior"];

          string header_name = 2 [json_name = "header_name"];
        }
      }

      message IpSetReferenceStatement {
        string arn = 1;

        IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

        message IpSetForwardedIpConfig {
          string fallback_behavior = 1 [json_name = "fallback_behavior"];

          string header_name = 2 [json_name = "header_name"];

          string position = 3;
        }
      }

      message LabelMatchStatement {
        string key = 1;

        string scope = 2;
      }

      message NotStatement {
        repeated Statement statement = 1;

        message Statement {
          AndStatement and_statement = 1 [json_name = "and_statement"];

          ByteMatchStatement byte_match_statement = 2 [json_name = "byte_match_statement"];

          GeoMatchStatement geo_match_statement = 3 [json_name = "geo_match_statement"];

          IpSetReferenceStatement ip_set_reference_statement = 4 [json_name = "ip_set_reference_statement"];

          LabelMatchStatement label_match_statement = 5 [json_name = "label_match_statement"];

          NotStatement not_statement = 6 [json_name = "not_statement"];

          OrStatement or_statement = 7 [json_name = "or_statement"];

          RegexMatchStatement regex_match_statement = 8 [json_name = "regex_match_statement"];

          RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 9 [
            json_name = "regex_pattern_set_reference_statement"
          ];

          SizeConstraintStatement size_constraint_statement = 10 [json_name = "size_constraint_statement"];

          SqliMatchStatement sqli_match_statement = 11 [json_name = "sqli_match_statement"];

          XssMatchStatement xss_match_statement = 12 [json_name = "xss_match_statement"];

          message AndStatement {
            repeated Statement statement = 1;

            message Statement {
              AndStatement and_statement = 1 [json_name = "and_statement"];

              ByteMatchStatement byte_match_statement = 2 [json_name = "byte_match_statement"];

              GeoMatchStatement geo_match_statement = 3 [json_name = "geo_match_statement"];

              IpSetReferenceStatement ip_set_reference_statement = 4 [json_name = "ip_set_reference_statement"];

              LabelMatchStatement label_match_statement = 5 [json_name = "label_match_statement"];

              NotStatement not_statement = 6 [json_name = "not_statement"];

              OrStatement or_statement = 7 [json_name = "or_statement"];

              RegexMatchStatement regex_match_statement = 8 [json_name = "regex_match_statement"];

              RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 9 [
                json_name = "regex_pattern_set_reference_statement"
              ];

              SizeConstraintStatement size_constraint_statement = 10 [json_name = "size_constraint_statement"];

              SqliMatchStatement sqli_match_statement = 11 [json_name = "sqli_match_statement"];

              XssMatchStatement xss_match_statement = 12 [json_name = "xss_match_statement"];

              message AndStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message ByteMatchStatement {
                string positional_constraint = 1 [json_name = "positional_constraint"];

                string search_string = 2 [json_name = "search_string"];

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message GeoMatchStatement {
                repeated string country_codes = 1 [json_name = "country_codes"];

                ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                message ForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];
                }
              }

              message IpSetReferenceStatement {
                string arn = 1;

                IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                message IpSetForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];

                  string position = 3;
                }
              }

              message LabelMatchStatement {
                string key = 1;

                string scope = 2;
              }

              message NotStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message OrStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message RegexMatchStatement {
                string regex_string = 1 [json_name = "regex_string"];

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message RegexPatternSetReferenceStatement {
                string arn = 1;

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SizeConstraintStatement {
                string comparison_operator = 1 [json_name = "comparison_operator"];

                int64 size = 2;

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SqliMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message XssMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }
            }
          }

          message ByteMatchStatement {
            string positional_constraint = 1 [json_name = "positional_constraint"];

            string search_string = 2 [json_name = "search_string"];

            FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Cookies cookies = 3;

              repeated Headers headers = 4;

              JsonBody json_body = 5 [json_name = "json_body"];

              Method method = 6;

              QueryString query_string = 7 [json_name = "query_string"];

              SingleHeader single_header = 8 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

              UriPath uri_path = 10 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
                string oversize_handling = 1 [json_name = "oversize_handling"];
              }

              message Cookies {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                  repeated string included_cookies = 2 [json_name = "included_cookies"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message Headers {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                  repeated string included_headers = 2 [json_name = "included_headers"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message JsonBody {
                string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                string match_scope = 2 [json_name = "match_scope"];

                string oversize_handling = 3 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string included_paths = 1 [json_name = "included_paths"];

                  All all = 2;

                  message All {
                  }
                }
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message GeoMatchStatement {
            repeated string country_codes = 1 [json_name = "country_codes"];

            ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

            message ForwardedIpConfig {
              string fallback_behavior = 1 [json_name = "fallback_behavior"];

              string header_name = 2 [json_name = "header_name"];
            }
          }

          message IpSetReferenceStatement {
            string arn = 1;

            IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

            message IpSetForwardedIpConfig {
              string fallback_behavior = 1 [json_name = "fallback_behavior"];

              string header_name = 2 [json_name = "header_name"];

              string position = 3;
            }
          }

          message LabelMatchStatement {
            string key = 1;

            string scope = 2;
          }

          message NotStatement {
            repeated Statement statement = 1;

            message Statement {
              AndStatement and_statement = 1 [json_name = "and_statement"];

              ByteMatchStatement byte_match_statement = 2 [json_name = "byte_match_statement"];

              GeoMatchStatement geo_match_statement = 3 [json_name = "geo_match_statement"];

              IpSetReferenceStatement ip_set_reference_statement = 4 [json_name = "ip_set_reference_statement"];

              LabelMatchStatement label_match_statement = 5 [json_name = "label_match_statement"];

              NotStatement not_statement = 6 [json_name = "not_statement"];

              OrStatement or_statement = 7 [json_name = "or_statement"];

              RegexMatchStatement regex_match_statement = 8 [json_name = "regex_match_statement"];

              RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 9 [
                json_name = "regex_pattern_set_reference_statement"
              ];

              SizeConstraintStatement size_constraint_statement = 10 [json_name = "size_constraint_statement"];

              SqliMatchStatement sqli_match_statement = 11 [json_name = "sqli_match_statement"];

              XssMatchStatement xss_match_statement = 12 [json_name = "xss_match_statement"];

              message AndStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message ByteMatchStatement {
                string positional_constraint = 1 [json_name = "positional_constraint"];

                string search_string = 2 [json_name = "search_string"];

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message GeoMatchStatement {
                repeated string country_codes = 1 [json_name = "country_codes"];

                ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                message ForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];
                }
              }

              message IpSetReferenceStatement {
                string arn = 1;

                IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                message IpSetForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];

                  string position = 3;
                }
              }

              message LabelMatchStatement {
                string key = 1;

                string scope = 2;
              }

              message NotStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message OrStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message RegexMatchStatement {
                string regex_string = 1 [json_name = "regex_string"];

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message RegexPatternSetReferenceStatement {
                string arn = 1;

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SizeConstraintStatement {
                string comparison_operator = 1 [json_name = "comparison_operator"];

                int64 size = 2;

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SqliMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message XssMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }
            }
          }

          message OrStatement {
            repeated Statement statement = 1;

            message Statement {
              AndStatement and_statement = 1 [json_name = "and_statement"];

              ByteMatchStatement byte_match_statement = 2 [json_name = "byte_match_statement"];

              GeoMatchStatement geo_match_statement = 3 [json_name = "geo_match_statement"];

              IpSetReferenceStatement ip_set_reference_statement = 4 [json_name = "ip_set_reference_statement"];

              LabelMatchStatement label_match_statement = 5 [json_name = "label_match_statement"];

              NotStatement not_statement = 6 [json_name = "not_statement"];

              OrStatement or_statement = 7 [json_name = "or_statement"];

              RegexMatchStatement regex_match_statement = 8 [json_name = "regex_match_statement"];

              RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 9 [
                json_name = "regex_pattern_set_reference_statement"
              ];

              SizeConstraintStatement size_constraint_statement = 10 [json_name = "size_constraint_statement"];

              SqliMatchStatement sqli_match_statement = 11 [json_name = "sqli_match_statement"];

              XssMatchStatement xss_match_statement = 12 [json_name = "xss_match_statement"];

              message AndStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message ByteMatchStatement {
                string positional_constraint = 1 [json_name = "positional_constraint"];

                string search_string = 2 [json_name = "search_string"];

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message GeoMatchStatement {
                repeated string country_codes = 1 [json_name = "country_codes"];

                ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                message ForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];
                }
              }

              message IpSetReferenceStatement {
                string arn = 1;

                IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                message IpSetForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];

                  string position = 3;
                }
              }

              message LabelMatchStatement {
                string key = 1;

                string scope = 2;
              }

              message NotStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message OrStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message RegexMatchStatement {
                string regex_string = 1 [json_name = "regex_string"];

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message RegexPatternSetReferenceStatement {
                string arn = 1;

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SizeConstraintStatement {
                string comparison_operator = 1 [json_name = "comparison_operator"];

                int64 size = 2;

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SqliMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message XssMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }
            }
          }

          message RegexMatchStatement {
            string regex_string = 1 [json_name = "regex_string"];

            FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Cookies cookies = 3;

              repeated Headers headers = 4;

              JsonBody json_body = 5 [json_name = "json_body"];

              Method method = 6;

              QueryString query_string = 7 [json_name = "query_string"];

              SingleHeader single_header = 8 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

              UriPath uri_path = 10 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
                string oversize_handling = 1 [json_name = "oversize_handling"];
              }

              message Cookies {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                  repeated string included_cookies = 2 [json_name = "included_cookies"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message Headers {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                  repeated string included_headers = 2 [json_name = "included_headers"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message JsonBody {
                string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                string match_scope = 2 [json_name = "match_scope"];

                string oversize_handling = 3 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string included_paths = 1 [json_name = "included_paths"];

                  All all = 2;

                  message All {
                  }
                }
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message RegexPatternSetReferenceStatement {
            string arn = 1;

            FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Cookies cookies = 3;

              repeated Headers headers = 4;

              JsonBody json_body = 5 [json_name = "json_body"];

              Method method = 6;

              QueryString query_string = 7 [json_name = "query_string"];

              SingleHeader single_header = 8 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

              UriPath uri_path = 10 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
                string oversize_handling = 1 [json_name = "oversize_handling"];
              }

              message Cookies {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                  repeated string included_cookies = 2 [json_name = "included_cookies"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message Headers {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                  repeated string included_headers = 2 [json_name = "included_headers"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message JsonBody {
                string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                string match_scope = 2 [json_name = "match_scope"];

                string oversize_handling = 3 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string included_paths = 1 [json_name = "included_paths"];

                  All all = 2;

                  message All {
                  }
                }
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message SizeConstraintStatement {
            string comparison_operator = 1 [json_name = "comparison_operator"];

            int64 size = 2;

            FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Cookies cookies = 3;

              repeated Headers headers = 4;

              JsonBody json_body = 5 [json_name = "json_body"];

              Method method = 6;

              QueryString query_string = 7 [json_name = "query_string"];

              SingleHeader single_header = 8 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

              UriPath uri_path = 10 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
                string oversize_handling = 1 [json_name = "oversize_handling"];
              }

              message Cookies {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                  repeated string included_cookies = 2 [json_name = "included_cookies"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message Headers {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                  repeated string included_headers = 2 [json_name = "included_headers"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message JsonBody {
                string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                string match_scope = 2 [json_name = "match_scope"];

                string oversize_handling = 3 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string included_paths = 1 [json_name = "included_paths"];

                  All all = 2;

                  message All {
                  }
                }
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message SqliMatchStatement {
            FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Cookies cookies = 3;

              repeated Headers headers = 4;

              JsonBody json_body = 5 [json_name = "json_body"];

              Method method = 6;

              QueryString query_string = 7 [json_name = "query_string"];

              SingleHeader single_header = 8 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

              UriPath uri_path = 10 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
                string oversize_handling = 1 [json_name = "oversize_handling"];
              }

              message Cookies {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                  repeated string included_cookies = 2 [json_name = "included_cookies"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message Headers {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                  repeated string included_headers = 2 [json_name = "included_headers"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message JsonBody {
                string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                string match_scope = 2 [json_name = "match_scope"];

                string oversize_handling = 3 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string included_paths = 1 [json_name = "included_paths"];

                  All all = 2;

                  message All {
                  }
                }
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message XssMatchStatement {
            FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Cookies cookies = 3;

              repeated Headers headers = 4;

              JsonBody json_body = 5 [json_name = "json_body"];

              Method method = 6;

              QueryString query_string = 7 [json_name = "query_string"];

              SingleHeader single_header = 8 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

              UriPath uri_path = 10 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
                string oversize_handling = 1 [json_name = "oversize_handling"];
              }

              message Cookies {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                  repeated string included_cookies = 2 [json_name = "included_cookies"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message Headers {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                  repeated string included_headers = 2 [json_name = "included_headers"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message JsonBody {
                string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                string match_scope = 2 [json_name = "match_scope"];

                string oversize_handling = 3 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string included_paths = 1 [json_name = "included_paths"];

                  All all = 2;

                  message All {
                  }
                }
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }
        }
      }

      message OrStatement {
        repeated Statement statement = 1;

        message Statement {
          AndStatement and_statement = 1 [json_name = "and_statement"];

          ByteMatchStatement byte_match_statement = 2 [json_name = "byte_match_statement"];

          GeoMatchStatement geo_match_statement = 3 [json_name = "geo_match_statement"];

          IpSetReferenceStatement ip_set_reference_statement = 4 [json_name = "ip_set_reference_statement"];

          LabelMatchStatement label_match_statement = 5 [json_name = "label_match_statement"];

          NotStatement not_statement = 6 [json_name = "not_statement"];

          OrStatement or_statement = 7 [json_name = "or_statement"];

          RegexMatchStatement regex_match_statement = 8 [json_name = "regex_match_statement"];

          RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 9 [
            json_name = "regex_pattern_set_reference_statement"
          ];

          SizeConstraintStatement size_constraint_statement = 10 [json_name = "size_constraint_statement"];

          SqliMatchStatement sqli_match_statement = 11 [json_name = "sqli_match_statement"];

          XssMatchStatement xss_match_statement = 12 [json_name = "xss_match_statement"];

          message AndStatement {
            repeated Statement statement = 1;

            message Statement {
              AndStatement and_statement = 1 [json_name = "and_statement"];

              ByteMatchStatement byte_match_statement = 2 [json_name = "byte_match_statement"];

              GeoMatchStatement geo_match_statement = 3 [json_name = "geo_match_statement"];

              IpSetReferenceStatement ip_set_reference_statement = 4 [json_name = "ip_set_reference_statement"];

              LabelMatchStatement label_match_statement = 5 [json_name = "label_match_statement"];

              NotStatement not_statement = 6 [json_name = "not_statement"];

              OrStatement or_statement = 7 [json_name = "or_statement"];

              RegexMatchStatement regex_match_statement = 8 [json_name = "regex_match_statement"];

              RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 9 [
                json_name = "regex_pattern_set_reference_statement"
              ];

              SizeConstraintStatement size_constraint_statement = 10 [json_name = "size_constraint_statement"];

              SqliMatchStatement sqli_match_statement = 11 [json_name = "sqli_match_statement"];

              XssMatchStatement xss_match_statement = 12 [json_name = "xss_match_statement"];

              message AndStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message ByteMatchStatement {
                string positional_constraint = 1 [json_name = "positional_constraint"];

                string search_string = 2 [json_name = "search_string"];

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message GeoMatchStatement {
                repeated string country_codes = 1 [json_name = "country_codes"];

                ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                message ForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];
                }
              }

              message IpSetReferenceStatement {
                string arn = 1;

                IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                message IpSetForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];

                  string position = 3;
                }
              }

              message LabelMatchStatement {
                string key = 1;

                string scope = 2;
              }

              message NotStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message OrStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message RegexMatchStatement {
                string regex_string = 1 [json_name = "regex_string"];

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message RegexPatternSetReferenceStatement {
                string arn = 1;

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SizeConstraintStatement {
                string comparison_operator = 1 [json_name = "comparison_operator"];

                int64 size = 2;

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SqliMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message XssMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }
            }
          }

          message ByteMatchStatement {
            string positional_constraint = 1 [json_name = "positional_constraint"];

            string search_string = 2 [json_name = "search_string"];

            FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Cookies cookies = 3;

              repeated Headers headers = 4;

              JsonBody json_body = 5 [json_name = "json_body"];

              Method method = 6;

              QueryString query_string = 7 [json_name = "query_string"];

              SingleHeader single_header = 8 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

              UriPath uri_path = 10 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
                string oversize_handling = 1 [json_name = "oversize_handling"];
              }

              message Cookies {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                  repeated string included_cookies = 2 [json_name = "included_cookies"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message Headers {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                  repeated string included_headers = 2 [json_name = "included_headers"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message JsonBody {
                string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                string match_scope = 2 [json_name = "match_scope"];

                string oversize_handling = 3 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string included_paths = 1 [json_name = "included_paths"];

                  All all = 2;

                  message All {
                  }
                }
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message GeoMatchStatement {
            repeated string country_codes = 1 [json_name = "country_codes"];

            ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

            message ForwardedIpConfig {
              string fallback_behavior = 1 [json_name = "fallback_behavior"];

              string header_name = 2 [json_name = "header_name"];
            }
          }

          message IpSetReferenceStatement {
            string arn = 1;

            IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

            message IpSetForwardedIpConfig {
              string fallback_behavior = 1 [json_name = "fallback_behavior"];

              string header_name = 2 [json_name = "header_name"];

              string position = 3;
            }
          }

          message LabelMatchStatement {
            string key = 1;

            string scope = 2;
          }

          message NotStatement {
            repeated Statement statement = 1;

            message Statement {
              AndStatement and_statement = 1 [json_name = "and_statement"];

              ByteMatchStatement byte_match_statement = 2 [json_name = "byte_match_statement"];

              GeoMatchStatement geo_match_statement = 3 [json_name = "geo_match_statement"];

              IpSetReferenceStatement ip_set_reference_statement = 4 [json_name = "ip_set_reference_statement"];

              LabelMatchStatement label_match_statement = 5 [json_name = "label_match_statement"];

              NotStatement not_statement = 6 [json_name = "not_statement"];

              OrStatement or_statement = 7 [json_name = "or_statement"];

              RegexMatchStatement regex_match_statement = 8 [json_name = "regex_match_statement"];

              RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 9 [
                json_name = "regex_pattern_set_reference_statement"
              ];

              SizeConstraintStatement size_constraint_statement = 10 [json_name = "size_constraint_statement"];

              SqliMatchStatement sqli_match_statement = 11 [json_name = "sqli_match_statement"];

              XssMatchStatement xss_match_statement = 12 [json_name = "xss_match_statement"];

              message AndStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message ByteMatchStatement {
                string positional_constraint = 1 [json_name = "positional_constraint"];

                string search_string = 2 [json_name = "search_string"];

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message GeoMatchStatement {
                repeated string country_codes = 1 [json_name = "country_codes"];

                ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                message ForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];
                }
              }

              message IpSetReferenceStatement {
                string arn = 1;

                IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                message IpSetForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];

                  string position = 3;
                }
              }

              message LabelMatchStatement {
                string key = 1;

                string scope = 2;
              }

              message NotStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message OrStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message RegexMatchStatement {
                string regex_string = 1 [json_name = "regex_string"];

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message RegexPatternSetReferenceStatement {
                string arn = 1;

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SizeConstraintStatement {
                string comparison_operator = 1 [json_name = "comparison_operator"];

                int64 size = 2;

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SqliMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message XssMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }
            }
          }

          message OrStatement {
            repeated Statement statement = 1;

            message Statement {
              AndStatement and_statement = 1 [json_name = "and_statement"];

              ByteMatchStatement byte_match_statement = 2 [json_name = "byte_match_statement"];

              GeoMatchStatement geo_match_statement = 3 [json_name = "geo_match_statement"];

              IpSetReferenceStatement ip_set_reference_statement = 4 [json_name = "ip_set_reference_statement"];

              LabelMatchStatement label_match_statement = 5 [json_name = "label_match_statement"];

              NotStatement not_statement = 6 [json_name = "not_statement"];

              OrStatement or_statement = 7 [json_name = "or_statement"];

              RegexMatchStatement regex_match_statement = 8 [json_name = "regex_match_statement"];

              RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 9 [
                json_name = "regex_pattern_set_reference_statement"
              ];

              SizeConstraintStatement size_constraint_statement = 10 [json_name = "size_constraint_statement"];

              SqliMatchStatement sqli_match_statement = 11 [json_name = "sqli_match_statement"];

              XssMatchStatement xss_match_statement = 12 [json_name = "xss_match_statement"];

              message AndStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message ByteMatchStatement {
                string positional_constraint = 1 [json_name = "positional_constraint"];

                string search_string = 2 [json_name = "search_string"];

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message GeoMatchStatement {
                repeated string country_codes = 1 [json_name = "country_codes"];

                ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                message ForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];
                }
              }

              message IpSetReferenceStatement {
                string arn = 1;

                IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                message IpSetForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];

                  string position = 3;
                }
              }

              message LabelMatchStatement {
                string key = 1;

                string scope = 2;
              }

              message NotStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message OrStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message RegexMatchStatement {
                string regex_string = 1 [json_name = "regex_string"];

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message RegexPatternSetReferenceStatement {
                string arn = 1;

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SizeConstraintStatement {
                string comparison_operator = 1 [json_name = "comparison_operator"];

                int64 size = 2;

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SqliMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message XssMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }
            }
          }

          message RegexMatchStatement {
            string regex_string = 1 [json_name = "regex_string"];

            FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Cookies cookies = 3;

              repeated Headers headers = 4;

              JsonBody json_body = 5 [json_name = "json_body"];

              Method method = 6;

              QueryString query_string = 7 [json_name = "query_string"];

              SingleHeader single_header = 8 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

              UriPath uri_path = 10 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
                string oversize_handling = 1 [json_name = "oversize_handling"];
              }

              message Cookies {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                  repeated string included_cookies = 2 [json_name = "included_cookies"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message Headers {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                  repeated string included_headers = 2 [json_name = "included_headers"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message JsonBody {
                string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                string match_scope = 2 [json_name = "match_scope"];

                string oversize_handling = 3 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string included_paths = 1 [json_name = "included_paths"];

                  All all = 2;

                  message All {
                  }
                }
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message RegexPatternSetReferenceStatement {
            string arn = 1;

            FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Cookies cookies = 3;

              repeated Headers headers = 4;

              JsonBody json_body = 5 [json_name = "json_body"];

              Method method = 6;

              QueryString query_string = 7 [json_name = "query_string"];

              SingleHeader single_header = 8 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

              UriPath uri_path = 10 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
                string oversize_handling = 1 [json_name = "oversize_handling"];
              }

              message Cookies {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                  repeated string included_cookies = 2 [json_name = "included_cookies"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message Headers {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                  repeated string included_headers = 2 [json_name = "included_headers"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message JsonBody {
                string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                string match_scope = 2 [json_name = "match_scope"];

                string oversize_handling = 3 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string included_paths = 1 [json_name = "included_paths"];

                  All all = 2;

                  message All {
                  }
                }
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message SizeConstraintStatement {
            string comparison_operator = 1 [json_name = "comparison_operator"];

            int64 size = 2;

            FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Cookies cookies = 3;

              repeated Headers headers = 4;

              JsonBody json_body = 5 [json_name = "json_body"];

              Method method = 6;

              QueryString query_string = 7 [json_name = "query_string"];

              SingleHeader single_header = 8 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

              UriPath uri_path = 10 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
                string oversize_handling = 1 [json_name = "oversize_handling"];
              }

              message Cookies {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                  repeated string included_cookies = 2 [json_name = "included_cookies"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message Headers {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                  repeated string included_headers = 2 [json_name = "included_headers"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message JsonBody {
                string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                string match_scope = 2 [json_name = "match_scope"];

                string oversize_handling = 3 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string included_paths = 1 [json_name = "included_paths"];

                  All all = 2;

                  message All {
                  }
                }
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message SqliMatchStatement {
            FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Cookies cookies = 3;

              repeated Headers headers = 4;

              JsonBody json_body = 5 [json_name = "json_body"];

              Method method = 6;

              QueryString query_string = 7 [json_name = "query_string"];

              SingleHeader single_header = 8 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

              UriPath uri_path = 10 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
                string oversize_handling = 1 [json_name = "oversize_handling"];
              }

              message Cookies {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                  repeated string included_cookies = 2 [json_name = "included_cookies"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message Headers {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                  repeated string included_headers = 2 [json_name = "included_headers"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message JsonBody {
                string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                string match_scope = 2 [json_name = "match_scope"];

                string oversize_handling = 3 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string included_paths = 1 [json_name = "included_paths"];

                  All all = 2;

                  message All {
                  }
                }
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message XssMatchStatement {
            FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Cookies cookies = 3;

              repeated Headers headers = 4;

              JsonBody json_body = 5 [json_name = "json_body"];

              Method method = 6;

              QueryString query_string = 7 [json_name = "query_string"];

              SingleHeader single_header = 8 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

              UriPath uri_path = 10 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
                string oversize_handling = 1 [json_name = "oversize_handling"];
              }

              message Cookies {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                  repeated string included_cookies = 2 [json_name = "included_cookies"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message Headers {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                  repeated string included_headers = 2 [json_name = "included_headers"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message JsonBody {
                string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                string match_scope = 2 [json_name = "match_scope"];

                string oversize_handling = 3 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string included_paths = 1 [json_name = "included_paths"];

                  All all = 2;

                  message All {
                  }
                }
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }
        }
      }

      message RateBasedStatement {
        string aggregate_key_type = 1 [json_name = "aggregate_key_type"];

        int64 limit = 2;

        ForwardedIpConfig forwarded_ip_config = 3 [json_name = "forwarded_ip_config"];

        ScopeDownStatement scope_down_statement = 4 [json_name = "scope_down_statement"];

        message ForwardedIpConfig {
          string fallback_behavior = 1 [json_name = "fallback_behavior"];

          string header_name = 2 [json_name = "header_name"];
        }

        message ScopeDownStatement {
          AndStatement and_statement = 1 [json_name = "and_statement"];

          ByteMatchStatement byte_match_statement = 2 [json_name = "byte_match_statement"];

          GeoMatchStatement geo_match_statement = 3 [json_name = "geo_match_statement"];

          IpSetReferenceStatement ip_set_reference_statement = 4 [json_name = "ip_set_reference_statement"];

          LabelMatchStatement label_match_statement = 5 [json_name = "label_match_statement"];

          NotStatement not_statement = 6 [json_name = "not_statement"];

          OrStatement or_statement = 7 [json_name = "or_statement"];

          RegexMatchStatement regex_match_statement = 8 [json_name = "regex_match_statement"];

          RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 9 [
            json_name = "regex_pattern_set_reference_statement"
          ];

          SizeConstraintStatement size_constraint_statement = 10 [json_name = "size_constraint_statement"];

          SqliMatchStatement sqli_match_statement = 11 [json_name = "sqli_match_statement"];

          XssMatchStatement xss_match_statement = 12 [json_name = "xss_match_statement"];

          message AndStatement {
            repeated Statement statement = 1;

            message Statement {
              AndStatement and_statement = 1 [json_name = "and_statement"];

              ByteMatchStatement byte_match_statement = 2 [json_name = "byte_match_statement"];

              GeoMatchStatement geo_match_statement = 3 [json_name = "geo_match_statement"];

              IpSetReferenceStatement ip_set_reference_statement = 4 [json_name = "ip_set_reference_statement"];

              LabelMatchStatement label_match_statement = 5 [json_name = "label_match_statement"];

              NotStatement not_statement = 6 [json_name = "not_statement"];

              OrStatement or_statement = 7 [json_name = "or_statement"];

              RegexMatchStatement regex_match_statement = 8 [json_name = "regex_match_statement"];

              RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 9 [
                json_name = "regex_pattern_set_reference_statement"
              ];

              SizeConstraintStatement size_constraint_statement = 10 [json_name = "size_constraint_statement"];

              SqliMatchStatement sqli_match_statement = 11 [json_name = "sqli_match_statement"];

              XssMatchStatement xss_match_statement = 12 [json_name = "xss_match_statement"];

              message AndStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message ByteMatchStatement {
                string positional_constraint = 1 [json_name = "positional_constraint"];

                string search_string = 2 [json_name = "search_string"];

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message GeoMatchStatement {
                repeated string country_codes = 1 [json_name = "country_codes"];

                ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                message ForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];
                }
              }

              message IpSetReferenceStatement {
                string arn = 1;

                IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                message IpSetForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];

                  string position = 3;
                }
              }

              message LabelMatchStatement {
                string key = 1;

                string scope = 2;
              }

              message NotStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message OrStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message RegexMatchStatement {
                string regex_string = 1 [json_name = "regex_string"];

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message RegexPatternSetReferenceStatement {
                string arn = 1;

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SizeConstraintStatement {
                string comparison_operator = 1 [json_name = "comparison_operator"];

                int64 size = 2;

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SqliMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message XssMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }
            }
          }

          message ByteMatchStatement {
            string positional_constraint = 1 [json_name = "positional_constraint"];

            string search_string = 2 [json_name = "search_string"];

            FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Cookies cookies = 3;

              repeated Headers headers = 4;

              JsonBody json_body = 5 [json_name = "json_body"];

              Method method = 6;

              QueryString query_string = 7 [json_name = "query_string"];

              SingleHeader single_header = 8 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

              UriPath uri_path = 10 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
                string oversize_handling = 1 [json_name = "oversize_handling"];
              }

              message Cookies {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                  repeated string included_cookies = 2 [json_name = "included_cookies"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message Headers {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                  repeated string included_headers = 2 [json_name = "included_headers"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message JsonBody {
                string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                string match_scope = 2 [json_name = "match_scope"];

                string oversize_handling = 3 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string included_paths = 1 [json_name = "included_paths"];

                  All all = 2;

                  message All {
                  }
                }
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message GeoMatchStatement {
            repeated string country_codes = 1 [json_name = "country_codes"];

            ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

            message ForwardedIpConfig {
              string fallback_behavior = 1 [json_name = "fallback_behavior"];

              string header_name = 2 [json_name = "header_name"];
            }
          }

          message IpSetReferenceStatement {
            string arn = 1;

            IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

            message IpSetForwardedIpConfig {
              string fallback_behavior = 1 [json_name = "fallback_behavior"];

              string header_name = 2 [json_name = "header_name"];

              string position = 3;
            }
          }

          message LabelMatchStatement {
            string key = 1;

            string scope = 2;
          }

          message NotStatement {
            repeated Statement statement = 1;

            message Statement {
              AndStatement and_statement = 1 [json_name = "and_statement"];

              ByteMatchStatement byte_match_statement = 2 [json_name = "byte_match_statement"];

              GeoMatchStatement geo_match_statement = 3 [json_name = "geo_match_statement"];

              IpSetReferenceStatement ip_set_reference_statement = 4 [json_name = "ip_set_reference_statement"];

              LabelMatchStatement label_match_statement = 5 [json_name = "label_match_statement"];

              NotStatement not_statement = 6 [json_name = "not_statement"];

              OrStatement or_statement = 7 [json_name = "or_statement"];

              RegexMatchStatement regex_match_statement = 8 [json_name = "regex_match_statement"];

              RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 9 [
                json_name = "regex_pattern_set_reference_statement"
              ];

              SizeConstraintStatement size_constraint_statement = 10 [json_name = "size_constraint_statement"];

              SqliMatchStatement sqli_match_statement = 11 [json_name = "sqli_match_statement"];

              XssMatchStatement xss_match_statement = 12 [json_name = "xss_match_statement"];

              message AndStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message ByteMatchStatement {
                string positional_constraint = 1 [json_name = "positional_constraint"];

                string search_string = 2 [json_name = "search_string"];

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message GeoMatchStatement {
                repeated string country_codes = 1 [json_name = "country_codes"];

                ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                message ForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];
                }
              }

              message IpSetReferenceStatement {
                string arn = 1;

                IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                message IpSetForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];

                  string position = 3;
                }
              }

              message LabelMatchStatement {
                string key = 1;

                string scope = 2;
              }

              message NotStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message OrStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message RegexMatchStatement {
                string regex_string = 1 [json_name = "regex_string"];

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message RegexPatternSetReferenceStatement {
                string arn = 1;

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SizeConstraintStatement {
                string comparison_operator = 1 [json_name = "comparison_operator"];

                int64 size = 2;

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SqliMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message XssMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }
            }
          }

          message OrStatement {
            repeated Statement statement = 1;

            message Statement {
              AndStatement and_statement = 1 [json_name = "and_statement"];

              ByteMatchStatement byte_match_statement = 2 [json_name = "byte_match_statement"];

              GeoMatchStatement geo_match_statement = 3 [json_name = "geo_match_statement"];

              IpSetReferenceStatement ip_set_reference_statement = 4 [json_name = "ip_set_reference_statement"];

              LabelMatchStatement label_match_statement = 5 [json_name = "label_match_statement"];

              NotStatement not_statement = 6 [json_name = "not_statement"];

              OrStatement or_statement = 7 [json_name = "or_statement"];

              RegexMatchStatement regex_match_statement = 8 [json_name = "regex_match_statement"];

              RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 9 [
                json_name = "regex_pattern_set_reference_statement"
              ];

              SizeConstraintStatement size_constraint_statement = 10 [json_name = "size_constraint_statement"];

              SqliMatchStatement sqli_match_statement = 11 [json_name = "sqli_match_statement"];

              XssMatchStatement xss_match_statement = 12 [json_name = "xss_match_statement"];

              message AndStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message ByteMatchStatement {
                string positional_constraint = 1 [json_name = "positional_constraint"];

                string search_string = 2 [json_name = "search_string"];

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message GeoMatchStatement {
                repeated string country_codes = 1 [json_name = "country_codes"];

                ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                message ForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];
                }
              }

              message IpSetReferenceStatement {
                string arn = 1;

                IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                message IpSetForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];

                  string position = 3;
                }
              }

              message LabelMatchStatement {
                string key = 1;

                string scope = 2;
              }

              message NotStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message OrStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message RegexMatchStatement {
                string regex_string = 1 [json_name = "regex_string"];

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message RegexPatternSetReferenceStatement {
                string arn = 1;

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SizeConstraintStatement {
                string comparison_operator = 1 [json_name = "comparison_operator"];

                int64 size = 2;

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SqliMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message XssMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }
            }
          }

          message RegexMatchStatement {
            string regex_string = 1 [json_name = "regex_string"];

            FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Cookies cookies = 3;

              repeated Headers headers = 4;

              JsonBody json_body = 5 [json_name = "json_body"];

              Method method = 6;

              QueryString query_string = 7 [json_name = "query_string"];

              SingleHeader single_header = 8 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

              UriPath uri_path = 10 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
                string oversize_handling = 1 [json_name = "oversize_handling"];
              }

              message Cookies {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                  repeated string included_cookies = 2 [json_name = "included_cookies"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message Headers {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                  repeated string included_headers = 2 [json_name = "included_headers"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message JsonBody {
                string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                string match_scope = 2 [json_name = "match_scope"];

                string oversize_handling = 3 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string included_paths = 1 [json_name = "included_paths"];

                  All all = 2;

                  message All {
                  }
                }
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message RegexPatternSetReferenceStatement {
            string arn = 1;

            FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Cookies cookies = 3;

              repeated Headers headers = 4;

              JsonBody json_body = 5 [json_name = "json_body"];

              Method method = 6;

              QueryString query_string = 7 [json_name = "query_string"];

              SingleHeader single_header = 8 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

              UriPath uri_path = 10 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
                string oversize_handling = 1 [json_name = "oversize_handling"];
              }

              message Cookies {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                  repeated string included_cookies = 2 [json_name = "included_cookies"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message Headers {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                  repeated string included_headers = 2 [json_name = "included_headers"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message JsonBody {
                string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                string match_scope = 2 [json_name = "match_scope"];

                string oversize_handling = 3 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string included_paths = 1 [json_name = "included_paths"];

                  All all = 2;

                  message All {
                  }
                }
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message SizeConstraintStatement {
            string comparison_operator = 1 [json_name = "comparison_operator"];

            int64 size = 2;

            FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Cookies cookies = 3;

              repeated Headers headers = 4;

              JsonBody json_body = 5 [json_name = "json_body"];

              Method method = 6;

              QueryString query_string = 7 [json_name = "query_string"];

              SingleHeader single_header = 8 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

              UriPath uri_path = 10 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
                string oversize_handling = 1 [json_name = "oversize_handling"];
              }

              message Cookies {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                  repeated string included_cookies = 2 [json_name = "included_cookies"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message Headers {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                  repeated string included_headers = 2 [json_name = "included_headers"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message JsonBody {
                string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                string match_scope = 2 [json_name = "match_scope"];

                string oversize_handling = 3 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string included_paths = 1 [json_name = "included_paths"];

                  All all = 2;

                  message All {
                  }
                }
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message SqliMatchStatement {
            FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Cookies cookies = 3;

              repeated Headers headers = 4;

              JsonBody json_body = 5 [json_name = "json_body"];

              Method method = 6;

              QueryString query_string = 7 [json_name = "query_string"];

              SingleHeader single_header = 8 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

              UriPath uri_path = 10 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
                string oversize_handling = 1 [json_name = "oversize_handling"];
              }

              message Cookies {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                  repeated string included_cookies = 2 [json_name = "included_cookies"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message Headers {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                  repeated string included_headers = 2 [json_name = "included_headers"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message JsonBody {
                string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                string match_scope = 2 [json_name = "match_scope"];

                string oversize_handling = 3 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string included_paths = 1 [json_name = "included_paths"];

                  All all = 2;

                  message All {
                  }
                }
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message XssMatchStatement {
            FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Cookies cookies = 3;

              repeated Headers headers = 4;

              JsonBody json_body = 5 [json_name = "json_body"];

              Method method = 6;

              QueryString query_string = 7 [json_name = "query_string"];

              SingleHeader single_header = 8 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

              UriPath uri_path = 10 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
                string oversize_handling = 1 [json_name = "oversize_handling"];
              }

              message Cookies {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                  repeated string included_cookies = 2 [json_name = "included_cookies"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message Headers {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                  repeated string included_headers = 2 [json_name = "included_headers"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message JsonBody {
                string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                string match_scope = 2 [json_name = "match_scope"];

                string oversize_handling = 3 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string included_paths = 1 [json_name = "included_paths"];

                  All all = 2;

                  message All {
                  }
                }
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }
        }
      }

      message RegexMatchStatement {
        string regex_string = 1 [json_name = "regex_string"];

        FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

        repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

        message FieldToMatch {
          AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

          Body body = 2;

          Cookies cookies = 3;

          repeated Headers headers = 4;

          JsonBody json_body = 5 [json_name = "json_body"];

          Method method = 6;

          QueryString query_string = 7 [json_name = "query_string"];

          SingleHeader single_header = 8 [json_name = "single_header"];

          SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

          UriPath uri_path = 10 [json_name = "uri_path"];

          message AllQueryArguments {
          }

          message Body {
            string oversize_handling = 1 [json_name = "oversize_handling"];
          }

          message Cookies {
            string match_scope = 1 [json_name = "match_scope"];

            string oversize_handling = 2 [json_name = "oversize_handling"];

            repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

            message MatchPattern {
              repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

              repeated string included_cookies = 2 [json_name = "included_cookies"];

              All all = 3;

              message All {
              }
            }
          }

          message Headers {
            string match_scope = 1 [json_name = "match_scope"];

            string oversize_handling = 2 [json_name = "oversize_handling"];

            MatchPattern match_pattern = 3 [json_name = "match_pattern"];

            message MatchPattern {
              repeated string excluded_headers = 1 [json_name = "excluded_headers"];

              repeated string included_headers = 2 [json_name = "included_headers"];

              All all = 3;

              message All {
              }
            }
          }

          message JsonBody {
            string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

            string match_scope = 2 [json_name = "match_scope"];

            string oversize_handling = 3 [json_name = "oversize_handling"];

            MatchPattern match_pattern = 4 [json_name = "match_pattern"];

            message MatchPattern {
              repeated string included_paths = 1 [json_name = "included_paths"];

              All all = 2;

              message All {
              }
            }
          }

          message Method {
          }

          message QueryString {
          }

          message SingleHeader {
            string name = 1;
          }

          message SingleQueryArgument {
            string name = 1;
          }

          message UriPath {
          }
        }

        message TextTransformation {
          int64 priority = 1;

          string type = 2;
        }
      }

      message RegexPatternSetReferenceStatement {
        string arn = 1;

        FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

        repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

        message FieldToMatch {
          AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

          Body body = 2;

          Cookies cookies = 3;

          repeated Headers headers = 4;

          JsonBody json_body = 5 [json_name = "json_body"];

          Method method = 6;

          QueryString query_string = 7 [json_name = "query_string"];

          SingleHeader single_header = 8 [json_name = "single_header"];

          SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

          UriPath uri_path = 10 [json_name = "uri_path"];

          message AllQueryArguments {
          }

          message Body {
            string oversize_handling = 1 [json_name = "oversize_handling"];
          }

          message Cookies {
            string match_scope = 1 [json_name = "match_scope"];

            string oversize_handling = 2 [json_name = "oversize_handling"];

            repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

            message MatchPattern {
              repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

              repeated string included_cookies = 2 [json_name = "included_cookies"];

              All all = 3;

              message All {
              }
            }
          }

          message Headers {
            string match_scope = 1 [json_name = "match_scope"];

            string oversize_handling = 2 [json_name = "oversize_handling"];

            MatchPattern match_pattern = 3 [json_name = "match_pattern"];

            message MatchPattern {
              repeated string excluded_headers = 1 [json_name = "excluded_headers"];

              repeated string included_headers = 2 [json_name = "included_headers"];

              All all = 3;

              message All {
              }
            }
          }

          message JsonBody {
            string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

            string match_scope = 2 [json_name = "match_scope"];

            string oversize_handling = 3 [json_name = "oversize_handling"];

            MatchPattern match_pattern = 4 [json_name = "match_pattern"];

            message MatchPattern {
              repeated string included_paths = 1 [json_name = "included_paths"];

              All all = 2;

              message All {
              }
            }
          }

          message Method {
          }

          message QueryString {
          }

          message SingleHeader {
            string name = 1;
          }

          message SingleQueryArgument {
            string name = 1;
          }

          message UriPath {
          }
        }

        message TextTransformation {
          int64 priority = 1;

          string type = 2;
        }
      }

      message SizeConstraintStatement {
        string comparison_operator = 1 [json_name = "comparison_operator"];

        int64 size = 2;

        FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

        repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

        message FieldToMatch {
          AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

          Body body = 2;

          Cookies cookies = 3;

          repeated Headers headers = 4;

          JsonBody json_body = 5 [json_name = "json_body"];

          Method method = 6;

          QueryString query_string = 7 [json_name = "query_string"];

          SingleHeader single_header = 8 [json_name = "single_header"];

          SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

          UriPath uri_path = 10 [json_name = "uri_path"];

          message AllQueryArguments {
          }

          message Body {
            string oversize_handling = 1 [json_name = "oversize_handling"];
          }

          message Cookies {
            string match_scope = 1 [json_name = "match_scope"];

            string oversize_handling = 2 [json_name = "oversize_handling"];

            repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

            message MatchPattern {
              repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

              repeated string included_cookies = 2 [json_name = "included_cookies"];

              All all = 3;

              message All {
              }
            }
          }

          message Headers {
            string match_scope = 1 [json_name = "match_scope"];

            string oversize_handling = 2 [json_name = "oversize_handling"];

            MatchPattern match_pattern = 3 [json_name = "match_pattern"];

            message MatchPattern {
              repeated string excluded_headers = 1 [json_name = "excluded_headers"];

              repeated string included_headers = 2 [json_name = "included_headers"];

              All all = 3;

              message All {
              }
            }
          }

          message JsonBody {
            string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

            string match_scope = 2 [json_name = "match_scope"];

            string oversize_handling = 3 [json_name = "oversize_handling"];

            MatchPattern match_pattern = 4 [json_name = "match_pattern"];

            message MatchPattern {
              repeated string included_paths = 1 [json_name = "included_paths"];

              All all = 2;

              message All {
              }
            }
          }

          message Method {
          }

          message QueryString {
          }

          message SingleHeader {
            string name = 1;
          }

          message SingleQueryArgument {
            string name = 1;
          }

          message UriPath {
          }
        }

        message TextTransformation {
          int64 priority = 1;

          string type = 2;
        }
      }

      message SqliMatchStatement {
        FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

        repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

        message FieldToMatch {
          AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

          Body body = 2;

          Cookies cookies = 3;

          repeated Headers headers = 4;

          JsonBody json_body = 5 [json_name = "json_body"];

          Method method = 6;

          QueryString query_string = 7 [json_name = "query_string"];

          SingleHeader single_header = 8 [json_name = "single_header"];

          SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

          UriPath uri_path = 10 [json_name = "uri_path"];

          message AllQueryArguments {
          }

          message Body {
            string oversize_handling = 1 [json_name = "oversize_handling"];
          }

          message Cookies {
            string match_scope = 1 [json_name = "match_scope"];

            string oversize_handling = 2 [json_name = "oversize_handling"];

            repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

            message MatchPattern {
              repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

              repeated string included_cookies = 2 [json_name = "included_cookies"];

              All all = 3;

              message All {
              }
            }
          }

          message Headers {
            string match_scope = 1 [json_name = "match_scope"];

            string oversize_handling = 2 [json_name = "oversize_handling"];

            MatchPattern match_pattern = 3 [json_name = "match_pattern"];

            message MatchPattern {
              repeated string excluded_headers = 1 [json_name = "excluded_headers"];

              repeated string included_headers = 2 [json_name = "included_headers"];

              All all = 3;

              message All {
              }
            }
          }

          message JsonBody {
            string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

            string match_scope = 2 [json_name = "match_scope"];

            string oversize_handling = 3 [json_name = "oversize_handling"];

            MatchPattern match_pattern = 4 [json_name = "match_pattern"];

            message MatchPattern {
              repeated string included_paths = 1 [json_name = "included_paths"];

              All all = 2;

              message All {
              }
            }
          }

          message Method {
          }

          message QueryString {
          }

          message SingleHeader {
            string name = 1;
          }

          message SingleQueryArgument {
            string name = 1;
          }

          message UriPath {
          }
        }

        message TextTransformation {
          int64 priority = 1;

          string type = 2;
        }
      }

      message XssMatchStatement {
        FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

        repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

        message FieldToMatch {
          AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

          Body body = 2;

          Cookies cookies = 3;

          repeated Headers headers = 4;

          JsonBody json_body = 5 [json_name = "json_body"];

          Method method = 6;

          QueryString query_string = 7 [json_name = "query_string"];

          SingleHeader single_header = 8 [json_name = "single_header"];

          SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

          UriPath uri_path = 10 [json_name = "uri_path"];

          message AllQueryArguments {
          }

          message Body {
            string oversize_handling = 1 [json_name = "oversize_handling"];
          }

          message Cookies {
            string match_scope = 1 [json_name = "match_scope"];

            string oversize_handling = 2 [json_name = "oversize_handling"];

            repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

            message MatchPattern {
              repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

              repeated string included_cookies = 2 [json_name = "included_cookies"];

              All all = 3;

              message All {
              }
            }
          }

          message Headers {
            string match_scope = 1 [json_name = "match_scope"];

            string oversize_handling = 2 [json_name = "oversize_handling"];

            MatchPattern match_pattern = 3 [json_name = "match_pattern"];

            message MatchPattern {
              repeated string excluded_headers = 1 [json_name = "excluded_headers"];

              repeated string included_headers = 2 [json_name = "included_headers"];

              All all = 3;

              message All {
              }
            }
          }

          message JsonBody {
            string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

            string match_scope = 2 [json_name = "match_scope"];

            string oversize_handling = 3 [json_name = "oversize_handling"];

            MatchPattern match_pattern = 4 [json_name = "match_pattern"];

            message MatchPattern {
              repeated string included_paths = 1 [json_name = "included_paths"];

              All all = 2;

              message All {
              }
            }
          }

          message Method {
          }

          message QueryString {
          }

          message SingleHeader {
            string name = 1;
          }

          message SingleQueryArgument {
            string name = 1;
          }

          message UriPath {
          }
        }

        message TextTransformation {
          int64 priority = 1;

          string type = 2;
        }
      }
    }

    message VisibilityConfig {
      bool cloudwatch_metrics_enabled = 1 [json_name = "cloudwatch_metrics_enabled"];

      string metric_name = 2 [json_name = "metric_name"];

      bool sampled_requests_enabled = 3 [json_name = "sampled_requests_enabled"];
    }
  }

  message VisibilityConfig {
    bool cloudwatch_metrics_enabled = 1 [json_name = "cloudwatch_metrics_enabled"];

    string metric_name = 2 [json_name = "metric_name"];

    bool sampled_requests_enabled = 3 [json_name = "sampled_requests_enabled"];
  }
}

// AwsWafv2WebAcl version is 0
message AwsWafv2WebAcl {
  string arn = 1;

  int64 capacity = 2;

  string description = 3;

  string id = 4;

  string lock_token = 5 [json_name = "lock_token"];

  string name = 6;

  string scope = 7;

  map<string, string> tags = 8;

  map<string, string> tags_all = 9 [json_name = "tags_all"];

  repeated string token_domains = 10 [json_name = "token_domains"];

  CaptchaConfig captcha_config = 11 [json_name = "captcha_config"];

  repeated CustomResponseBody custom_response_body = 12 [json_name = "custom_response_body"];

  DefaultAction default_action = 13 [json_name = "default_action"];

  repeated Rule rule = 14;

  VisibilityConfig visibility_config = 15 [json_name = "visibility_config"];

  map<string, string> for_each = 16 [json_name = "for_each"];

  repeated string depends_on = 17 [json_name = "depends_on"];

  int32 count = 18;

  string provider = 19;

  terraform.v1.Lifecycle lifecycle = 20;

  message CaptchaConfig {
    ImmunityTimeProperty immunity_time_property = 1 [json_name = "immunity_time_property"];

    message ImmunityTimeProperty {
      int64 immunity_time = 1 [json_name = "immunity_time"];
    }
  }

  message CustomResponseBody {
    string content = 1;

    string content_type = 2 [json_name = "content_type"];

    string key = 3;
  }

  message DefaultAction {
    Allow allow = 1;

    Block block = 2;

    message Allow {
      CustomRequestHandling custom_request_handling = 1 [json_name = "custom_request_handling"];

      message CustomRequestHandling {
        repeated InsertHeader insert_header = 1 [json_name = "insert_header"];

        message InsertHeader {
          string name = 1;

          string value = 2;
        }
      }
    }

    message Block {
      CustomResponse custom_response = 1 [json_name = "custom_response"];

      message CustomResponse {
        string custom_response_body_key = 1 [json_name = "custom_response_body_key"];

        int64 response_code = 2 [json_name = "response_code"];

        repeated ResponseHeader response_header = 3 [json_name = "response_header"];

        message ResponseHeader {
          string name = 1;

          string value = 2;
        }
      }
    }
  }

  message Rule {
    string name = 1;

    int64 priority = 2;

    Action action = 3;

    CaptchaConfig captcha_config = 4 [json_name = "captcha_config"];

    OverrideAction override_action = 5 [json_name = "override_action"];

    repeated RuleLabel rule_label = 6 [json_name = "rule_label"];

    Statement statement = 7;

    VisibilityConfig visibility_config = 8 [json_name = "visibility_config"];

    message Action {
      Allow allow = 1;

      Block block = 2;

      Captcha captcha = 3;

      Challenge challenge = 4;

      Count count = 5;

      message Allow {
        CustomRequestHandling custom_request_handling = 1 [json_name = "custom_request_handling"];

        message CustomRequestHandling {
          repeated InsertHeader insert_header = 1 [json_name = "insert_header"];

          message InsertHeader {
            string name = 1;

            string value = 2;
          }
        }
      }

      message Block {
        CustomResponse custom_response = 1 [json_name = "custom_response"];

        message CustomResponse {
          string custom_response_body_key = 1 [json_name = "custom_response_body_key"];

          int64 response_code = 2 [json_name = "response_code"];

          repeated ResponseHeader response_header = 3 [json_name = "response_header"];

          message ResponseHeader {
            string name = 1;

            string value = 2;
          }
        }
      }

      message Captcha {
        CustomRequestHandling custom_request_handling = 1 [json_name = "custom_request_handling"];

        message CustomRequestHandling {
          repeated InsertHeader insert_header = 1 [json_name = "insert_header"];

          message InsertHeader {
            string name = 1;

            string value = 2;
          }
        }
      }

      message Challenge {
        CustomRequestHandling custom_request_handling = 1 [json_name = "custom_request_handling"];

        message CustomRequestHandling {
          repeated InsertHeader insert_header = 1 [json_name = "insert_header"];

          message InsertHeader {
            string name = 1;

            string value = 2;
          }
        }
      }

      message Count {
        CustomRequestHandling custom_request_handling = 1 [json_name = "custom_request_handling"];

        message CustomRequestHandling {
          repeated InsertHeader insert_header = 1 [json_name = "insert_header"];

          message InsertHeader {
            string name = 1;

            string value = 2;
          }
        }
      }
    }

    message CaptchaConfig {
      ImmunityTimeProperty immunity_time_property = 1 [json_name = "immunity_time_property"];

      message ImmunityTimeProperty {
        int64 immunity_time = 1 [json_name = "immunity_time"];
      }
    }

    message OverrideAction {
      Count count = 1;

      None none = 2;

      message Count {
      }

      message None {
      }
    }

    message RuleLabel {
      string name = 1;
    }

    message Statement {
      AndStatement and_statement = 1 [json_name = "and_statement"];

      ByteMatchStatement byte_match_statement = 2 [json_name = "byte_match_statement"];

      GeoMatchStatement geo_match_statement = 3 [json_name = "geo_match_statement"];

      IpSetReferenceStatement ip_set_reference_statement = 4 [json_name = "ip_set_reference_statement"];

      LabelMatchStatement label_match_statement = 5 [json_name = "label_match_statement"];

      ManagedRuleGroupStatement managed_rule_group_statement = 6 [json_name = "managed_rule_group_statement"];

      NotStatement not_statement = 7 [json_name = "not_statement"];

      OrStatement or_statement = 8 [json_name = "or_statement"];

      RateBasedStatement rate_based_statement = 9 [json_name = "rate_based_statement"];

      RegexMatchStatement regex_match_statement = 10 [json_name = "regex_match_statement"];

      RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 11 [
        json_name = "regex_pattern_set_reference_statement"
      ];

      RuleGroupReferenceStatement rule_group_reference_statement = 12 [json_name = "rule_group_reference_statement"];

      SizeConstraintStatement size_constraint_statement = 13 [json_name = "size_constraint_statement"];

      SqliMatchStatement sqli_match_statement = 14 [json_name = "sqli_match_statement"];

      XssMatchStatement xss_match_statement = 15 [json_name = "xss_match_statement"];

      message AndStatement {
        repeated Statement statement = 1;

        message Statement {
          AndStatement and_statement = 1 [json_name = "and_statement"];

          ByteMatchStatement byte_match_statement = 2 [json_name = "byte_match_statement"];

          GeoMatchStatement geo_match_statement = 3 [json_name = "geo_match_statement"];

          IpSetReferenceStatement ip_set_reference_statement = 4 [json_name = "ip_set_reference_statement"];

          LabelMatchStatement label_match_statement = 5 [json_name = "label_match_statement"];

          NotStatement not_statement = 6 [json_name = "not_statement"];

          OrStatement or_statement = 7 [json_name = "or_statement"];

          RegexMatchStatement regex_match_statement = 8 [json_name = "regex_match_statement"];

          RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 9 [
            json_name = "regex_pattern_set_reference_statement"
          ];

          SizeConstraintStatement size_constraint_statement = 10 [json_name = "size_constraint_statement"];

          SqliMatchStatement sqli_match_statement = 11 [json_name = "sqli_match_statement"];

          XssMatchStatement xss_match_statement = 12 [json_name = "xss_match_statement"];

          message AndStatement {
            repeated Statement statement = 1;

            message Statement {
              AndStatement and_statement = 1 [json_name = "and_statement"];

              ByteMatchStatement byte_match_statement = 2 [json_name = "byte_match_statement"];

              GeoMatchStatement geo_match_statement = 3 [json_name = "geo_match_statement"];

              IpSetReferenceStatement ip_set_reference_statement = 4 [json_name = "ip_set_reference_statement"];

              LabelMatchStatement label_match_statement = 5 [json_name = "label_match_statement"];

              NotStatement not_statement = 6 [json_name = "not_statement"];

              OrStatement or_statement = 7 [json_name = "or_statement"];

              RegexMatchStatement regex_match_statement = 8 [json_name = "regex_match_statement"];

              RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 9 [
                json_name = "regex_pattern_set_reference_statement"
              ];

              SizeConstraintStatement size_constraint_statement = 10 [json_name = "size_constraint_statement"];

              SqliMatchStatement sqli_match_statement = 11 [json_name = "sqli_match_statement"];

              XssMatchStatement xss_match_statement = 12 [json_name = "xss_match_statement"];

              message AndStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message ByteMatchStatement {
                string positional_constraint = 1 [json_name = "positional_constraint"];

                string search_string = 2 [json_name = "search_string"];

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message GeoMatchStatement {
                repeated string country_codes = 1 [json_name = "country_codes"];

                ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                message ForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];
                }
              }

              message IpSetReferenceStatement {
                string arn = 1;

                IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                message IpSetForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];

                  string position = 3;
                }
              }

              message LabelMatchStatement {
                string key = 1;

                string scope = 2;
              }

              message NotStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message OrStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message RegexMatchStatement {
                string regex_string = 1 [json_name = "regex_string"];

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message RegexPatternSetReferenceStatement {
                string arn = 1;

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SizeConstraintStatement {
                string comparison_operator = 1 [json_name = "comparison_operator"];

                int64 size = 2;

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SqliMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message XssMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }
            }
          }

          message ByteMatchStatement {
            string positional_constraint = 1 [json_name = "positional_constraint"];

            string search_string = 2 [json_name = "search_string"];

            FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Cookies cookies = 3;

              repeated Headers headers = 4;

              JsonBody json_body = 5 [json_name = "json_body"];

              Method method = 6;

              QueryString query_string = 7 [json_name = "query_string"];

              SingleHeader single_header = 8 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

              UriPath uri_path = 10 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
                string oversize_handling = 1 [json_name = "oversize_handling"];
              }

              message Cookies {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                  repeated string included_cookies = 2 [json_name = "included_cookies"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message Headers {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                  repeated string included_headers = 2 [json_name = "included_headers"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message JsonBody {
                string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                string match_scope = 2 [json_name = "match_scope"];

                string oversize_handling = 3 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string included_paths = 1 [json_name = "included_paths"];

                  All all = 2;

                  message All {
                  }
                }
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message GeoMatchStatement {
            repeated string country_codes = 1 [json_name = "country_codes"];

            ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

            message ForwardedIpConfig {
              string fallback_behavior = 1 [json_name = "fallback_behavior"];

              string header_name = 2 [json_name = "header_name"];
            }
          }

          message IpSetReferenceStatement {
            string arn = 1;

            IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

            message IpSetForwardedIpConfig {
              string fallback_behavior = 1 [json_name = "fallback_behavior"];

              string header_name = 2 [json_name = "header_name"];

              string position = 3;
            }
          }

          message LabelMatchStatement {
            string key = 1;

            string scope = 2;
          }

          message NotStatement {
            repeated Statement statement = 1;

            message Statement {
              AndStatement and_statement = 1 [json_name = "and_statement"];

              ByteMatchStatement byte_match_statement = 2 [json_name = "byte_match_statement"];

              GeoMatchStatement geo_match_statement = 3 [json_name = "geo_match_statement"];

              IpSetReferenceStatement ip_set_reference_statement = 4 [json_name = "ip_set_reference_statement"];

              LabelMatchStatement label_match_statement = 5 [json_name = "label_match_statement"];

              NotStatement not_statement = 6 [json_name = "not_statement"];

              OrStatement or_statement = 7 [json_name = "or_statement"];

              RegexMatchStatement regex_match_statement = 8 [json_name = "regex_match_statement"];

              RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 9 [
                json_name = "regex_pattern_set_reference_statement"
              ];

              SizeConstraintStatement size_constraint_statement = 10 [json_name = "size_constraint_statement"];

              SqliMatchStatement sqli_match_statement = 11 [json_name = "sqli_match_statement"];

              XssMatchStatement xss_match_statement = 12 [json_name = "xss_match_statement"];

              message AndStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message ByteMatchStatement {
                string positional_constraint = 1 [json_name = "positional_constraint"];

                string search_string = 2 [json_name = "search_string"];

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message GeoMatchStatement {
                repeated string country_codes = 1 [json_name = "country_codes"];

                ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                message ForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];
                }
              }

              message IpSetReferenceStatement {
                string arn = 1;

                IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                message IpSetForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];

                  string position = 3;
                }
              }

              message LabelMatchStatement {
                string key = 1;

                string scope = 2;
              }

              message NotStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message OrStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message RegexMatchStatement {
                string regex_string = 1 [json_name = "regex_string"];

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message RegexPatternSetReferenceStatement {
                string arn = 1;

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SizeConstraintStatement {
                string comparison_operator = 1 [json_name = "comparison_operator"];

                int64 size = 2;

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SqliMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message XssMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }
            }
          }

          message OrStatement {
            repeated Statement statement = 1;

            message Statement {
              AndStatement and_statement = 1 [json_name = "and_statement"];

              ByteMatchStatement byte_match_statement = 2 [json_name = "byte_match_statement"];

              GeoMatchStatement geo_match_statement = 3 [json_name = "geo_match_statement"];

              IpSetReferenceStatement ip_set_reference_statement = 4 [json_name = "ip_set_reference_statement"];

              LabelMatchStatement label_match_statement = 5 [json_name = "label_match_statement"];

              NotStatement not_statement = 6 [json_name = "not_statement"];

              OrStatement or_statement = 7 [json_name = "or_statement"];

              RegexMatchStatement regex_match_statement = 8 [json_name = "regex_match_statement"];

              RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 9 [
                json_name = "regex_pattern_set_reference_statement"
              ];

              SizeConstraintStatement size_constraint_statement = 10 [json_name = "size_constraint_statement"];

              SqliMatchStatement sqli_match_statement = 11 [json_name = "sqli_match_statement"];

              XssMatchStatement xss_match_statement = 12 [json_name = "xss_match_statement"];

              message AndStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message ByteMatchStatement {
                string positional_constraint = 1 [json_name = "positional_constraint"];

                string search_string = 2 [json_name = "search_string"];

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message GeoMatchStatement {
                repeated string country_codes = 1 [json_name = "country_codes"];

                ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                message ForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];
                }
              }

              message IpSetReferenceStatement {
                string arn = 1;

                IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                message IpSetForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];

                  string position = 3;
                }
              }

              message LabelMatchStatement {
                string key = 1;

                string scope = 2;
              }

              message NotStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message OrStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message RegexMatchStatement {
                string regex_string = 1 [json_name = "regex_string"];

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message RegexPatternSetReferenceStatement {
                string arn = 1;

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SizeConstraintStatement {
                string comparison_operator = 1 [json_name = "comparison_operator"];

                int64 size = 2;

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SqliMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message XssMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }
            }
          }

          message RegexMatchStatement {
            string regex_string = 1 [json_name = "regex_string"];

            FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Cookies cookies = 3;

              repeated Headers headers = 4;

              JsonBody json_body = 5 [json_name = "json_body"];

              Method method = 6;

              QueryString query_string = 7 [json_name = "query_string"];

              SingleHeader single_header = 8 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

              UriPath uri_path = 10 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
                string oversize_handling = 1 [json_name = "oversize_handling"];
              }

              message Cookies {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                  repeated string included_cookies = 2 [json_name = "included_cookies"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message Headers {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                  repeated string included_headers = 2 [json_name = "included_headers"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message JsonBody {
                string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                string match_scope = 2 [json_name = "match_scope"];

                string oversize_handling = 3 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string included_paths = 1 [json_name = "included_paths"];

                  All all = 2;

                  message All {
                  }
                }
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message RegexPatternSetReferenceStatement {
            string arn = 1;

            FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Cookies cookies = 3;

              repeated Headers headers = 4;

              JsonBody json_body = 5 [json_name = "json_body"];

              Method method = 6;

              QueryString query_string = 7 [json_name = "query_string"];

              SingleHeader single_header = 8 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

              UriPath uri_path = 10 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
                string oversize_handling = 1 [json_name = "oversize_handling"];
              }

              message Cookies {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                  repeated string included_cookies = 2 [json_name = "included_cookies"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message Headers {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                  repeated string included_headers = 2 [json_name = "included_headers"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message JsonBody {
                string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                string match_scope = 2 [json_name = "match_scope"];

                string oversize_handling = 3 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string included_paths = 1 [json_name = "included_paths"];

                  All all = 2;

                  message All {
                  }
                }
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message SizeConstraintStatement {
            string comparison_operator = 1 [json_name = "comparison_operator"];

            int64 size = 2;

            FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Cookies cookies = 3;

              repeated Headers headers = 4;

              JsonBody json_body = 5 [json_name = "json_body"];

              Method method = 6;

              QueryString query_string = 7 [json_name = "query_string"];

              SingleHeader single_header = 8 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

              UriPath uri_path = 10 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
                string oversize_handling = 1 [json_name = "oversize_handling"];
              }

              message Cookies {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                  repeated string included_cookies = 2 [json_name = "included_cookies"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message Headers {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                  repeated string included_headers = 2 [json_name = "included_headers"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message JsonBody {
                string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                string match_scope = 2 [json_name = "match_scope"];

                string oversize_handling = 3 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string included_paths = 1 [json_name = "included_paths"];

                  All all = 2;

                  message All {
                  }
                }
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message SqliMatchStatement {
            FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Cookies cookies = 3;

              repeated Headers headers = 4;

              JsonBody json_body = 5 [json_name = "json_body"];

              Method method = 6;

              QueryString query_string = 7 [json_name = "query_string"];

              SingleHeader single_header = 8 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

              UriPath uri_path = 10 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
                string oversize_handling = 1 [json_name = "oversize_handling"];
              }

              message Cookies {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                  repeated string included_cookies = 2 [json_name = "included_cookies"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message Headers {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                  repeated string included_headers = 2 [json_name = "included_headers"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message JsonBody {
                string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                string match_scope = 2 [json_name = "match_scope"];

                string oversize_handling = 3 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string included_paths = 1 [json_name = "included_paths"];

                  All all = 2;

                  message All {
                  }
                }
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message XssMatchStatement {
            FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Cookies cookies = 3;

              repeated Headers headers = 4;

              JsonBody json_body = 5 [json_name = "json_body"];

              Method method = 6;

              QueryString query_string = 7 [json_name = "query_string"];

              SingleHeader single_header = 8 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

              UriPath uri_path = 10 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
                string oversize_handling = 1 [json_name = "oversize_handling"];
              }

              message Cookies {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                  repeated string included_cookies = 2 [json_name = "included_cookies"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message Headers {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                  repeated string included_headers = 2 [json_name = "included_headers"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message JsonBody {
                string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                string match_scope = 2 [json_name = "match_scope"];

                string oversize_handling = 3 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string included_paths = 1 [json_name = "included_paths"];

                  All all = 2;

                  message All {
                  }
                }
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }
        }
      }

      message ByteMatchStatement {
        string positional_constraint = 1 [json_name = "positional_constraint"];

        string search_string = 2 [json_name = "search_string"];

        FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

        repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

        message FieldToMatch {
          AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

          Body body = 2;

          Cookies cookies = 3;

          repeated Headers headers = 4;

          JsonBody json_body = 5 [json_name = "json_body"];

          Method method = 6;

          QueryString query_string = 7 [json_name = "query_string"];

          SingleHeader single_header = 8 [json_name = "single_header"];

          SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

          UriPath uri_path = 10 [json_name = "uri_path"];

          message AllQueryArguments {
          }

          message Body {
            string oversize_handling = 1 [json_name = "oversize_handling"];
          }

          message Cookies {
            string match_scope = 1 [json_name = "match_scope"];

            string oversize_handling = 2 [json_name = "oversize_handling"];

            repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

            message MatchPattern {
              repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

              repeated string included_cookies = 2 [json_name = "included_cookies"];

              All all = 3;

              message All {
              }
            }
          }

          message Headers {
            string match_scope = 1 [json_name = "match_scope"];

            string oversize_handling = 2 [json_name = "oversize_handling"];

            MatchPattern match_pattern = 3 [json_name = "match_pattern"];

            message MatchPattern {
              repeated string excluded_headers = 1 [json_name = "excluded_headers"];

              repeated string included_headers = 2 [json_name = "included_headers"];

              All all = 3;

              message All {
              }
            }
          }

          message JsonBody {
            string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

            string match_scope = 2 [json_name = "match_scope"];

            string oversize_handling = 3 [json_name = "oversize_handling"];

            MatchPattern match_pattern = 4 [json_name = "match_pattern"];

            message MatchPattern {
              repeated string included_paths = 1 [json_name = "included_paths"];

              All all = 2;

              message All {
              }
            }
          }

          message Method {
          }

          message QueryString {
          }

          message SingleHeader {
            string name = 1;
          }

          message SingleQueryArgument {
            string name = 1;
          }

          message UriPath {
          }
        }

        message TextTransformation {
          int64 priority = 1;

          string type = 2;
        }
      }

      message GeoMatchStatement {
        repeated string country_codes = 1 [json_name = "country_codes"];

        ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

        message ForwardedIpConfig {
          string fallback_behavior = 1 [json_name = "fallback_behavior"];

          string header_name = 2 [json_name = "header_name"];
        }
      }

      message IpSetReferenceStatement {
        string arn = 1;

        IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

        message IpSetForwardedIpConfig {
          string fallback_behavior = 1 [json_name = "fallback_behavior"];

          string header_name = 2 [json_name = "header_name"];

          string position = 3;
        }
      }

      message LabelMatchStatement {
        string key = 1;

        string scope = 2;
      }

      message ManagedRuleGroupStatement {
        string name = 1;

        string vendor_name = 2 [json_name = "vendor_name"];

        string version = 3;

        repeated ManagedRuleGroupConfigs managed_rule_group_configs = 4 [json_name = "managed_rule_group_configs"];

        repeated RuleActionOverride rule_action_override = 5 [json_name = "rule_action_override"];

        ScopeDownStatement scope_down_statement = 6 [json_name = "scope_down_statement"];

        message ManagedRuleGroupConfigs {
          string login_path = 1 [json_name = "login_path"];

          string payload_type = 2 [json_name = "payload_type"];

          AwsManagedRulesAtpRuleSet aws_managed_rules_atp_rule_set = 3 [json_name = "aws_managed_rules_atp_rule_set"];

          AwsManagedRulesBotControlRuleSet aws_managed_rules_bot_control_rule_set = 4 [
            json_name = "aws_managed_rules_bot_control_rule_set"
          ];

          PasswordField password_field = 5 [json_name = "password_field"];

          UsernameField username_field = 6 [json_name = "username_field"];

          message AwsManagedRulesAtpRuleSet {
            string login_path = 1 [json_name = "login_path"];

            RequestInspection request_inspection = 2 [json_name = "request_inspection"];

            ResponseInspection response_inspection = 3 [json_name = "response_inspection"];

            message RequestInspection {
              string payload_type = 1 [json_name = "payload_type"];

              PasswordField password_field = 2 [json_name = "password_field"];

              UsernameField username_field = 3 [json_name = "username_field"];

              message PasswordField {
                string identifier = 1;
              }

              message UsernameField {
                string identifier = 1;
              }
            }

            message ResponseInspection {
              BodyContains body_contains = 1 [json_name = "body_contains"];

              Header header = 2;

              Json json = 3;

              StatusCode status_code = 4 [json_name = "status_code"];

              message BodyContains {
                repeated string failure_strings = 1 [json_name = "failure_strings"];

                repeated string success_strings = 2 [json_name = "success_strings"];
              }

              message Header {
                repeated string failure_values = 1 [json_name = "failure_values"];

                string name = 2;

                repeated string success_values = 3 [json_name = "success_values"];
              }

              message Json {
                repeated string failure_values = 1 [json_name = "failure_values"];

                string identifier = 2;

                repeated string success_values = 3 [json_name = "success_values"];
              }

              message StatusCode {
                repeated int64 failure_codes = 1 [json_name = "failure_codes"];

                repeated int64 success_codes = 2 [json_name = "success_codes"];
              }
            }
          }

          message AwsManagedRulesBotControlRuleSet {
            string inspection_level = 1 [json_name = "inspection_level"];
          }

          message PasswordField {
            string identifier = 1;
          }

          message UsernameField {
            string identifier = 1;
          }
        }

        message RuleActionOverride {
          string name = 1;

          ActionToUse action_to_use = 2 [json_name = "action_to_use"];

          message ActionToUse {
            Allow allow = 1;

            Block block = 2;

            Captcha captcha = 3;

            Count count = 4;

            message Allow {
              CustomRequestHandling custom_request_handling = 1 [json_name = "custom_request_handling"];

              message CustomRequestHandling {
                repeated InsertHeader insert_header = 1 [json_name = "insert_header"];

                message InsertHeader {
                  string name = 1;

                  string value = 2;
                }
              }
            }

            message Block {
              CustomResponse custom_response = 1 [json_name = "custom_response"];

              message CustomResponse {
                string custom_response_body_key = 1 [json_name = "custom_response_body_key"];

                int64 response_code = 2 [json_name = "response_code"];

                repeated ResponseHeader response_header = 3 [json_name = "response_header"];

                message ResponseHeader {
                  string name = 1;

                  string value = 2;
                }
              }
            }

            message Captcha {
              CustomRequestHandling custom_request_handling = 1 [json_name = "custom_request_handling"];

              message CustomRequestHandling {
                repeated InsertHeader insert_header = 1 [json_name = "insert_header"];

                message InsertHeader {
                  string name = 1;

                  string value = 2;
                }
              }
            }

            message Count {
              CustomRequestHandling custom_request_handling = 1 [json_name = "custom_request_handling"];

              message CustomRequestHandling {
                repeated InsertHeader insert_header = 1 [json_name = "insert_header"];

                message InsertHeader {
                  string name = 1;

                  string value = 2;
                }
              }
            }
          }
        }

        message ScopeDownStatement {
          AndStatement and_statement = 1 [json_name = "and_statement"];

          ByteMatchStatement byte_match_statement = 2 [json_name = "byte_match_statement"];

          GeoMatchStatement geo_match_statement = 3 [json_name = "geo_match_statement"];

          IpSetReferenceStatement ip_set_reference_statement = 4 [json_name = "ip_set_reference_statement"];

          LabelMatchStatement label_match_statement = 5 [json_name = "label_match_statement"];

          NotStatement not_statement = 6 [json_name = "not_statement"];

          OrStatement or_statement = 7 [json_name = "or_statement"];

          RegexMatchStatement regex_match_statement = 8 [json_name = "regex_match_statement"];

          RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 9 [
            json_name = "regex_pattern_set_reference_statement"
          ];

          SizeConstraintStatement size_constraint_statement = 10 [json_name = "size_constraint_statement"];

          SqliMatchStatement sqli_match_statement = 11 [json_name = "sqli_match_statement"];

          XssMatchStatement xss_match_statement = 12 [json_name = "xss_match_statement"];

          message AndStatement {
            repeated Statement statement = 1;

            message Statement {
              AndStatement and_statement = 1 [json_name = "and_statement"];

              ByteMatchStatement byte_match_statement = 2 [json_name = "byte_match_statement"];

              GeoMatchStatement geo_match_statement = 3 [json_name = "geo_match_statement"];

              IpSetReferenceStatement ip_set_reference_statement = 4 [json_name = "ip_set_reference_statement"];

              LabelMatchStatement label_match_statement = 5 [json_name = "label_match_statement"];

              NotStatement not_statement = 6 [json_name = "not_statement"];

              OrStatement or_statement = 7 [json_name = "or_statement"];

              RegexMatchStatement regex_match_statement = 8 [json_name = "regex_match_statement"];

              RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 9 [
                json_name = "regex_pattern_set_reference_statement"
              ];

              SizeConstraintStatement size_constraint_statement = 10 [json_name = "size_constraint_statement"];

              SqliMatchStatement sqli_match_statement = 11 [json_name = "sqli_match_statement"];

              XssMatchStatement xss_match_statement = 12 [json_name = "xss_match_statement"];

              message AndStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message ByteMatchStatement {
                string positional_constraint = 1 [json_name = "positional_constraint"];

                string search_string = 2 [json_name = "search_string"];

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message GeoMatchStatement {
                repeated string country_codes = 1 [json_name = "country_codes"];

                ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                message ForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];
                }
              }

              message IpSetReferenceStatement {
                string arn = 1;

                IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                message IpSetForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];

                  string position = 3;
                }
              }

              message LabelMatchStatement {
                string key = 1;

                string scope = 2;
              }

              message NotStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message OrStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message RegexMatchStatement {
                string regex_string = 1 [json_name = "regex_string"];

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message RegexPatternSetReferenceStatement {
                string arn = 1;

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SizeConstraintStatement {
                string comparison_operator = 1 [json_name = "comparison_operator"];

                int64 size = 2;

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SqliMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message XssMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }
            }
          }

          message ByteMatchStatement {
            string positional_constraint = 1 [json_name = "positional_constraint"];

            string search_string = 2 [json_name = "search_string"];

            FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Cookies cookies = 3;

              repeated Headers headers = 4;

              JsonBody json_body = 5 [json_name = "json_body"];

              Method method = 6;

              QueryString query_string = 7 [json_name = "query_string"];

              SingleHeader single_header = 8 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

              UriPath uri_path = 10 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
                string oversize_handling = 1 [json_name = "oversize_handling"];
              }

              message Cookies {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                  repeated string included_cookies = 2 [json_name = "included_cookies"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message Headers {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                  repeated string included_headers = 2 [json_name = "included_headers"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message JsonBody {
                string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                string match_scope = 2 [json_name = "match_scope"];

                string oversize_handling = 3 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string included_paths = 1 [json_name = "included_paths"];

                  All all = 2;

                  message All {
                  }
                }
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message GeoMatchStatement {
            repeated string country_codes = 1 [json_name = "country_codes"];

            ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

            message ForwardedIpConfig {
              string fallback_behavior = 1 [json_name = "fallback_behavior"];

              string header_name = 2 [json_name = "header_name"];
            }
          }

          message IpSetReferenceStatement {
            string arn = 1;

            IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

            message IpSetForwardedIpConfig {
              string fallback_behavior = 1 [json_name = "fallback_behavior"];

              string header_name = 2 [json_name = "header_name"];

              string position = 3;
            }
          }

          message LabelMatchStatement {
            string key = 1;

            string scope = 2;
          }

          message NotStatement {
            repeated Statement statement = 1;

            message Statement {
              AndStatement and_statement = 1 [json_name = "and_statement"];

              ByteMatchStatement byte_match_statement = 2 [json_name = "byte_match_statement"];

              GeoMatchStatement geo_match_statement = 3 [json_name = "geo_match_statement"];

              IpSetReferenceStatement ip_set_reference_statement = 4 [json_name = "ip_set_reference_statement"];

              LabelMatchStatement label_match_statement = 5 [json_name = "label_match_statement"];

              NotStatement not_statement = 6 [json_name = "not_statement"];

              OrStatement or_statement = 7 [json_name = "or_statement"];

              RegexMatchStatement regex_match_statement = 8 [json_name = "regex_match_statement"];

              RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 9 [
                json_name = "regex_pattern_set_reference_statement"
              ];

              SizeConstraintStatement size_constraint_statement = 10 [json_name = "size_constraint_statement"];

              SqliMatchStatement sqli_match_statement = 11 [json_name = "sqli_match_statement"];

              XssMatchStatement xss_match_statement = 12 [json_name = "xss_match_statement"];

              message AndStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message ByteMatchStatement {
                string positional_constraint = 1 [json_name = "positional_constraint"];

                string search_string = 2 [json_name = "search_string"];

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message GeoMatchStatement {
                repeated string country_codes = 1 [json_name = "country_codes"];

                ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                message ForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];
                }
              }

              message IpSetReferenceStatement {
                string arn = 1;

                IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                message IpSetForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];

                  string position = 3;
                }
              }

              message LabelMatchStatement {
                string key = 1;

                string scope = 2;
              }

              message NotStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message OrStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message RegexMatchStatement {
                string regex_string = 1 [json_name = "regex_string"];

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message RegexPatternSetReferenceStatement {
                string arn = 1;

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SizeConstraintStatement {
                string comparison_operator = 1 [json_name = "comparison_operator"];

                int64 size = 2;

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SqliMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message XssMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }
            }
          }

          message OrStatement {
            repeated Statement statement = 1;

            message Statement {
              AndStatement and_statement = 1 [json_name = "and_statement"];

              ByteMatchStatement byte_match_statement = 2 [json_name = "byte_match_statement"];

              GeoMatchStatement geo_match_statement = 3 [json_name = "geo_match_statement"];

              IpSetReferenceStatement ip_set_reference_statement = 4 [json_name = "ip_set_reference_statement"];

              LabelMatchStatement label_match_statement = 5 [json_name = "label_match_statement"];

              NotStatement not_statement = 6 [json_name = "not_statement"];

              OrStatement or_statement = 7 [json_name = "or_statement"];

              RegexMatchStatement regex_match_statement = 8 [json_name = "regex_match_statement"];

              RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 9 [
                json_name = "regex_pattern_set_reference_statement"
              ];

              SizeConstraintStatement size_constraint_statement = 10 [json_name = "size_constraint_statement"];

              SqliMatchStatement sqli_match_statement = 11 [json_name = "sqli_match_statement"];

              XssMatchStatement xss_match_statement = 12 [json_name = "xss_match_statement"];

              message AndStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message ByteMatchStatement {
                string positional_constraint = 1 [json_name = "positional_constraint"];

                string search_string = 2 [json_name = "search_string"];

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message GeoMatchStatement {
                repeated string country_codes = 1 [json_name = "country_codes"];

                ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                message ForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];
                }
              }

              message IpSetReferenceStatement {
                string arn = 1;

                IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                message IpSetForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];

                  string position = 3;
                }
              }

              message LabelMatchStatement {
                string key = 1;

                string scope = 2;
              }

              message NotStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message OrStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message RegexMatchStatement {
                string regex_string = 1 [json_name = "regex_string"];

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message RegexPatternSetReferenceStatement {
                string arn = 1;

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SizeConstraintStatement {
                string comparison_operator = 1 [json_name = "comparison_operator"];

                int64 size = 2;

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SqliMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message XssMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }
            }
          }

          message RegexMatchStatement {
            string regex_string = 1 [json_name = "regex_string"];

            FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Cookies cookies = 3;

              repeated Headers headers = 4;

              JsonBody json_body = 5 [json_name = "json_body"];

              Method method = 6;

              QueryString query_string = 7 [json_name = "query_string"];

              SingleHeader single_header = 8 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

              UriPath uri_path = 10 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
                string oversize_handling = 1 [json_name = "oversize_handling"];
              }

              message Cookies {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                  repeated string included_cookies = 2 [json_name = "included_cookies"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message Headers {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                  repeated string included_headers = 2 [json_name = "included_headers"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message JsonBody {
                string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                string match_scope = 2 [json_name = "match_scope"];

                string oversize_handling = 3 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string included_paths = 1 [json_name = "included_paths"];

                  All all = 2;

                  message All {
                  }
                }
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message RegexPatternSetReferenceStatement {
            string arn = 1;

            FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Cookies cookies = 3;

              repeated Headers headers = 4;

              JsonBody json_body = 5 [json_name = "json_body"];

              Method method = 6;

              QueryString query_string = 7 [json_name = "query_string"];

              SingleHeader single_header = 8 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

              UriPath uri_path = 10 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
                string oversize_handling = 1 [json_name = "oversize_handling"];
              }

              message Cookies {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                  repeated string included_cookies = 2 [json_name = "included_cookies"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message Headers {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                  repeated string included_headers = 2 [json_name = "included_headers"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message JsonBody {
                string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                string match_scope = 2 [json_name = "match_scope"];

                string oversize_handling = 3 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string included_paths = 1 [json_name = "included_paths"];

                  All all = 2;

                  message All {
                  }
                }
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message SizeConstraintStatement {
            string comparison_operator = 1 [json_name = "comparison_operator"];

            int64 size = 2;

            FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Cookies cookies = 3;

              repeated Headers headers = 4;

              JsonBody json_body = 5 [json_name = "json_body"];

              Method method = 6;

              QueryString query_string = 7 [json_name = "query_string"];

              SingleHeader single_header = 8 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

              UriPath uri_path = 10 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
                string oversize_handling = 1 [json_name = "oversize_handling"];
              }

              message Cookies {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                  repeated string included_cookies = 2 [json_name = "included_cookies"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message Headers {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                  repeated string included_headers = 2 [json_name = "included_headers"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message JsonBody {
                string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                string match_scope = 2 [json_name = "match_scope"];

                string oversize_handling = 3 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string included_paths = 1 [json_name = "included_paths"];

                  All all = 2;

                  message All {
                  }
                }
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message SqliMatchStatement {
            FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Cookies cookies = 3;

              repeated Headers headers = 4;

              JsonBody json_body = 5 [json_name = "json_body"];

              Method method = 6;

              QueryString query_string = 7 [json_name = "query_string"];

              SingleHeader single_header = 8 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

              UriPath uri_path = 10 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
                string oversize_handling = 1 [json_name = "oversize_handling"];
              }

              message Cookies {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                  repeated string included_cookies = 2 [json_name = "included_cookies"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message Headers {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                  repeated string included_headers = 2 [json_name = "included_headers"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message JsonBody {
                string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                string match_scope = 2 [json_name = "match_scope"];

                string oversize_handling = 3 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string included_paths = 1 [json_name = "included_paths"];

                  All all = 2;

                  message All {
                  }
                }
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message XssMatchStatement {
            FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Cookies cookies = 3;

              repeated Headers headers = 4;

              JsonBody json_body = 5 [json_name = "json_body"];

              Method method = 6;

              QueryString query_string = 7 [json_name = "query_string"];

              SingleHeader single_header = 8 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

              UriPath uri_path = 10 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
                string oversize_handling = 1 [json_name = "oversize_handling"];
              }

              message Cookies {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                  repeated string included_cookies = 2 [json_name = "included_cookies"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message Headers {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                  repeated string included_headers = 2 [json_name = "included_headers"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message JsonBody {
                string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                string match_scope = 2 [json_name = "match_scope"];

                string oversize_handling = 3 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string included_paths = 1 [json_name = "included_paths"];

                  All all = 2;

                  message All {
                  }
                }
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }
        }
      }

      message NotStatement {
        repeated Statement statement = 1;

        message Statement {
          AndStatement and_statement = 1 [json_name = "and_statement"];

          ByteMatchStatement byte_match_statement = 2 [json_name = "byte_match_statement"];

          GeoMatchStatement geo_match_statement = 3 [json_name = "geo_match_statement"];

          IpSetReferenceStatement ip_set_reference_statement = 4 [json_name = "ip_set_reference_statement"];

          LabelMatchStatement label_match_statement = 5 [json_name = "label_match_statement"];

          NotStatement not_statement = 6 [json_name = "not_statement"];

          OrStatement or_statement = 7 [json_name = "or_statement"];

          RegexMatchStatement regex_match_statement = 8 [json_name = "regex_match_statement"];

          RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 9 [
            json_name = "regex_pattern_set_reference_statement"
          ];

          SizeConstraintStatement size_constraint_statement = 10 [json_name = "size_constraint_statement"];

          SqliMatchStatement sqli_match_statement = 11 [json_name = "sqli_match_statement"];

          XssMatchStatement xss_match_statement = 12 [json_name = "xss_match_statement"];

          message AndStatement {
            repeated Statement statement = 1;

            message Statement {
              AndStatement and_statement = 1 [json_name = "and_statement"];

              ByteMatchStatement byte_match_statement = 2 [json_name = "byte_match_statement"];

              GeoMatchStatement geo_match_statement = 3 [json_name = "geo_match_statement"];

              IpSetReferenceStatement ip_set_reference_statement = 4 [json_name = "ip_set_reference_statement"];

              LabelMatchStatement label_match_statement = 5 [json_name = "label_match_statement"];

              NotStatement not_statement = 6 [json_name = "not_statement"];

              OrStatement or_statement = 7 [json_name = "or_statement"];

              RegexMatchStatement regex_match_statement = 8 [json_name = "regex_match_statement"];

              RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 9 [
                json_name = "regex_pattern_set_reference_statement"
              ];

              SizeConstraintStatement size_constraint_statement = 10 [json_name = "size_constraint_statement"];

              SqliMatchStatement sqli_match_statement = 11 [json_name = "sqli_match_statement"];

              XssMatchStatement xss_match_statement = 12 [json_name = "xss_match_statement"];

              message AndStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message ByteMatchStatement {
                string positional_constraint = 1 [json_name = "positional_constraint"];

                string search_string = 2 [json_name = "search_string"];

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message GeoMatchStatement {
                repeated string country_codes = 1 [json_name = "country_codes"];

                ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                message ForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];
                }
              }

              message IpSetReferenceStatement {
                string arn = 1;

                IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                message IpSetForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];

                  string position = 3;
                }
              }

              message LabelMatchStatement {
                string key = 1;

                string scope = 2;
              }

              message NotStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message OrStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message RegexMatchStatement {
                string regex_string = 1 [json_name = "regex_string"];

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message RegexPatternSetReferenceStatement {
                string arn = 1;

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SizeConstraintStatement {
                string comparison_operator = 1 [json_name = "comparison_operator"];

                int64 size = 2;

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SqliMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message XssMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }
            }
          }

          message ByteMatchStatement {
            string positional_constraint = 1 [json_name = "positional_constraint"];

            string search_string = 2 [json_name = "search_string"];

            FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Cookies cookies = 3;

              repeated Headers headers = 4;

              JsonBody json_body = 5 [json_name = "json_body"];

              Method method = 6;

              QueryString query_string = 7 [json_name = "query_string"];

              SingleHeader single_header = 8 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

              UriPath uri_path = 10 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
                string oversize_handling = 1 [json_name = "oversize_handling"];
              }

              message Cookies {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                  repeated string included_cookies = 2 [json_name = "included_cookies"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message Headers {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                  repeated string included_headers = 2 [json_name = "included_headers"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message JsonBody {
                string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                string match_scope = 2 [json_name = "match_scope"];

                string oversize_handling = 3 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string included_paths = 1 [json_name = "included_paths"];

                  All all = 2;

                  message All {
                  }
                }
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message GeoMatchStatement {
            repeated string country_codes = 1 [json_name = "country_codes"];

            ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

            message ForwardedIpConfig {
              string fallback_behavior = 1 [json_name = "fallback_behavior"];

              string header_name = 2 [json_name = "header_name"];
            }
          }

          message IpSetReferenceStatement {
            string arn = 1;

            IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

            message IpSetForwardedIpConfig {
              string fallback_behavior = 1 [json_name = "fallback_behavior"];

              string header_name = 2 [json_name = "header_name"];

              string position = 3;
            }
          }

          message LabelMatchStatement {
            string key = 1;

            string scope = 2;
          }

          message NotStatement {
            repeated Statement statement = 1;

            message Statement {
              AndStatement and_statement = 1 [json_name = "and_statement"];

              ByteMatchStatement byte_match_statement = 2 [json_name = "byte_match_statement"];

              GeoMatchStatement geo_match_statement = 3 [json_name = "geo_match_statement"];

              IpSetReferenceStatement ip_set_reference_statement = 4 [json_name = "ip_set_reference_statement"];

              LabelMatchStatement label_match_statement = 5 [json_name = "label_match_statement"];

              NotStatement not_statement = 6 [json_name = "not_statement"];

              OrStatement or_statement = 7 [json_name = "or_statement"];

              RegexMatchStatement regex_match_statement = 8 [json_name = "regex_match_statement"];

              RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 9 [
                json_name = "regex_pattern_set_reference_statement"
              ];

              SizeConstraintStatement size_constraint_statement = 10 [json_name = "size_constraint_statement"];

              SqliMatchStatement sqli_match_statement = 11 [json_name = "sqli_match_statement"];

              XssMatchStatement xss_match_statement = 12 [json_name = "xss_match_statement"];

              message AndStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message ByteMatchStatement {
                string positional_constraint = 1 [json_name = "positional_constraint"];

                string search_string = 2 [json_name = "search_string"];

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message GeoMatchStatement {
                repeated string country_codes = 1 [json_name = "country_codes"];

                ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                message ForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];
                }
              }

              message IpSetReferenceStatement {
                string arn = 1;

                IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                message IpSetForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];

                  string position = 3;
                }
              }

              message LabelMatchStatement {
                string key = 1;

                string scope = 2;
              }

              message NotStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message OrStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message RegexMatchStatement {
                string regex_string = 1 [json_name = "regex_string"];

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message RegexPatternSetReferenceStatement {
                string arn = 1;

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SizeConstraintStatement {
                string comparison_operator = 1 [json_name = "comparison_operator"];

                int64 size = 2;

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SqliMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message XssMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }
            }
          }

          message OrStatement {
            repeated Statement statement = 1;

            message Statement {
              AndStatement and_statement = 1 [json_name = "and_statement"];

              ByteMatchStatement byte_match_statement = 2 [json_name = "byte_match_statement"];

              GeoMatchStatement geo_match_statement = 3 [json_name = "geo_match_statement"];

              IpSetReferenceStatement ip_set_reference_statement = 4 [json_name = "ip_set_reference_statement"];

              LabelMatchStatement label_match_statement = 5 [json_name = "label_match_statement"];

              NotStatement not_statement = 6 [json_name = "not_statement"];

              OrStatement or_statement = 7 [json_name = "or_statement"];

              RegexMatchStatement regex_match_statement = 8 [json_name = "regex_match_statement"];

              RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 9 [
                json_name = "regex_pattern_set_reference_statement"
              ];

              SizeConstraintStatement size_constraint_statement = 10 [json_name = "size_constraint_statement"];

              SqliMatchStatement sqli_match_statement = 11 [json_name = "sqli_match_statement"];

              XssMatchStatement xss_match_statement = 12 [json_name = "xss_match_statement"];

              message AndStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message ByteMatchStatement {
                string positional_constraint = 1 [json_name = "positional_constraint"];

                string search_string = 2 [json_name = "search_string"];

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message GeoMatchStatement {
                repeated string country_codes = 1 [json_name = "country_codes"];

                ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                message ForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];
                }
              }

              message IpSetReferenceStatement {
                string arn = 1;

                IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                message IpSetForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];

                  string position = 3;
                }
              }

              message LabelMatchStatement {
                string key = 1;

                string scope = 2;
              }

              message NotStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message OrStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message RegexMatchStatement {
                string regex_string = 1 [json_name = "regex_string"];

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message RegexPatternSetReferenceStatement {
                string arn = 1;

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SizeConstraintStatement {
                string comparison_operator = 1 [json_name = "comparison_operator"];

                int64 size = 2;

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SqliMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message XssMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }
            }
          }

          message RegexMatchStatement {
            string regex_string = 1 [json_name = "regex_string"];

            FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Cookies cookies = 3;

              repeated Headers headers = 4;

              JsonBody json_body = 5 [json_name = "json_body"];

              Method method = 6;

              QueryString query_string = 7 [json_name = "query_string"];

              SingleHeader single_header = 8 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

              UriPath uri_path = 10 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
                string oversize_handling = 1 [json_name = "oversize_handling"];
              }

              message Cookies {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                  repeated string included_cookies = 2 [json_name = "included_cookies"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message Headers {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                  repeated string included_headers = 2 [json_name = "included_headers"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message JsonBody {
                string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                string match_scope = 2 [json_name = "match_scope"];

                string oversize_handling = 3 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string included_paths = 1 [json_name = "included_paths"];

                  All all = 2;

                  message All {
                  }
                }
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message RegexPatternSetReferenceStatement {
            string arn = 1;

            FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Cookies cookies = 3;

              repeated Headers headers = 4;

              JsonBody json_body = 5 [json_name = "json_body"];

              Method method = 6;

              QueryString query_string = 7 [json_name = "query_string"];

              SingleHeader single_header = 8 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

              UriPath uri_path = 10 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
                string oversize_handling = 1 [json_name = "oversize_handling"];
              }

              message Cookies {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                  repeated string included_cookies = 2 [json_name = "included_cookies"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message Headers {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                  repeated string included_headers = 2 [json_name = "included_headers"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message JsonBody {
                string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                string match_scope = 2 [json_name = "match_scope"];

                string oversize_handling = 3 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string included_paths = 1 [json_name = "included_paths"];

                  All all = 2;

                  message All {
                  }
                }
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message SizeConstraintStatement {
            string comparison_operator = 1 [json_name = "comparison_operator"];

            int64 size = 2;

            FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Cookies cookies = 3;

              repeated Headers headers = 4;

              JsonBody json_body = 5 [json_name = "json_body"];

              Method method = 6;

              QueryString query_string = 7 [json_name = "query_string"];

              SingleHeader single_header = 8 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

              UriPath uri_path = 10 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
                string oversize_handling = 1 [json_name = "oversize_handling"];
              }

              message Cookies {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                  repeated string included_cookies = 2 [json_name = "included_cookies"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message Headers {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                  repeated string included_headers = 2 [json_name = "included_headers"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message JsonBody {
                string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                string match_scope = 2 [json_name = "match_scope"];

                string oversize_handling = 3 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string included_paths = 1 [json_name = "included_paths"];

                  All all = 2;

                  message All {
                  }
                }
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message SqliMatchStatement {
            FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Cookies cookies = 3;

              repeated Headers headers = 4;

              JsonBody json_body = 5 [json_name = "json_body"];

              Method method = 6;

              QueryString query_string = 7 [json_name = "query_string"];

              SingleHeader single_header = 8 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

              UriPath uri_path = 10 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
                string oversize_handling = 1 [json_name = "oversize_handling"];
              }

              message Cookies {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                  repeated string included_cookies = 2 [json_name = "included_cookies"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message Headers {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                  repeated string included_headers = 2 [json_name = "included_headers"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message JsonBody {
                string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                string match_scope = 2 [json_name = "match_scope"];

                string oversize_handling = 3 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string included_paths = 1 [json_name = "included_paths"];

                  All all = 2;

                  message All {
                  }
                }
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message XssMatchStatement {
            FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Cookies cookies = 3;

              repeated Headers headers = 4;

              JsonBody json_body = 5 [json_name = "json_body"];

              Method method = 6;

              QueryString query_string = 7 [json_name = "query_string"];

              SingleHeader single_header = 8 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

              UriPath uri_path = 10 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
                string oversize_handling = 1 [json_name = "oversize_handling"];
              }

              message Cookies {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                  repeated string included_cookies = 2 [json_name = "included_cookies"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message Headers {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                  repeated string included_headers = 2 [json_name = "included_headers"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message JsonBody {
                string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                string match_scope = 2 [json_name = "match_scope"];

                string oversize_handling = 3 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string included_paths = 1 [json_name = "included_paths"];

                  All all = 2;

                  message All {
                  }
                }
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }
        }
      }

      message OrStatement {
        repeated Statement statement = 1;

        message Statement {
          AndStatement and_statement = 1 [json_name = "and_statement"];

          ByteMatchStatement byte_match_statement = 2 [json_name = "byte_match_statement"];

          GeoMatchStatement geo_match_statement = 3 [json_name = "geo_match_statement"];

          IpSetReferenceStatement ip_set_reference_statement = 4 [json_name = "ip_set_reference_statement"];

          LabelMatchStatement label_match_statement = 5 [json_name = "label_match_statement"];

          NotStatement not_statement = 6 [json_name = "not_statement"];

          OrStatement or_statement = 7 [json_name = "or_statement"];

          RegexMatchStatement regex_match_statement = 8 [json_name = "regex_match_statement"];

          RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 9 [
            json_name = "regex_pattern_set_reference_statement"
          ];

          SizeConstraintStatement size_constraint_statement = 10 [json_name = "size_constraint_statement"];

          SqliMatchStatement sqli_match_statement = 11 [json_name = "sqli_match_statement"];

          XssMatchStatement xss_match_statement = 12 [json_name = "xss_match_statement"];

          message AndStatement {
            repeated Statement statement = 1;

            message Statement {
              AndStatement and_statement = 1 [json_name = "and_statement"];

              ByteMatchStatement byte_match_statement = 2 [json_name = "byte_match_statement"];

              GeoMatchStatement geo_match_statement = 3 [json_name = "geo_match_statement"];

              IpSetReferenceStatement ip_set_reference_statement = 4 [json_name = "ip_set_reference_statement"];

              LabelMatchStatement label_match_statement = 5 [json_name = "label_match_statement"];

              NotStatement not_statement = 6 [json_name = "not_statement"];

              OrStatement or_statement = 7 [json_name = "or_statement"];

              RegexMatchStatement regex_match_statement = 8 [json_name = "regex_match_statement"];

              RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 9 [
                json_name = "regex_pattern_set_reference_statement"
              ];

              SizeConstraintStatement size_constraint_statement = 10 [json_name = "size_constraint_statement"];

              SqliMatchStatement sqli_match_statement = 11 [json_name = "sqli_match_statement"];

              XssMatchStatement xss_match_statement = 12 [json_name = "xss_match_statement"];

              message AndStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message ByteMatchStatement {
                string positional_constraint = 1 [json_name = "positional_constraint"];

                string search_string = 2 [json_name = "search_string"];

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message GeoMatchStatement {
                repeated string country_codes = 1 [json_name = "country_codes"];

                ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                message ForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];
                }
              }

              message IpSetReferenceStatement {
                string arn = 1;

                IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                message IpSetForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];

                  string position = 3;
                }
              }

              message LabelMatchStatement {
                string key = 1;

                string scope = 2;
              }

              message NotStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message OrStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message RegexMatchStatement {
                string regex_string = 1 [json_name = "regex_string"];

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message RegexPatternSetReferenceStatement {
                string arn = 1;

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SizeConstraintStatement {
                string comparison_operator = 1 [json_name = "comparison_operator"];

                int64 size = 2;

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SqliMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message XssMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }
            }
          }

          message ByteMatchStatement {
            string positional_constraint = 1 [json_name = "positional_constraint"];

            string search_string = 2 [json_name = "search_string"];

            FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Cookies cookies = 3;

              repeated Headers headers = 4;

              JsonBody json_body = 5 [json_name = "json_body"];

              Method method = 6;

              QueryString query_string = 7 [json_name = "query_string"];

              SingleHeader single_header = 8 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

              UriPath uri_path = 10 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
                string oversize_handling = 1 [json_name = "oversize_handling"];
              }

              message Cookies {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                  repeated string included_cookies = 2 [json_name = "included_cookies"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message Headers {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                  repeated string included_headers = 2 [json_name = "included_headers"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message JsonBody {
                string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                string match_scope = 2 [json_name = "match_scope"];

                string oversize_handling = 3 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string included_paths = 1 [json_name = "included_paths"];

                  All all = 2;

                  message All {
                  }
                }
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message GeoMatchStatement {
            repeated string country_codes = 1 [json_name = "country_codes"];

            ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

            message ForwardedIpConfig {
              string fallback_behavior = 1 [json_name = "fallback_behavior"];

              string header_name = 2 [json_name = "header_name"];
            }
          }

          message IpSetReferenceStatement {
            string arn = 1;

            IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

            message IpSetForwardedIpConfig {
              string fallback_behavior = 1 [json_name = "fallback_behavior"];

              string header_name = 2 [json_name = "header_name"];

              string position = 3;
            }
          }

          message LabelMatchStatement {
            string key = 1;

            string scope = 2;
          }

          message NotStatement {
            repeated Statement statement = 1;

            message Statement {
              AndStatement and_statement = 1 [json_name = "and_statement"];

              ByteMatchStatement byte_match_statement = 2 [json_name = "byte_match_statement"];

              GeoMatchStatement geo_match_statement = 3 [json_name = "geo_match_statement"];

              IpSetReferenceStatement ip_set_reference_statement = 4 [json_name = "ip_set_reference_statement"];

              LabelMatchStatement label_match_statement = 5 [json_name = "label_match_statement"];

              NotStatement not_statement = 6 [json_name = "not_statement"];

              OrStatement or_statement = 7 [json_name = "or_statement"];

              RegexMatchStatement regex_match_statement = 8 [json_name = "regex_match_statement"];

              RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 9 [
                json_name = "regex_pattern_set_reference_statement"
              ];

              SizeConstraintStatement size_constraint_statement = 10 [json_name = "size_constraint_statement"];

              SqliMatchStatement sqli_match_statement = 11 [json_name = "sqli_match_statement"];

              XssMatchStatement xss_match_statement = 12 [json_name = "xss_match_statement"];

              message AndStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message ByteMatchStatement {
                string positional_constraint = 1 [json_name = "positional_constraint"];

                string search_string = 2 [json_name = "search_string"];

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message GeoMatchStatement {
                repeated string country_codes = 1 [json_name = "country_codes"];

                ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                message ForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];
                }
              }

              message IpSetReferenceStatement {
                string arn = 1;

                IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                message IpSetForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];

                  string position = 3;
                }
              }

              message LabelMatchStatement {
                string key = 1;

                string scope = 2;
              }

              message NotStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message OrStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message RegexMatchStatement {
                string regex_string = 1 [json_name = "regex_string"];

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message RegexPatternSetReferenceStatement {
                string arn = 1;

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SizeConstraintStatement {
                string comparison_operator = 1 [json_name = "comparison_operator"];

                int64 size = 2;

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SqliMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message XssMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }
            }
          }

          message OrStatement {
            repeated Statement statement = 1;

            message Statement {
              AndStatement and_statement = 1 [json_name = "and_statement"];

              ByteMatchStatement byte_match_statement = 2 [json_name = "byte_match_statement"];

              GeoMatchStatement geo_match_statement = 3 [json_name = "geo_match_statement"];

              IpSetReferenceStatement ip_set_reference_statement = 4 [json_name = "ip_set_reference_statement"];

              LabelMatchStatement label_match_statement = 5 [json_name = "label_match_statement"];

              NotStatement not_statement = 6 [json_name = "not_statement"];

              OrStatement or_statement = 7 [json_name = "or_statement"];

              RegexMatchStatement regex_match_statement = 8 [json_name = "regex_match_statement"];

              RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 9 [
                json_name = "regex_pattern_set_reference_statement"
              ];

              SizeConstraintStatement size_constraint_statement = 10 [json_name = "size_constraint_statement"];

              SqliMatchStatement sqli_match_statement = 11 [json_name = "sqli_match_statement"];

              XssMatchStatement xss_match_statement = 12 [json_name = "xss_match_statement"];

              message AndStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message ByteMatchStatement {
                string positional_constraint = 1 [json_name = "positional_constraint"];

                string search_string = 2 [json_name = "search_string"];

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message GeoMatchStatement {
                repeated string country_codes = 1 [json_name = "country_codes"];

                ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                message ForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];
                }
              }

              message IpSetReferenceStatement {
                string arn = 1;

                IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                message IpSetForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];

                  string position = 3;
                }
              }

              message LabelMatchStatement {
                string key = 1;

                string scope = 2;
              }

              message NotStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message OrStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message RegexMatchStatement {
                string regex_string = 1 [json_name = "regex_string"];

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message RegexPatternSetReferenceStatement {
                string arn = 1;

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SizeConstraintStatement {
                string comparison_operator = 1 [json_name = "comparison_operator"];

                int64 size = 2;

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SqliMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message XssMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }
            }
          }

          message RegexMatchStatement {
            string regex_string = 1 [json_name = "regex_string"];

            FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Cookies cookies = 3;

              repeated Headers headers = 4;

              JsonBody json_body = 5 [json_name = "json_body"];

              Method method = 6;

              QueryString query_string = 7 [json_name = "query_string"];

              SingleHeader single_header = 8 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

              UriPath uri_path = 10 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
                string oversize_handling = 1 [json_name = "oversize_handling"];
              }

              message Cookies {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                  repeated string included_cookies = 2 [json_name = "included_cookies"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message Headers {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                  repeated string included_headers = 2 [json_name = "included_headers"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message JsonBody {
                string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                string match_scope = 2 [json_name = "match_scope"];

                string oversize_handling = 3 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string included_paths = 1 [json_name = "included_paths"];

                  All all = 2;

                  message All {
                  }
                }
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message RegexPatternSetReferenceStatement {
            string arn = 1;

            FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Cookies cookies = 3;

              repeated Headers headers = 4;

              JsonBody json_body = 5 [json_name = "json_body"];

              Method method = 6;

              QueryString query_string = 7 [json_name = "query_string"];

              SingleHeader single_header = 8 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

              UriPath uri_path = 10 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
                string oversize_handling = 1 [json_name = "oversize_handling"];
              }

              message Cookies {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                  repeated string included_cookies = 2 [json_name = "included_cookies"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message Headers {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                  repeated string included_headers = 2 [json_name = "included_headers"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message JsonBody {
                string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                string match_scope = 2 [json_name = "match_scope"];

                string oversize_handling = 3 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string included_paths = 1 [json_name = "included_paths"];

                  All all = 2;

                  message All {
                  }
                }
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message SizeConstraintStatement {
            string comparison_operator = 1 [json_name = "comparison_operator"];

            int64 size = 2;

            FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Cookies cookies = 3;

              repeated Headers headers = 4;

              JsonBody json_body = 5 [json_name = "json_body"];

              Method method = 6;

              QueryString query_string = 7 [json_name = "query_string"];

              SingleHeader single_header = 8 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

              UriPath uri_path = 10 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
                string oversize_handling = 1 [json_name = "oversize_handling"];
              }

              message Cookies {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                  repeated string included_cookies = 2 [json_name = "included_cookies"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message Headers {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                  repeated string included_headers = 2 [json_name = "included_headers"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message JsonBody {
                string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                string match_scope = 2 [json_name = "match_scope"];

                string oversize_handling = 3 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string included_paths = 1 [json_name = "included_paths"];

                  All all = 2;

                  message All {
                  }
                }
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message SqliMatchStatement {
            FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Cookies cookies = 3;

              repeated Headers headers = 4;

              JsonBody json_body = 5 [json_name = "json_body"];

              Method method = 6;

              QueryString query_string = 7 [json_name = "query_string"];

              SingleHeader single_header = 8 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

              UriPath uri_path = 10 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
                string oversize_handling = 1 [json_name = "oversize_handling"];
              }

              message Cookies {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                  repeated string included_cookies = 2 [json_name = "included_cookies"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message Headers {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                  repeated string included_headers = 2 [json_name = "included_headers"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message JsonBody {
                string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                string match_scope = 2 [json_name = "match_scope"];

                string oversize_handling = 3 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string included_paths = 1 [json_name = "included_paths"];

                  All all = 2;

                  message All {
                  }
                }
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message XssMatchStatement {
            FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Cookies cookies = 3;

              repeated Headers headers = 4;

              JsonBody json_body = 5 [json_name = "json_body"];

              Method method = 6;

              QueryString query_string = 7 [json_name = "query_string"];

              SingleHeader single_header = 8 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

              UriPath uri_path = 10 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
                string oversize_handling = 1 [json_name = "oversize_handling"];
              }

              message Cookies {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                  repeated string included_cookies = 2 [json_name = "included_cookies"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message Headers {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                  repeated string included_headers = 2 [json_name = "included_headers"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message JsonBody {
                string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                string match_scope = 2 [json_name = "match_scope"];

                string oversize_handling = 3 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string included_paths = 1 [json_name = "included_paths"];

                  All all = 2;

                  message All {
                  }
                }
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }
        }
      }

      message RateBasedStatement {
        string aggregate_key_type = 1 [json_name = "aggregate_key_type"];

        int64 limit = 2;

        ForwardedIpConfig forwarded_ip_config = 3 [json_name = "forwarded_ip_config"];

        ScopeDownStatement scope_down_statement = 4 [json_name = "scope_down_statement"];

        message ForwardedIpConfig {
          string fallback_behavior = 1 [json_name = "fallback_behavior"];

          string header_name = 2 [json_name = "header_name"];
        }

        message ScopeDownStatement {
          AndStatement and_statement = 1 [json_name = "and_statement"];

          ByteMatchStatement byte_match_statement = 2 [json_name = "byte_match_statement"];

          GeoMatchStatement geo_match_statement = 3 [json_name = "geo_match_statement"];

          IpSetReferenceStatement ip_set_reference_statement = 4 [json_name = "ip_set_reference_statement"];

          LabelMatchStatement label_match_statement = 5 [json_name = "label_match_statement"];

          NotStatement not_statement = 6 [json_name = "not_statement"];

          OrStatement or_statement = 7 [json_name = "or_statement"];

          RegexMatchStatement regex_match_statement = 8 [json_name = "regex_match_statement"];

          RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 9 [
            json_name = "regex_pattern_set_reference_statement"
          ];

          SizeConstraintStatement size_constraint_statement = 10 [json_name = "size_constraint_statement"];

          SqliMatchStatement sqli_match_statement = 11 [json_name = "sqli_match_statement"];

          XssMatchStatement xss_match_statement = 12 [json_name = "xss_match_statement"];

          message AndStatement {
            repeated Statement statement = 1;

            message Statement {
              AndStatement and_statement = 1 [json_name = "and_statement"];

              ByteMatchStatement byte_match_statement = 2 [json_name = "byte_match_statement"];

              GeoMatchStatement geo_match_statement = 3 [json_name = "geo_match_statement"];

              IpSetReferenceStatement ip_set_reference_statement = 4 [json_name = "ip_set_reference_statement"];

              LabelMatchStatement label_match_statement = 5 [json_name = "label_match_statement"];

              NotStatement not_statement = 6 [json_name = "not_statement"];

              OrStatement or_statement = 7 [json_name = "or_statement"];

              RegexMatchStatement regex_match_statement = 8 [json_name = "regex_match_statement"];

              RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 9 [
                json_name = "regex_pattern_set_reference_statement"
              ];

              SizeConstraintStatement size_constraint_statement = 10 [json_name = "size_constraint_statement"];

              SqliMatchStatement sqli_match_statement = 11 [json_name = "sqli_match_statement"];

              XssMatchStatement xss_match_statement = 12 [json_name = "xss_match_statement"];

              message AndStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message ByteMatchStatement {
                string positional_constraint = 1 [json_name = "positional_constraint"];

                string search_string = 2 [json_name = "search_string"];

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message GeoMatchStatement {
                repeated string country_codes = 1 [json_name = "country_codes"];

                ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                message ForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];
                }
              }

              message IpSetReferenceStatement {
                string arn = 1;

                IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                message IpSetForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];

                  string position = 3;
                }
              }

              message LabelMatchStatement {
                string key = 1;

                string scope = 2;
              }

              message NotStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message OrStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message RegexMatchStatement {
                string regex_string = 1 [json_name = "regex_string"];

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message RegexPatternSetReferenceStatement {
                string arn = 1;

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SizeConstraintStatement {
                string comparison_operator = 1 [json_name = "comparison_operator"];

                int64 size = 2;

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SqliMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message XssMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }
            }
          }

          message ByteMatchStatement {
            string positional_constraint = 1 [json_name = "positional_constraint"];

            string search_string = 2 [json_name = "search_string"];

            FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Cookies cookies = 3;

              repeated Headers headers = 4;

              JsonBody json_body = 5 [json_name = "json_body"];

              Method method = 6;

              QueryString query_string = 7 [json_name = "query_string"];

              SingleHeader single_header = 8 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

              UriPath uri_path = 10 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
                string oversize_handling = 1 [json_name = "oversize_handling"];
              }

              message Cookies {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                  repeated string included_cookies = 2 [json_name = "included_cookies"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message Headers {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                  repeated string included_headers = 2 [json_name = "included_headers"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message JsonBody {
                string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                string match_scope = 2 [json_name = "match_scope"];

                string oversize_handling = 3 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string included_paths = 1 [json_name = "included_paths"];

                  All all = 2;

                  message All {
                  }
                }
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message GeoMatchStatement {
            repeated string country_codes = 1 [json_name = "country_codes"];

            ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

            message ForwardedIpConfig {
              string fallback_behavior = 1 [json_name = "fallback_behavior"];

              string header_name = 2 [json_name = "header_name"];
            }
          }

          message IpSetReferenceStatement {
            string arn = 1;

            IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

            message IpSetForwardedIpConfig {
              string fallback_behavior = 1 [json_name = "fallback_behavior"];

              string header_name = 2 [json_name = "header_name"];

              string position = 3;
            }
          }

          message LabelMatchStatement {
            string key = 1;

            string scope = 2;
          }

          message NotStatement {
            repeated Statement statement = 1;

            message Statement {
              AndStatement and_statement = 1 [json_name = "and_statement"];

              ByteMatchStatement byte_match_statement = 2 [json_name = "byte_match_statement"];

              GeoMatchStatement geo_match_statement = 3 [json_name = "geo_match_statement"];

              IpSetReferenceStatement ip_set_reference_statement = 4 [json_name = "ip_set_reference_statement"];

              LabelMatchStatement label_match_statement = 5 [json_name = "label_match_statement"];

              NotStatement not_statement = 6 [json_name = "not_statement"];

              OrStatement or_statement = 7 [json_name = "or_statement"];

              RegexMatchStatement regex_match_statement = 8 [json_name = "regex_match_statement"];

              RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 9 [
                json_name = "regex_pattern_set_reference_statement"
              ];

              SizeConstraintStatement size_constraint_statement = 10 [json_name = "size_constraint_statement"];

              SqliMatchStatement sqli_match_statement = 11 [json_name = "sqli_match_statement"];

              XssMatchStatement xss_match_statement = 12 [json_name = "xss_match_statement"];

              message AndStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message ByteMatchStatement {
                string positional_constraint = 1 [json_name = "positional_constraint"];

                string search_string = 2 [json_name = "search_string"];

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message GeoMatchStatement {
                repeated string country_codes = 1 [json_name = "country_codes"];

                ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                message ForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];
                }
              }

              message IpSetReferenceStatement {
                string arn = 1;

                IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                message IpSetForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];

                  string position = 3;
                }
              }

              message LabelMatchStatement {
                string key = 1;

                string scope = 2;
              }

              message NotStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message OrStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message RegexMatchStatement {
                string regex_string = 1 [json_name = "regex_string"];

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message RegexPatternSetReferenceStatement {
                string arn = 1;

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SizeConstraintStatement {
                string comparison_operator = 1 [json_name = "comparison_operator"];

                int64 size = 2;

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SqliMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message XssMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }
            }
          }

          message OrStatement {
            repeated Statement statement = 1;

            message Statement {
              AndStatement and_statement = 1 [json_name = "and_statement"];

              ByteMatchStatement byte_match_statement = 2 [json_name = "byte_match_statement"];

              GeoMatchStatement geo_match_statement = 3 [json_name = "geo_match_statement"];

              IpSetReferenceStatement ip_set_reference_statement = 4 [json_name = "ip_set_reference_statement"];

              LabelMatchStatement label_match_statement = 5 [json_name = "label_match_statement"];

              NotStatement not_statement = 6 [json_name = "not_statement"];

              OrStatement or_statement = 7 [json_name = "or_statement"];

              RegexMatchStatement regex_match_statement = 8 [json_name = "regex_match_statement"];

              RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 9 [
                json_name = "regex_pattern_set_reference_statement"
              ];

              SizeConstraintStatement size_constraint_statement = 10 [json_name = "size_constraint_statement"];

              SqliMatchStatement sqli_match_statement = 11 [json_name = "sqli_match_statement"];

              XssMatchStatement xss_match_statement = 12 [json_name = "xss_match_statement"];

              message AndStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message ByteMatchStatement {
                string positional_constraint = 1 [json_name = "positional_constraint"];

                string search_string = 2 [json_name = "search_string"];

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message GeoMatchStatement {
                repeated string country_codes = 1 [json_name = "country_codes"];

                ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                message ForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];
                }
              }

              message IpSetReferenceStatement {
                string arn = 1;

                IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                message IpSetForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];

                  string position = 3;
                }
              }

              message LabelMatchStatement {
                string key = 1;

                string scope = 2;
              }

              message NotStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message OrStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexMatchStatement regex_match_statement = 5 [json_name = "regex_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 6 [
                    json_name = "regex_pattern_set_reference_statement"
                  ];

                  SizeConstraintStatement size_constraint_statement = 7 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 8 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 9 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexMatchStatement {
                    string regex_string = 1 [json_name = "regex_string"];

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Cookies cookies = 3;

                      repeated Headers headers = 4;

                      JsonBody json_body = 5 [json_name = "json_body"];

                      Method method = 6;

                      QueryString query_string = 7 [json_name = "query_string"];

                      SingleHeader single_header = 8 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                      UriPath uri_path = 10 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                        string oversize_handling = 1 [json_name = "oversize_handling"];
                      }

                      message Cookies {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                          repeated string included_cookies = 2 [json_name = "included_cookies"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message Headers {
                        string match_scope = 1 [json_name = "match_scope"];

                        string oversize_handling = 2 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                          repeated string included_headers = 2 [json_name = "included_headers"];

                          All all = 3;

                          message All {
                          }
                        }
                      }

                      message JsonBody {
                        string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                        string match_scope = 2 [json_name = "match_scope"];

                        string oversize_handling = 3 [json_name = "oversize_handling"];

                        MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                        message MatchPattern {
                          repeated string included_paths = 1 [json_name = "included_paths"];

                          All all = 2;

                          message All {
                          }
                        }
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message RegexMatchStatement {
                string regex_string = 1 [json_name = "regex_string"];

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message RegexPatternSetReferenceStatement {
                string arn = 1;

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SizeConstraintStatement {
                string comparison_operator = 1 [json_name = "comparison_operator"];

                int64 size = 2;

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SqliMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message XssMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Cookies cookies = 3;

                  repeated Headers headers = 4;

                  JsonBody json_body = 5 [json_name = "json_body"];

                  Method method = 6;

                  QueryString query_string = 7 [json_name = "query_string"];

                  SingleHeader single_header = 8 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

                  UriPath uri_path = 10 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                    string oversize_handling = 1 [json_name = "oversize_handling"];
                  }

                  message Cookies {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                      repeated string included_cookies = 2 [json_name = "included_cookies"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message Headers {
                    string match_scope = 1 [json_name = "match_scope"];

                    string oversize_handling = 2 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                      repeated string included_headers = 2 [json_name = "included_headers"];

                      All all = 3;

                      message All {
                      }
                    }
                  }

                  message JsonBody {
                    string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                    string match_scope = 2 [json_name = "match_scope"];

                    string oversize_handling = 3 [json_name = "oversize_handling"];

                    MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                    message MatchPattern {
                      repeated string included_paths = 1 [json_name = "included_paths"];

                      All all = 2;

                      message All {
                      }
                    }
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }
            }
          }

          message RegexMatchStatement {
            string regex_string = 1 [json_name = "regex_string"];

            FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Cookies cookies = 3;

              repeated Headers headers = 4;

              JsonBody json_body = 5 [json_name = "json_body"];

              Method method = 6;

              QueryString query_string = 7 [json_name = "query_string"];

              SingleHeader single_header = 8 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

              UriPath uri_path = 10 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
                string oversize_handling = 1 [json_name = "oversize_handling"];
              }

              message Cookies {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                  repeated string included_cookies = 2 [json_name = "included_cookies"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message Headers {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                  repeated string included_headers = 2 [json_name = "included_headers"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message JsonBody {
                string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                string match_scope = 2 [json_name = "match_scope"];

                string oversize_handling = 3 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string included_paths = 1 [json_name = "included_paths"];

                  All all = 2;

                  message All {
                  }
                }
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message RegexPatternSetReferenceStatement {
            string arn = 1;

            FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Cookies cookies = 3;

              repeated Headers headers = 4;

              JsonBody json_body = 5 [json_name = "json_body"];

              Method method = 6;

              QueryString query_string = 7 [json_name = "query_string"];

              SingleHeader single_header = 8 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

              UriPath uri_path = 10 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
                string oversize_handling = 1 [json_name = "oversize_handling"];
              }

              message Cookies {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                  repeated string included_cookies = 2 [json_name = "included_cookies"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message Headers {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                  repeated string included_headers = 2 [json_name = "included_headers"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message JsonBody {
                string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                string match_scope = 2 [json_name = "match_scope"];

                string oversize_handling = 3 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string included_paths = 1 [json_name = "included_paths"];

                  All all = 2;

                  message All {
                  }
                }
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message SizeConstraintStatement {
            string comparison_operator = 1 [json_name = "comparison_operator"];

            int64 size = 2;

            FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Cookies cookies = 3;

              repeated Headers headers = 4;

              JsonBody json_body = 5 [json_name = "json_body"];

              Method method = 6;

              QueryString query_string = 7 [json_name = "query_string"];

              SingleHeader single_header = 8 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

              UriPath uri_path = 10 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
                string oversize_handling = 1 [json_name = "oversize_handling"];
              }

              message Cookies {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                  repeated string included_cookies = 2 [json_name = "included_cookies"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message Headers {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                  repeated string included_headers = 2 [json_name = "included_headers"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message JsonBody {
                string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                string match_scope = 2 [json_name = "match_scope"];

                string oversize_handling = 3 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string included_paths = 1 [json_name = "included_paths"];

                  All all = 2;

                  message All {
                  }
                }
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message SqliMatchStatement {
            FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Cookies cookies = 3;

              repeated Headers headers = 4;

              JsonBody json_body = 5 [json_name = "json_body"];

              Method method = 6;

              QueryString query_string = 7 [json_name = "query_string"];

              SingleHeader single_header = 8 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

              UriPath uri_path = 10 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
                string oversize_handling = 1 [json_name = "oversize_handling"];
              }

              message Cookies {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                  repeated string included_cookies = 2 [json_name = "included_cookies"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message Headers {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                  repeated string included_headers = 2 [json_name = "included_headers"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message JsonBody {
                string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                string match_scope = 2 [json_name = "match_scope"];

                string oversize_handling = 3 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string included_paths = 1 [json_name = "included_paths"];

                  All all = 2;

                  message All {
                  }
                }
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message XssMatchStatement {
            FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Cookies cookies = 3;

              repeated Headers headers = 4;

              JsonBody json_body = 5 [json_name = "json_body"];

              Method method = 6;

              QueryString query_string = 7 [json_name = "query_string"];

              SingleHeader single_header = 8 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

              UriPath uri_path = 10 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
                string oversize_handling = 1 [json_name = "oversize_handling"];
              }

              message Cookies {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

                  repeated string included_cookies = 2 [json_name = "included_cookies"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message Headers {
                string match_scope = 1 [json_name = "match_scope"];

                string oversize_handling = 2 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 3 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string excluded_headers = 1 [json_name = "excluded_headers"];

                  repeated string included_headers = 2 [json_name = "included_headers"];

                  All all = 3;

                  message All {
                  }
                }
              }

              message JsonBody {
                string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

                string match_scope = 2 [json_name = "match_scope"];

                string oversize_handling = 3 [json_name = "oversize_handling"];

                MatchPattern match_pattern = 4 [json_name = "match_pattern"];

                message MatchPattern {
                  repeated string included_paths = 1 [json_name = "included_paths"];

                  All all = 2;

                  message All {
                  }
                }
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }
        }
      }

      message RegexMatchStatement {
        string regex_string = 1 [json_name = "regex_string"];

        FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

        repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

        message FieldToMatch {
          AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

          Body body = 2;

          Cookies cookies = 3;

          repeated Headers headers = 4;

          JsonBody json_body = 5 [json_name = "json_body"];

          Method method = 6;

          QueryString query_string = 7 [json_name = "query_string"];

          SingleHeader single_header = 8 [json_name = "single_header"];

          SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

          UriPath uri_path = 10 [json_name = "uri_path"];

          message AllQueryArguments {
          }

          message Body {
            string oversize_handling = 1 [json_name = "oversize_handling"];
          }

          message Cookies {
            string match_scope = 1 [json_name = "match_scope"];

            string oversize_handling = 2 [json_name = "oversize_handling"];

            repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

            message MatchPattern {
              repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

              repeated string included_cookies = 2 [json_name = "included_cookies"];

              All all = 3;

              message All {
              }
            }
          }

          message Headers {
            string match_scope = 1 [json_name = "match_scope"];

            string oversize_handling = 2 [json_name = "oversize_handling"];

            MatchPattern match_pattern = 3 [json_name = "match_pattern"];

            message MatchPattern {
              repeated string excluded_headers = 1 [json_name = "excluded_headers"];

              repeated string included_headers = 2 [json_name = "included_headers"];

              All all = 3;

              message All {
              }
            }
          }

          message JsonBody {
            string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

            string match_scope = 2 [json_name = "match_scope"];

            string oversize_handling = 3 [json_name = "oversize_handling"];

            MatchPattern match_pattern = 4 [json_name = "match_pattern"];

            message MatchPattern {
              repeated string included_paths = 1 [json_name = "included_paths"];

              All all = 2;

              message All {
              }
            }
          }

          message Method {
          }

          message QueryString {
          }

          message SingleHeader {
            string name = 1;
          }

          message SingleQueryArgument {
            string name = 1;
          }

          message UriPath {
          }
        }

        message TextTransformation {
          int64 priority = 1;

          string type = 2;
        }
      }

      message RegexPatternSetReferenceStatement {
        string arn = 1;

        FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

        repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

        message FieldToMatch {
          AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

          Body body = 2;

          Cookies cookies = 3;

          repeated Headers headers = 4;

          JsonBody json_body = 5 [json_name = "json_body"];

          Method method = 6;

          QueryString query_string = 7 [json_name = "query_string"];

          SingleHeader single_header = 8 [json_name = "single_header"];

          SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

          UriPath uri_path = 10 [json_name = "uri_path"];

          message AllQueryArguments {
          }

          message Body {
            string oversize_handling = 1 [json_name = "oversize_handling"];
          }

          message Cookies {
            string match_scope = 1 [json_name = "match_scope"];

            string oversize_handling = 2 [json_name = "oversize_handling"];

            repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

            message MatchPattern {
              repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

              repeated string included_cookies = 2 [json_name = "included_cookies"];

              All all = 3;

              message All {
              }
            }
          }

          message Headers {
            string match_scope = 1 [json_name = "match_scope"];

            string oversize_handling = 2 [json_name = "oversize_handling"];

            MatchPattern match_pattern = 3 [json_name = "match_pattern"];

            message MatchPattern {
              repeated string excluded_headers = 1 [json_name = "excluded_headers"];

              repeated string included_headers = 2 [json_name = "included_headers"];

              All all = 3;

              message All {
              }
            }
          }

          message JsonBody {
            string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

            string match_scope = 2 [json_name = "match_scope"];

            string oversize_handling = 3 [json_name = "oversize_handling"];

            MatchPattern match_pattern = 4 [json_name = "match_pattern"];

            message MatchPattern {
              repeated string included_paths = 1 [json_name = "included_paths"];

              All all = 2;

              message All {
              }
            }
          }

          message Method {
          }

          message QueryString {
          }

          message SingleHeader {
            string name = 1;
          }

          message SingleQueryArgument {
            string name = 1;
          }

          message UriPath {
          }
        }

        message TextTransformation {
          int64 priority = 1;

          string type = 2;
        }
      }

      message RuleGroupReferenceStatement {
        string arn = 1;

        repeated RuleActionOverride rule_action_override = 2 [json_name = "rule_action_override"];

        message RuleActionOverride {
          string name = 1;

          ActionToUse action_to_use = 2 [json_name = "action_to_use"];

          message ActionToUse {
            Allow allow = 1;

            Block block = 2;

            Captcha captcha = 3;

            Count count = 4;

            message Allow {
              CustomRequestHandling custom_request_handling = 1 [json_name = "custom_request_handling"];

              message CustomRequestHandling {
                repeated InsertHeader insert_header = 1 [json_name = "insert_header"];

                message InsertHeader {
                  string name = 1;

                  string value = 2;
                }
              }
            }

            message Block {
              CustomResponse custom_response = 1 [json_name = "custom_response"];

              message CustomResponse {
                string custom_response_body_key = 1 [json_name = "custom_response_body_key"];

                int64 response_code = 2 [json_name = "response_code"];

                repeated ResponseHeader response_header = 3 [json_name = "response_header"];

                message ResponseHeader {
                  string name = 1;

                  string value = 2;
                }
              }
            }

            message Captcha {
              CustomRequestHandling custom_request_handling = 1 [json_name = "custom_request_handling"];

              message CustomRequestHandling {
                repeated InsertHeader insert_header = 1 [json_name = "insert_header"];

                message InsertHeader {
                  string name = 1;

                  string value = 2;
                }
              }
            }

            message Count {
              CustomRequestHandling custom_request_handling = 1 [json_name = "custom_request_handling"];

              message CustomRequestHandling {
                repeated InsertHeader insert_header = 1 [json_name = "insert_header"];

                message InsertHeader {
                  string name = 1;

                  string value = 2;
                }
              }
            }
          }
        }
      }

      message SizeConstraintStatement {
        string comparison_operator = 1 [json_name = "comparison_operator"];

        int64 size = 2;

        FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

        repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

        message FieldToMatch {
          AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

          Body body = 2;

          Cookies cookies = 3;

          repeated Headers headers = 4;

          JsonBody json_body = 5 [json_name = "json_body"];

          Method method = 6;

          QueryString query_string = 7 [json_name = "query_string"];

          SingleHeader single_header = 8 [json_name = "single_header"];

          SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

          UriPath uri_path = 10 [json_name = "uri_path"];

          message AllQueryArguments {
          }

          message Body {
            string oversize_handling = 1 [json_name = "oversize_handling"];
          }

          message Cookies {
            string match_scope = 1 [json_name = "match_scope"];

            string oversize_handling = 2 [json_name = "oversize_handling"];

            repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

            message MatchPattern {
              repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

              repeated string included_cookies = 2 [json_name = "included_cookies"];

              All all = 3;

              message All {
              }
            }
          }

          message Headers {
            string match_scope = 1 [json_name = "match_scope"];

            string oversize_handling = 2 [json_name = "oversize_handling"];

            MatchPattern match_pattern = 3 [json_name = "match_pattern"];

            message MatchPattern {
              repeated string excluded_headers = 1 [json_name = "excluded_headers"];

              repeated string included_headers = 2 [json_name = "included_headers"];

              All all = 3;

              message All {
              }
            }
          }

          message JsonBody {
            string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

            string match_scope = 2 [json_name = "match_scope"];

            string oversize_handling = 3 [json_name = "oversize_handling"];

            MatchPattern match_pattern = 4 [json_name = "match_pattern"];

            message MatchPattern {
              repeated string included_paths = 1 [json_name = "included_paths"];

              All all = 2;

              message All {
              }
            }
          }

          message Method {
          }

          message QueryString {
          }

          message SingleHeader {
            string name = 1;
          }

          message SingleQueryArgument {
            string name = 1;
          }

          message UriPath {
          }
        }

        message TextTransformation {
          int64 priority = 1;

          string type = 2;
        }
      }

      message SqliMatchStatement {
        FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

        repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

        message FieldToMatch {
          AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

          Body body = 2;

          Cookies cookies = 3;

          repeated Headers headers = 4;

          JsonBody json_body = 5 [json_name = "json_body"];

          Method method = 6;

          QueryString query_string = 7 [json_name = "query_string"];

          SingleHeader single_header = 8 [json_name = "single_header"];

          SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

          UriPath uri_path = 10 [json_name = "uri_path"];

          message AllQueryArguments {
          }

          message Body {
            string oversize_handling = 1 [json_name = "oversize_handling"];
          }

          message Cookies {
            string match_scope = 1 [json_name = "match_scope"];

            string oversize_handling = 2 [json_name = "oversize_handling"];

            repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

            message MatchPattern {
              repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

              repeated string included_cookies = 2 [json_name = "included_cookies"];

              All all = 3;

              message All {
              }
            }
          }

          message Headers {
            string match_scope = 1 [json_name = "match_scope"];

            string oversize_handling = 2 [json_name = "oversize_handling"];

            MatchPattern match_pattern = 3 [json_name = "match_pattern"];

            message MatchPattern {
              repeated string excluded_headers = 1 [json_name = "excluded_headers"];

              repeated string included_headers = 2 [json_name = "included_headers"];

              All all = 3;

              message All {
              }
            }
          }

          message JsonBody {
            string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

            string match_scope = 2 [json_name = "match_scope"];

            string oversize_handling = 3 [json_name = "oversize_handling"];

            MatchPattern match_pattern = 4 [json_name = "match_pattern"];

            message MatchPattern {
              repeated string included_paths = 1 [json_name = "included_paths"];

              All all = 2;

              message All {
              }
            }
          }

          message Method {
          }

          message QueryString {
          }

          message SingleHeader {
            string name = 1;
          }

          message SingleQueryArgument {
            string name = 1;
          }

          message UriPath {
          }
        }

        message TextTransformation {
          int64 priority = 1;

          string type = 2;
        }
      }

      message XssMatchStatement {
        FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

        repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

        message FieldToMatch {
          AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

          Body body = 2;

          Cookies cookies = 3;

          repeated Headers headers = 4;

          JsonBody json_body = 5 [json_name = "json_body"];

          Method method = 6;

          QueryString query_string = 7 [json_name = "query_string"];

          SingleHeader single_header = 8 [json_name = "single_header"];

          SingleQueryArgument single_query_argument = 9 [json_name = "single_query_argument"];

          UriPath uri_path = 10 [json_name = "uri_path"];

          message AllQueryArguments {
          }

          message Body {
            string oversize_handling = 1 [json_name = "oversize_handling"];
          }

          message Cookies {
            string match_scope = 1 [json_name = "match_scope"];

            string oversize_handling = 2 [json_name = "oversize_handling"];

            repeated MatchPattern match_pattern = 3 [json_name = "match_pattern"];

            message MatchPattern {
              repeated string excluded_cookies = 1 [json_name = "excluded_cookies"];

              repeated string included_cookies = 2 [json_name = "included_cookies"];

              All all = 3;

              message All {
              }
            }
          }

          message Headers {
            string match_scope = 1 [json_name = "match_scope"];

            string oversize_handling = 2 [json_name = "oversize_handling"];

            MatchPattern match_pattern = 3 [json_name = "match_pattern"];

            message MatchPattern {
              repeated string excluded_headers = 1 [json_name = "excluded_headers"];

              repeated string included_headers = 2 [json_name = "included_headers"];

              All all = 3;

              message All {
              }
            }
          }

          message JsonBody {
            string invalid_fallback_behavior = 1 [json_name = "invalid_fallback_behavior"];

            string match_scope = 2 [json_name = "match_scope"];

            string oversize_handling = 3 [json_name = "oversize_handling"];

            MatchPattern match_pattern = 4 [json_name = "match_pattern"];

            message MatchPattern {
              repeated string included_paths = 1 [json_name = "included_paths"];

              All all = 2;

              message All {
              }
            }
          }

          message Method {
          }

          message QueryString {
          }

          message SingleHeader {
            string name = 1;
          }

          message SingleQueryArgument {
            string name = 1;
          }

          message UriPath {
          }
        }

        message TextTransformation {
          int64 priority = 1;

          string type = 2;
        }
      }
    }

    message VisibilityConfig {
      bool cloudwatch_metrics_enabled = 1 [json_name = "cloudwatch_metrics_enabled"];

      string metric_name = 2 [json_name = "metric_name"];

      bool sampled_requests_enabled = 3 [json_name = "sampled_requests_enabled"];
    }
  }

  message VisibilityConfig {
    bool cloudwatch_metrics_enabled = 1 [json_name = "cloudwatch_metrics_enabled"];

    string metric_name = 2 [json_name = "metric_name"];

    bool sampled_requests_enabled = 3 [json_name = "sampled_requests_enabled"];
  }
}

// AwsWafv2WebAclAssociation version is 0
message AwsWafv2WebAclAssociation {
  string id = 1;

  string resource_arn = 2 [json_name = "resource_arn"];

  string web_acl_arn = 3 [json_name = "web_acl_arn"];

  repeated Timeouts timeouts = 4;

  map<string, string> for_each = 5 [json_name = "for_each"];

  repeated string depends_on = 6 [json_name = "depends_on"];

  int32 count = 7;

  string provider = 8;

  terraform.v1.Lifecycle lifecycle = 9;

  message Timeouts {
    string create = 1;
  }
}

// AwsWafv2WebAclLoggingConfiguration version is 0
message AwsWafv2WebAclLoggingConfiguration {
  string id = 1;

  // AWS Kinesis Firehose Delivery Stream ARNs
  repeated string log_destination_configs = 2 [json_name = "log_destination_configs"];

  // AWS WebACL ARN
  string resource_arn = 3 [json_name = "resource_arn"];

  LoggingFilter logging_filter = 4 [json_name = "logging_filter"];

  repeated RedactedFields redacted_fields = 5 [json_name = "redacted_fields"];

  map<string, string> for_each = 6 [json_name = "for_each"];

  repeated string depends_on = 7 [json_name = "depends_on"];

  int32 count = 8;

  string provider = 9;

  terraform.v1.Lifecycle lifecycle = 10;

  message LoggingFilter {
    string default_behavior = 1 [json_name = "default_behavior"];

    repeated Filter filter = 2;

    message Filter {
      string behavior = 1;

      string requirement = 2;

      repeated Condition condition = 3;

      message Condition {
        ActionCondition action_condition = 1 [json_name = "action_condition"];

        LabelNameCondition label_name_condition = 2 [json_name = "label_name_condition"];

        message ActionCondition {
          string action = 1;
        }

        message LabelNameCondition {
          string label_name = 1 [json_name = "label_name"];
        }
      }
    }
  }

  message RedactedFields {
    Method method = 1;

    QueryString query_string = 2 [json_name = "query_string"];

    SingleHeader single_header = 3 [json_name = "single_header"];

    UriPath uri_path = 4 [json_name = "uri_path"];

    message Method {
    }

    message QueryString {
    }

    message SingleHeader {
      string name = 1;
    }

    message UriPath {
    }
  }
}
