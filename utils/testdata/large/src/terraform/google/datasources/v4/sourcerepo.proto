syntax = "proto3";

// Provider: google 4.69.1
package terraform.google.datasources.v4;

import "terraform/v1/meta.proto";

// GoogleSourcerepoRepository version is 0
message GoogleSourcerepoRepository {
  string id = 1;

  // Resource name of the repository, of the form '{{repo}}'.
  // The repo name may contain slashes. eg, 'name/with/slash'
  string name = 2;

  string project = 3;

  // How this repository publishes a change in the repository through Cloud Pub/Sub.
  // Keyed by the topic names.
  repeated PubsubConfigs pubsub_configs = 4 [json_name = "pubsub_configs"];

  // The disk usage of the repo, in bytes.
  int64 size = 5;

  // URL to clone the repository from Google Cloud Source Repositories.
  string url = 6;

  map<string, string> for_each = 7 [json_name = "for_each"];

  repeated string depends_on = 8 [json_name = "depends_on"];

  int32 count = 9;

  string provider = 10;

  terraform.v1.Lifecycle lifecycle = 11;

  message PubsubConfigs {
    // message_format: string
    string message_format = 1 [json_name = "message_format"];

    // service_account_email: string
    string service_account_email = 2 [json_name = "service_account_email"];

    // topic: string
    string topic = 3;
  }
}

// GoogleSourcerepoRepositoryIamPolicy version is 0
message GoogleSourcerepoRepositoryIamPolicy {
  string etag = 1;

  string id = 2;

  string policy_data = 3 [json_name = "policy_data"];

  string project = 4;

  string repository = 5;

  map<string, string> for_each = 6 [json_name = "for_each"];

  repeated string depends_on = 7 [json_name = "depends_on"];

  int32 count = 8;

  string provider = 9;

  terraform.v1.Lifecycle lifecycle = 10;
}
