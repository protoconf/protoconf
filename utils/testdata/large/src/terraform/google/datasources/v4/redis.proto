syntax = "proto3";

// Provider: google 4.69.1
package terraform.google.datasources.v4;

import "terraform/v1/meta.proto";

// GoogleRedisInstance version is 0
message GoogleRedisInstance {
  // Only applicable to STANDARD_HA tier which protects the instance
  // against zonal failures by provisioning it across two zones.
  // If provided, it must be a different zone from the one provided in
  // [locationId].
  string alternative_location_id = 1 [json_name = "alternative_location_id"];

  // Optional. Indicates whether OSS Redis AUTH is enabled for the
  // instance. If set to "true" AUTH is enabled on the instance.
  // Default value is "false" meaning AUTH is disabled.
  bool auth_enabled = 2 [json_name = "auth_enabled"];

  // AUTH String set on the instance. This field will only be populated if auth_enabled is true.
  string auth_string = 3 [json_name = "auth_string"];

  // The full name of the Google Compute Engine network to which the
  // instance is connected. If left unspecified, the default network
  // will be used.
  string authorized_network = 4 [json_name = "authorized_network"];

  // The connection mode of the Redis instance. Default value: "DIRECT_PEERING" Possible values: ["DIRECT_PEERING", "PRIVATE_SERVICE_ACCESS"]
  string connect_mode = 5 [json_name = "connect_mode"];

  // The time the instance was created in RFC3339 UTC "Zulu" format,
  // accurate to nanoseconds.
  string create_time = 6 [json_name = "create_time"];

  // The current zone where the Redis endpoint is placed.
  // For Basic Tier instances, this will always be the same as the
  // [locationId] provided by the user at creation time. For Standard Tier
  // instances, this can be either [locationId] or [alternativeLocationId]
  // and can change after a failover event.
  string current_location_id = 7 [json_name = "current_location_id"];

  // Optional. The KMS key reference that you want to use to encrypt the data at rest for this Redis
  // instance. If this is provided, CMEK is enabled.
  string customer_managed_key = 8 [json_name = "customer_managed_key"];

  // An arbitrary and optional user-provided name for the instance.
  string display_name = 9 [json_name = "display_name"];

  // Hostname or IP address of the exposed Redis endpoint used by clients
  // to connect to the service.
  string host = 10;

  string id = 11;

  // Resource labels to represent user provided metadata.
  map<string, string> labels = 12;

  // The zone where the instance will be provisioned. If not provided,
  // the service will choose a zone for the instance. For STANDARD_HA tier,
  // instances will be created across two zones for protection against
  // zonal failures. If [alternativeLocationId] is also provided, it must
  // be different from [locationId].
  string location_id = 13 [json_name = "location_id"];

  // Maintenance policy for an instance.
  repeated MaintenancePolicy maintenance_policy = 14 [json_name = "maintenance_policy"];

  // Upcoming maintenance schedule.
  repeated MaintenanceSchedule maintenance_schedule = 15 [json_name = "maintenance_schedule"];

  // Redis memory size in GiB.
  int64 memory_size_gb = 16 [json_name = "memory_size_gb"];

  // The ID of the instance or a fully qualified identifier for the instance.
  string name = 17;

  // Output only. Info per node.
  repeated Nodes nodes = 18;

  // Persistence configuration for an instance.
  repeated PersistenceConfig persistence_config = 19 [json_name = "persistence_config"];

  // Output only. Cloud IAM identity used by import / export operations
  // to transfer data to/from Cloud Storage. Format is "serviceAccount:".
  // The value may change over time for a given instance so should be
  // checked before each import/export operation.
  string persistence_iam_identity = 20 [json_name = "persistence_iam_identity"];

  // The port number of the exposed Redis endpoint.
  int64 port = 21;

  string project = 22;

  // Output only. Hostname or IP address of the exposed readonly Redis endpoint. Standard tier only.
  // Targets all healthy replica nodes in instance. Replication is asynchronous and replica nodes
  // will exhibit some lag behind the primary. Write requests must target 'host'.
  string read_endpoint = 23 [json_name = "read_endpoint"];

  // Output only. The port number of the exposed readonly redis endpoint. Standard tier only.
  // Write requests should target 'port'.
  int64 read_endpoint_port = 24 [json_name = "read_endpoint_port"];

  // Optional. Read replica mode. Can only be specified when trying to create the instance.
  // If not set, Memorystore Redis backend will default to READ_REPLICAS_DISABLED.
  // - READ_REPLICAS_DISABLED: If disabled, read endpoint will not be provided and the
  // instance cannot scale up or down the number of replicas.
  // - READ_REPLICAS_ENABLED: If enabled, read endpoint will be provided and the instance
  // can scale up and down the number of replicas. Possible values: ["READ_REPLICAS_DISABLED", "READ_REPLICAS_ENABLED"]
  string read_replicas_mode = 25 [json_name = "read_replicas_mode"];

  // Redis configuration parameters, according to http://redis.io/topics/config.
  // Please check Memorystore documentation for the list of supported parameters:
  // https://cloud.google.com/memorystore/docs/redis/reference/rest/v1/projects.locations.instances#Instance.FIELDS.redis_configs
  map<string, string> redis_configs = 26 [json_name = "redis_configs"];

  // The version of Redis software. If not provided, latest supported
  // version will be used. Please check the API documentation linked
  // at the top for the latest valid values.
  string redis_version = 27 [json_name = "redis_version"];

  // The name of the Redis region of the instance.
  string region = 28;

  // Optional. The number of replica nodes. The valid range for the Standard Tier with
  // read replicas enabled is [1-5] and defaults to 2. If read replicas are not enabled
  // for a Standard Tier instance, the only valid value is 1 and the default is 1.
  // The valid value for basic tier is 0 and the default is also 0.
  int64 replica_count = 29 [json_name = "replica_count"];

  // The CIDR range of internal addresses that are reserved for this
  // instance. If not provided, the service will choose an unused /29
  // block, for example, 10.0.0.0/29 or 192.168.0.0/29. Ranges must be
  // unique and non-overlapping with existing subnets in an authorized
  // network.
  string reserved_ip_range = 30 [json_name = "reserved_ip_range"];

  // Optional. Additional IP range for node placement. Required when enabling read replicas on
  // an existing instance. For DIRECT_PEERING mode value must be a CIDR range of size /28, or
  // "auto". For PRIVATE_SERVICE_ACCESS mode value must be the name of an allocated address
  // range associated with the private service access connection, or "auto".
  string secondary_ip_range = 31 [json_name = "secondary_ip_range"];

  // List of server CA certificates for the instance.
  repeated ServerCaCerts server_ca_certs = 32 [json_name = "server_ca_certs"];

  // The service tier of the instance. Must be one of these values:
  //
  // - BASIC: standalone instance
  // - STANDARD_HA: highly available primary/replica instances Default value: "BASIC" Possible values: ["BASIC", "STANDARD_HA"]
  string tier = 33;

  // The TLS mode of the Redis instance, If not provided, TLS is disabled for the instance.
  //
  // - SERVER_AUTHENTICATION: Client to Server traffic encryption enabled with server authentication Default value: "DISABLED" Possible values: ["SERVER_AUTHENTICATION", "DISABLED"]
  string transit_encryption_mode = 34 [json_name = "transit_encryption_mode"];

  map<string, string> for_each = 35 [json_name = "for_each"];

  repeated string depends_on = 36 [json_name = "depends_on"];

  int32 count = 37;

  string provider = 38;

  terraform.v1.Lifecycle lifecycle = 39;

  message MaintenancePolicy {
    // create_time: string
    string create_time = 1 [json_name = "create_time"];

    // description: string
    string description = 2;

    // update_time: string
    string update_time = 3 [json_name = "update_time"];

    // weekly_maintenance_window: list of object
    repeated WeeklyMaintenanceWindow weekly_maintenance_window = 4 [json_name = "weekly_maintenance_window"];

    message WeeklyMaintenanceWindow {
      // day: string
      string day = 1;

      // duration: string
      string duration = 2;

      // start_time: list of object
      repeated StartTime start_time = 3 [json_name = "start_time"];

      message StartTime {
        // hours: number
        int64 hours = 1;

        // minutes: number
        int64 minutes = 2;

        // nanos: number
        int64 nanos = 3;

        // seconds: number
        int64 seconds = 4;
      }
    }
  }

  message MaintenanceSchedule {
    // end_time: string
    string end_time = 1 [json_name = "end_time"];

    // schedule_deadline_time: string
    string schedule_deadline_time = 2 [json_name = "schedule_deadline_time"];

    // start_time: string
    string start_time = 3 [json_name = "start_time"];
  }

  message Nodes {
    // id: string
    string id = 1;

    // zone: string
    string zone = 2;
  }

  message PersistenceConfig {
    // persistence_mode: string
    string persistence_mode = 1 [json_name = "persistence_mode"];

    // rdb_next_snapshot_time: string
    string rdb_next_snapshot_time = 2 [json_name = "rdb_next_snapshot_time"];

    // rdb_snapshot_period: string
    string rdb_snapshot_period = 3 [json_name = "rdb_snapshot_period"];

    // rdb_snapshot_start_time: string
    string rdb_snapshot_start_time = 4 [json_name = "rdb_snapshot_start_time"];
  }

  message ServerCaCerts {
    // cert: string
    string cert = 1;

    // create_time: string
    string create_time = 2 [json_name = "create_time"];

    // expire_time: string
    string expire_time = 3 [json_name = "expire_time"];

    // serial_number: string
    string serial_number = 4 [json_name = "serial_number"];

    // sha1_fingerprint: string
    string sha1_fingerprint = 5 [json_name = "sha1_fingerprint"];
  }
}
