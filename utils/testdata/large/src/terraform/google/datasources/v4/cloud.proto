syntax = "proto3";

// Provider: google 4.69.1
package terraform.google.datasources.v4;

import "terraform/v1/meta.proto";

// GoogleCloudIdentityGroupMemberships version is 0
message GoogleCloudIdentityGroupMemberships {
  // The name of the Group to get memberships from.
  string group = 1;

  string id = 2;

  // List of Cloud Identity group memberships.
  repeated Memberships memberships = 3;

  map<string, string> for_each = 4 [json_name = "for_each"];

  repeated string depends_on = 5 [json_name = "depends_on"];

  int32 count = 6;

  string provider = 7;

  terraform.v1.Lifecycle lifecycle = 8;

  message Memberships {
    // create_time: string
    string create_time = 1 [json_name = "create_time"];

    // group: string
    string group = 2;

    // name: string
    string name = 3;

    // preferred_member_key: list of object
    repeated PreferredMemberKey preferred_member_key = 4 [json_name = "preferred_member_key"];

    // roles: set of object
    repeated Roles roles = 5;

    // type: string
    string type = 6;

    // update_time: string
    string update_time = 7 [json_name = "update_time"];

    message PreferredMemberKey {
      // id: string
      string id = 1;

      // namespace: string
      string namespace = 2;
    }

    message Roles {
      // name: string
      string name = 1;
    }
  }
}

// GoogleCloudIdentityGroups version is 0
message GoogleCloudIdentityGroups {
  // List of Cloud Identity groups.
  repeated Groups groups = 1;

  string id = 2;

  // The resource name of the entity under which this Group resides in the
  // Cloud Identity resource hierarchy.
  //
  // Must be of the form identitysources/{identity_source_id} for external-identity-mapped
  // groups or customers/{customer_id} for Google Groups.
  string parent = 3;

  map<string, string> for_each = 4 [json_name = "for_each"];

  repeated string depends_on = 5 [json_name = "depends_on"];

  int32 count = 6;

  string provider = 7;

  terraform.v1.Lifecycle lifecycle = 8;

  message Groups {
    // create_time: string
    string create_time = 1 [json_name = "create_time"];

    // description: string
    string description = 2;

    // display_name: string
    string display_name = 3 [json_name = "display_name"];

    // group_key: list of object
    repeated GroupKey group_key = 4 [json_name = "group_key"];

    // initial_group_config: string
    string initial_group_config = 5 [json_name = "initial_group_config"];

    // labels: map of string
    map<string, string> labels = 6;

    // name: string
    string name = 7;

    // parent: string
    string parent = 8;

    // update_time: string
    string update_time = 9 [json_name = "update_time"];

    message GroupKey {
      // id: string
      string id = 1;

      // namespace: string
      string namespace = 2;
    }
  }
}

// GoogleCloudRunLocations version is 0
message GoogleCloudRunLocations {
  string id = 1;

  repeated string locations = 2;

  string project = 3;

  map<string, string> for_each = 4 [json_name = "for_each"];

  repeated string depends_on = 5 [json_name = "depends_on"];

  int32 count = 6;

  string provider = 7;

  terraform.v1.Lifecycle lifecycle = 8;
}

// GoogleCloudRunService version is 0
message GoogleCloudRunService {
  // If set to 'true', the revision name (template.metadata.name) will be omitted and
  // autogenerated by Cloud Run. This cannot be set to 'true' while 'template.metadata.name'
  // is also set.
  // (For legacy support, if 'template.metadata.name' is unset in state while
  // this field is set to false, the revision name will still autogenerate.)
  bool autogenerate_revision_name = 1 [json_name = "autogenerate_revision_name"];

  string id = 2;

  // The location of the cloud run instance. eg us-central1
  string location = 3;

  // Metadata associated with this Service, including name, namespace, labels,
  // and annotations.
  repeated Metadata metadata = 4;

  // Name must be unique within a Google Cloud project and region.
  // Is required when creating resources. Name is primarily intended
  // for creation idempotence and configuration definition. Cannot be updated.
  // More info: http://kubernetes.io/docs/user-guide/identifiers#names
  string name = 5;

  string project = 6;

  // The current status of the Service.
  repeated Status status = 7;

  // template holds the latest specification for the Revision to
  // be stamped out. The template references the container image, and may also
  // include labels and annotations that should be attached to the Revision.
  // To correlate a Revision, and/or to force a Revision to be created when the
  // spec doesn't otherwise change, a nonce label may be provided in the
  // template metadata. For more details, see:
  // https://github.com/knative/serving/blob/main/docs/client-conventions.md#associate-modifications-with-revisions
  //
  // Cloud Run does not currently support referencing a build that is
  // responsible for materializing the container image from source.
  repeated Template template = 8;

  // Traffic specifies how to distribute traffic over a collection of Knative Revisions
  // and Configurations
  repeated Traffic traffic = 9;

  map<string, string> for_each = 10 [json_name = "for_each"];

  repeated string depends_on = 11 [json_name = "depends_on"];

  int32 count = 12;

  string provider = 13;

  terraform.v1.Lifecycle lifecycle = 14;

  message Metadata {
    // annotations: map of string
    map<string, string> annotations = 1;

    // generation: number
    int64 generation = 2;

    // labels: map of string
    map<string, string> labels = 3;

    // namespace: string
    string namespace = 4;

    // resource_version: string
    string resource_version = 5 [json_name = "resource_version"];

    // self_link: string
    string self_link = 6 [json_name = "self_link"];

    // uid: string
    string uid = 7;
  }

  message Status {
    // conditions: list of object
    repeated Conditions conditions = 1;

    // latest_created_revision_name: string
    string latest_created_revision_name = 2 [json_name = "latest_created_revision_name"];

    // latest_ready_revision_name: string
    string latest_ready_revision_name = 3 [json_name = "latest_ready_revision_name"];

    // observed_generation: number
    int64 observed_generation = 4 [json_name = "observed_generation"];

    // url: string
    string url = 5;

    message Conditions {
      // message: string
      string message = 1;

      // reason: string
      string reason = 2;

      // status: string
      string status = 3;

      // type: string
      string type = 4;
    }
  }

  message Template {
    // metadata: list of object
    repeated Metadata metadata = 1;

    // spec: list of object
    repeated Spec spec = 2;

    message Metadata {
      // annotations: map of string
      map<string, string> annotations = 1;

      // generation: number
      int64 generation = 2;

      // labels: map of string
      map<string, string> labels = 3;

      // name: string
      string name = 4;

      // namespace: string
      string namespace = 5;

      // resource_version: string
      string resource_version = 6 [json_name = "resource_version"];

      // self_link: string
      string self_link = 7 [json_name = "self_link"];

      // uid: string
      string uid = 8;
    }

    message Spec {
      // container_concurrency: number
      int64 container_concurrency = 1 [json_name = "container_concurrency"];

      // containers: list of object
      repeated Containers containers = 2;

      // service_account_name: string
      string service_account_name = 3 [json_name = "service_account_name"];

      // serving_state: string
      string serving_state = 4 [json_name = "serving_state"];

      // timeout_seconds: number
      int64 timeout_seconds = 5 [json_name = "timeout_seconds"];

      // volumes: list of object
      repeated Volumes volumes = 6;

      message Containers {
        // args: list of string
        repeated string args = 1;

        // command: list of string
        repeated string command = 2;

        // env: set of object
        repeated Env env = 3;

        // env_from: list of object
        repeated EnvFrom env_from = 4 [json_name = "env_from"];

        // image: string
        string image = 5;

        // liveness_probe: list of object
        repeated LivenessProbe liveness_probe = 6 [json_name = "liveness_probe"];

        // name: string
        string name = 7;

        // ports: list of object
        repeated Ports ports = 8;

        // resources: list of object
        repeated Resources resources = 9;

        // startup_probe: list of object
        repeated StartupProbe startup_probe = 10 [json_name = "startup_probe"];

        // volume_mounts: list of object
        repeated VolumeMounts volume_mounts = 11 [json_name = "volume_mounts"];

        // working_dir: string
        string working_dir = 12 [json_name = "working_dir"];

        message Env {
          // name: string
          string name = 1;

          // value: string
          string value = 2;

          // value_from: list of object
          repeated ValueFrom value_from = 3 [json_name = "value_from"];

          message ValueFrom {
            // secret_key_ref: list of object
            repeated SecretKeyRef secret_key_ref = 1 [json_name = "secret_key_ref"];

            message SecretKeyRef {
              // key: string
              string key = 1;

              // name: string
              string name = 2;
            }
          }
        }

        message EnvFrom {
          // config_map_ref: list of object
          repeated ConfigMapRef config_map_ref = 1 [json_name = "config_map_ref"];

          // prefix: string
          string prefix = 2;

          // secret_ref: list of object
          repeated SecretRef secret_ref = 3 [json_name = "secret_ref"];

          message ConfigMapRef {
            // local_object_reference: list of object
            repeated LocalObjectReference local_object_reference = 1 [json_name = "local_object_reference"];

            // optional: bool
            bool optional = 2;

            message LocalObjectReference {
              // name: string
              string name = 1;
            }
          }

          message SecretRef {
            // local_object_reference: list of object
            repeated LocalObjectReference local_object_reference = 1 [json_name = "local_object_reference"];

            // optional: bool
            bool optional = 2;

            message LocalObjectReference {
              // name: string
              string name = 1;
            }
          }
        }

        message LivenessProbe {
          // failure_threshold: number
          int64 failure_threshold = 1 [json_name = "failure_threshold"];

          // grpc: list of object
          repeated Grpc grpc = 2;

          // http_get: list of object
          repeated HttpGet http_get = 3 [json_name = "http_get"];

          // initial_delay_seconds: number
          int64 initial_delay_seconds = 4 [json_name = "initial_delay_seconds"];

          // period_seconds: number
          int64 period_seconds = 5 [json_name = "period_seconds"];

          // timeout_seconds: number
          int64 timeout_seconds = 6 [json_name = "timeout_seconds"];

          message Grpc {
            // port: number
            int64 port = 1;

            // service: string
            string service = 2;
          }

          message HttpGet {
            // http_headers: list of object
            repeated HttpHeaders http_headers = 1 [json_name = "http_headers"];

            // path: string
            string path = 2;

            // port: number
            int64 port = 3;

            message HttpHeaders {
              // name: string
              string name = 1;

              // value: string
              string value = 2;
            }
          }
        }

        message Ports {
          // container_port: number
          int64 container_port = 1 [json_name = "container_port"];

          // name: string
          string name = 2;

          // protocol: string
          string protocol = 3;
        }

        message Resources {
          // limits: map of string
          map<string, string> limits = 1;

          // requests: map of string
          map<string, string> requests = 2;
        }

        message StartupProbe {
          // failure_threshold: number
          int64 failure_threshold = 1 [json_name = "failure_threshold"];

          // grpc: list of object
          repeated Grpc grpc = 2;

          // http_get: list of object
          repeated HttpGet http_get = 3 [json_name = "http_get"];

          // initial_delay_seconds: number
          int64 initial_delay_seconds = 4 [json_name = "initial_delay_seconds"];

          // period_seconds: number
          int64 period_seconds = 5 [json_name = "period_seconds"];

          // tcp_socket: list of object
          repeated TcpSocket tcp_socket = 6 [json_name = "tcp_socket"];

          // timeout_seconds: number
          int64 timeout_seconds = 7 [json_name = "timeout_seconds"];

          message Grpc {
            // port: number
            int64 port = 1;

            // service: string
            string service = 2;
          }

          message HttpGet {
            // http_headers: list of object
            repeated HttpHeaders http_headers = 1 [json_name = "http_headers"];

            // path: string
            string path = 2;

            // port: number
            int64 port = 3;

            message HttpHeaders {
              // name: string
              string name = 1;

              // value: string
              string value = 2;
            }
          }

          message TcpSocket {
            // port: number
            int64 port = 1;
          }
        }

        message VolumeMounts {
          // mount_path: string
          string mount_path = 1 [json_name = "mount_path"];

          // name: string
          string name = 2;
        }
      }

      message Volumes {
        // name: string
        string name = 1;

        // secret: list of object
        repeated Secret secret = 2;

        message Secret {
          // default_mode: number
          int64 default_mode = 1 [json_name = "default_mode"];

          // items: list of object
          repeated Items items = 2;

          // secret_name: string
          string secret_name = 3 [json_name = "secret_name"];

          message Items {
            // key: string
            string key = 1;

            // mode: number
            int64 mode = 2;

            // path: string
            string path = 3;
          }
        }
      }
    }
  }

  message Traffic {
    // latest_revision: bool
    bool latest_revision = 1 [json_name = "latest_revision"];

    // percent: number
    int64 percent = 2;

    // revision_name: string
    string revision_name = 3 [json_name = "revision_name"];

    // tag: string
    string tag = 4;

    // url: string
    string url = 5;
  }
}

// GoogleCloudRunServiceIamPolicy version is 0
message GoogleCloudRunServiceIamPolicy {
  string etag = 1;

  string id = 2;

  string location = 3;

  string policy_data = 4 [json_name = "policy_data"];

  string project = 5;

  string service = 6;

  map<string, string> for_each = 7 [json_name = "for_each"];

  repeated string depends_on = 8 [json_name = "depends_on"];

  int32 count = 9;

  string provider = 10;

  terraform.v1.Lifecycle lifecycle = 11;
}

// GoogleCloudRunV2JobIamPolicy version is 0
message GoogleCloudRunV2JobIamPolicy {
  string etag = 1;

  string id = 2;

  string location = 3;

  string name = 4;

  string policy_data = 5 [json_name = "policy_data"];

  string project = 6;

  map<string, string> for_each = 7 [json_name = "for_each"];

  repeated string depends_on = 8 [json_name = "depends_on"];

  int32 count = 9;

  string provider = 10;

  terraform.v1.Lifecycle lifecycle = 11;
}

// GoogleCloudRunV2ServiceIamPolicy version is 0
message GoogleCloudRunV2ServiceIamPolicy {
  string etag = 1;

  string id = 2;

  string location = 3;

  string name = 4;

  string policy_data = 5 [json_name = "policy_data"];

  string project = 6;

  map<string, string> for_each = 7 [json_name = "for_each"];

  repeated string depends_on = 8 [json_name = "depends_on"];

  int32 count = 9;

  string provider = 10;

  terraform.v1.Lifecycle lifecycle = 11;
}

// GoogleCloudTasksQueueIamPolicy version is 0
message GoogleCloudTasksQueueIamPolicy {
  string etag = 1;

  string id = 2;

  string location = 3;

  string name = 4;

  string policy_data = 5 [json_name = "policy_data"];

  string project = 6;

  map<string, string> for_each = 7 [json_name = "for_each"];

  repeated string depends_on = 8 [json_name = "depends_on"];

  int32 count = 9;

  string provider = 10;

  terraform.v1.Lifecycle lifecycle = 11;
}
