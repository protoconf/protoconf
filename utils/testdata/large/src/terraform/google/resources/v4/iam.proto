syntax = "proto3";

// Provider: google 4.69.1
package terraform.google.resources.v4;

import "terraform/v1/meta.proto";

// GoogleIamAccessBoundaryPolicy version is 0
message GoogleIamAccessBoundaryPolicy {
  // The display name of the rule.
  string display_name = 1 [json_name = "display_name"];

  // The hash of the resource. Used internally during updates.
  string etag = 2;

  string id = 3;

  // The name of the policy.
  string name = 4;

  // The attachment point is identified by its URL-encoded full resource name.
  string parent = 5;

  repeated Rules rules = 6;

  repeated Timeouts timeouts = 7;

  map<string, string> for_each = 8 [json_name = "for_each"];

  repeated string depends_on = 9 [json_name = "depends_on"];

  int32 count = 10;

  string provider = 11;

  terraform.v1.Lifecycle lifecycle = 12;

  message Rules {
    // The description of the rule.
    string description = 1;

    AccessBoundaryRule access_boundary_rule = 2 [json_name = "access_boundary_rule"];

    message AccessBoundaryRule {
      // A list of permissions that may be allowed for use on the specified resource.
      repeated string available_permissions = 1 [json_name = "available_permissions"];

      // The full resource name of a Google Cloud resource entity.
      string available_resource = 2 [json_name = "available_resource"];

      AvailabilityCondition availability_condition = 3 [json_name = "availability_condition"];

      message AvailabilityCondition {
        // Description of the expression. This is a longer text which describes the expression,
        // e.g. when hovered over it in a UI.
        string description = 1;

        // Textual representation of an expression in Common Expression Language syntax.
        string expression = 2;

        // String indicating the location of the expression for error reporting,
        // e.g. a file name and a position in the file.
        string location = 3;

        // Title for the expression, i.e. a short string describing its purpose.
        // This can be used e.g. in UIs which allow to enter the expression.
        string title = 4;
      }
    }
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

// GoogleIamWorkforcePool version is 0
message GoogleIamWorkforcePool {
  // A user-specified description of the pool. Cannot exceed 256 characters.
  string description = 1;

  // Whether the pool is disabled. You cannot use a disabled pool to exchange tokens,
  // or use existing tokens to access resources. If the pool is re-enabled, existing tokens grant access again.
  bool disabled = 2;

  // A user-specified display name of the pool in Google Cloud Console. Cannot exceed 32 characters.
  string display_name = 3 [json_name = "display_name"];

  string id = 4;

  // The location for the resource.
  string location = 5;

  // Output only. The resource name of the pool.
  // Format: 'locations/{location}/workforcePools/{workforcePoolId}'
  string name = 6;

  // Immutable. The resource name of the parent. Format: 'organizations/{org-id}'.
  string parent = 7;

  // Duration that the Google Cloud access tokens, console sign-in sessions,
  // and 'gcloud' sign-in sessions from this pool are valid.
  // Must be greater than 15 minutes (900s) and less than 12 hours (43200s).
  // If 'sessionDuration' is not configured, minted credentials have a default duration of one hour (3600s).
  // A duration in seconds with up to nine fractional digits, ending with ''s''. Example: "'3.5s'".
  string session_duration = 8 [json_name = "session_duration"];

  // Output only. The state of the pool.
  // * STATE_UNSPECIFIED: State unspecified.
  // * ACTIVE: The pool is active, and may be used in Google Cloud policies.
  // * DELETED: The pool is soft-deleted. Soft-deleted pools are permanently deleted
  //   after approximately 30 days. You can restore a soft-deleted pool using
  //   [workforcePools.undelete](https://cloud.google.com/iam/docs/reference/rest/v1/locations.workforcePools/undelete#google.iam.admin.v1.WorkforcePools.UndeleteWorkforcePool).
  //   You cannot reuse the ID of a soft-deleted pool until it is permanently deleted.
  //   While a pool is deleted, you cannot use it to exchange tokens, or use
  //   existing tokens to access resources. If the pool is undeleted, existing
  //   tokens grant access again.
  string state = 9;

  // The name of the pool. The ID must be a globally unique string of 6 to 63 lowercase letters,
  // digits, or hyphens. It must start with a letter, and cannot have a trailing hyphen.
  // The prefix 'gcp-' is reserved for use by Google, and may not be specified.
  string workforce_pool_id = 10 [json_name = "workforce_pool_id"];

  repeated Timeouts timeouts = 11;

  map<string, string> for_each = 12 [json_name = "for_each"];

  repeated string depends_on = 13 [json_name = "depends_on"];

  int32 count = 14;

  string provider = 15;

  terraform.v1.Lifecycle lifecycle = 16;

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

// GoogleIamWorkforcePoolProvider version is 0
message GoogleIamWorkforcePoolProvider {
  // A [Common Expression Language](https://opensource.google/projects/cel) expression, in
  // plain text, to restrict what otherwise valid authentication credentials issued by the
  // provider should not be accepted.
  //
  // The expression must output a boolean representing whether to allow the federation.
  //
  // The following keywords may be referenced in the expressions:
  //  * 'assertion': JSON representing the authentication credential issued by the provider.
  //  * 'google': The Google attributes mapped from the assertion in the 'attribute_mappings'.
  //    'google.profile_photo' and 'google.display_name' are not supported.
  //  * 'attribute': The custom attributes mapped from the assertion in the 'attribute_mappings'.
  //
  // The maximum length of the attribute condition expression is 4096 characters.
  // If unspecified, all valid authentication credentials will be accepted.
  //
  // The following example shows how to only allow credentials with a mapped 'google.groups' value of 'admins':
  // '''
  // "'admins' in google.groups"
  // '''
  string attribute_condition = 1 [json_name = "attribute_condition"];

  // Maps attributes from the authentication credentials issued by an external identity provider
  // to Google Cloud attributes, such as 'subject' and 'segment'.
  //
  // Each key must be a string specifying the Google Cloud IAM attribute to map to.
  //
  // The following keys are supported:
  //  * 'google.subject': The principal IAM is authenticating. You can reference this value in IAM bindings.
  //    This is also the subject that appears in Cloud Logging logs. This is a required field and
  //    the mapped subject cannot exceed 127 bytes.
  //  * 'google.groups': Groups the authenticating user belongs to. You can grant groups access to
  //    resources using an IAM 'principalSet' binding; access applies to all members of the group.
  //  * 'google.display_name': The name of the authenticated user. This is an optional field and
  //    the mapped display name cannot exceed 100 bytes. If not set, 'google.subject' will be displayed instead.
  //    This attribute cannot be referenced in IAM bindings.
  //  * 'google.profile_photo': The URL that specifies the authenticated user's thumbnail photo.
  //    This is an optional field. When set, the image will be visible as the user's profile picture.
  //    If not set, a generic user icon will be displayed instead.
  //    This attribute cannot be referenced in IAM bindings.
  //
  // You can also provide custom attributes by specifying 'attribute.{custom_attribute}', where {custom_attribute}
  // is the name of the custom attribute to be mapped. You can define a maximum of 50 custom attributes.
  // The maximum length of a mapped attribute key is 100 characters, and the key may only contain the characters [a-z0-9_].
  //
  // You can reference these attributes in IAM policies to define fine-grained access for a workforce pool
  // to Google Cloud resources. For example:
  //  * 'google.subject':
  //    'principal://iam.googleapis.com/locations/{location}/workforcePools/{pool}/subject/{value}'
  //  * 'google.groups':
  //    'principalSet://iam.googleapis.com/locations/{location}/workforcePools/{pool}/group/{value}'
  //  * 'attribute.{custom_attribute}':
  //    'principalSet://iam.googleapis.com/locations/{location}/workforcePools/{pool}/attribute.{custom_attribute}/{value}'
  //
  // Each value must be a [Common Expression Language](https://opensource.google/projects/cel)
  // function that maps an identity provider credential to the normalized attribute specified
  // by the corresponding map key.
  //
  // You can use the 'assertion' keyword in the expression to access a JSON representation of
  // the authentication credential issued by the provider.
  //
  // The maximum length of an attribute mapping expression is 2048 characters. When evaluated,
  // the total size of all mapped attributes must not exceed 8KB.
  //
  // For OIDC providers, you must supply a custom mapping that includes the 'google.subject' attribute.
  // For example, the following maps the sub claim of the incoming credential to the 'subject' attribute
  // on a Google token:
  // '''
  // {"google.subject": "assertion.sub"}
  // '''
  //
  // An object containing a list of '"key": value' pairs.
  // Example: '{ "name": "wrench", "mass": "1.3kg", "count": "3" }'.
  map<string, string> attribute_mapping = 2 [json_name = "attribute_mapping"];

  // A user-specified description of the provider. Cannot exceed 256 characters.
  string description = 3;

  // Whether the provider is disabled. You cannot use a disabled provider to exchange tokens.
  // However, existing tokens still grant access.
  bool disabled = 4;

  // A user-specified display name for the provider. Cannot exceed 32 characters.
  string display_name = 5 [json_name = "display_name"];

  string id = 6;

  // The location for the resource.
  string location = 7;

  // Output only. The resource name of the provider.
  // Format: 'locations/{location}/workforcePools/{workforcePoolId}/providers/{providerId}'
  string name = 8;

  // The ID for the provider, which becomes the final component of the resource name.
  // This value must be 4-32 characters, and may contain the characters [a-z0-9-].
  // The prefix 'gcp-' is reserved for use by Google, and may not be specified.
  string provider_id = 9 [json_name = "provider_id"];

  // The current state of the provider.
  // * STATE_UNSPECIFIED: State unspecified.
  // * ACTIVE: The provider is active and may be used to validate authentication credentials.
  // * DELETED: The provider is soft-deleted. Soft-deleted providers are permanently
  //  deleted after approximately 30 days. You can restore a soft-deleted provider using
  //  [providers.undelete](https://cloud.google.com/iam/docs/reference/rest/v1/locations.workforcePools.providers/undelete#google.iam.admin.v1.WorkforcePools.UndeleteWorkforcePoolProvider).
  string state = 10;

  // The ID to use for the pool, which becomes the final component of the resource name.
  // The IDs must be a globally unique string of 6 to 63 lowercase letters, digits, or hyphens.
  // It must start with a letter, and cannot have a trailing hyphen.
  // The prefix 'gcp-' is reserved for use by Google, and may not be specified.
  string workforce_pool_id = 11 [json_name = "workforce_pool_id"];

  Oidc oidc = 12;

  Saml saml = 13;

  repeated Timeouts timeouts = 14;

  map<string, string> for_each = 15 [json_name = "for_each"];

  repeated string depends_on = 16 [json_name = "depends_on"];

  int32 count = 17;

  string provider = 18;

  terraform.v1.Lifecycle lifecycle = 19;

  message Oidc {
    // The client ID. Must match the audience claim of the JWT issued by the identity provider.
    string client_id = 1 [json_name = "client_id"];

    // The OIDC issuer URI. Must be a valid URI using the 'https' scheme.
    string issuer_uri = 2 [json_name = "issuer_uri"];

    WebSsoConfig web_sso_config = 3 [json_name = "web_sso_config"];

    message WebSsoConfig {
      // The behavior for how OIDC Claims are included in the 'assertion' object used for attribute mapping and attribute condition.
      // * ONLY_ID_TOKEN_CLAIMS: Only include ID Token Claims. Possible values: ["ONLY_ID_TOKEN_CLAIMS"]
      string assertion_claims_behavior = 1 [json_name = "assertion_claims_behavior"];

      // The Response Type to request for in the OIDC Authorization Request for web sign-in.
      // * ID_TOKEN: The 'response_type=id_token' selection uses the Implicit Flow for web sign-in. Possible values: ["ID_TOKEN"]
      string response_type = 2 [json_name = "response_type"];
    }
  }

  message Saml {
    // SAML Identity provider configuration metadata xml doc.
    // The xml document should comply with [SAML 2.0 specification](https://docs.oasis-open.org/security/saml/v2.0/saml-metadata-2.0-os.pdf).
    // The max size of the acceptable xml document will be bounded to 128k characters.
    //
    // The metadata xml document should satisfy the following constraints:
    // 1) Must contain an Identity Provider Entity ID.
    // 2) Must contain at least one non-expired signing key certificate.
    // 3) For each signing key:
    //  a) Valid from should be no more than 7 days from now.
    //  b) Valid to should be no more than 10 years in the future.
    // 4) Up to 3 IdP signing keys are allowed in the metadata xml.
    //
    // When updating the provider's metadata xml, at least one non-expired signing key
    // must overlap with the existing metadata. This requirement is skipped if there are
    // no non-expired signing keys present in the existing metadata.
    string idp_metadata_xml = 1 [json_name = "idp_metadata_xml"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

// GoogleIamWorkloadIdentityPool version is 0
message GoogleIamWorkloadIdentityPool {
  // A description of the pool. Cannot exceed 256 characters.
  string description = 1;

  // Whether the pool is disabled. You cannot use a disabled pool to exchange tokens, or use
  // existing tokens to access resources. If the pool is re-enabled, existing tokens grant
  // access again.
  bool disabled = 2;

  // A display name for the pool. Cannot exceed 32 characters.
  string display_name = 3 [json_name = "display_name"];

  string id = 4;

  // The resource name of the pool as
  // 'projects/{project_number}/locations/global/workloadIdentityPools/{workload_identity_pool_id}'.
  string name = 5;

  string project = 6;

  // The state of the pool.
  // * STATE_UNSPECIFIED: State unspecified.
  // * ACTIVE: The pool is active, and may be used in Google Cloud policies.
  // * DELETED: The pool is soft-deleted. Soft-deleted pools are permanently deleted after
  //  approximately 30 days. You can restore a soft-deleted pool using
  //  UndeleteWorkloadIdentityPool. You cannot reuse the ID of a soft-deleted pool until it is
  //  permanently deleted. While a pool is deleted, you cannot use it to exchange tokens, or
  //  use existing tokens to access resources. If the pool is undeleted, existing tokens grant
  //  access again.
  string state = 7;

  // The ID to use for the pool, which becomes the final component of the resource name. This
  // value should be 4-32 characters, and may contain the characters [a-z0-9-]. The prefix
  // 'gcp-' is reserved for use by Google, and may not be specified.
  string workload_identity_pool_id = 8 [json_name = "workload_identity_pool_id"];

  repeated Timeouts timeouts = 9;

  map<string, string> for_each = 10 [json_name = "for_each"];

  repeated string depends_on = 11 [json_name = "depends_on"];

  int32 count = 12;

  string provider = 13;

  terraform.v1.Lifecycle lifecycle = 14;

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

// GoogleIamWorkloadIdentityPoolProvider version is 0
message GoogleIamWorkloadIdentityPoolProvider {
  // [A Common Expression Language](https://opensource.google/projects/cel) expression, in
  // plain text, to restrict what otherwise valid authentication credentials issued by the
  // provider should not be accepted.
  //
  // The expression must output a boolean representing whether to allow the federation.
  //
  // The following keywords may be referenced in the expressions:
  //  * 'assertion': JSON representing the authentication credential issued by the provider.
  //  * 'google': The Google attributes mapped from the assertion in the 'attribute_mappings'.
  //  * 'attribute': The custom attributes mapped from the assertion in the 'attribute_mappings'.
  //
  // The maximum length of the attribute condition expression is 4096 characters. If
  // unspecified, all valid authentication credential are accepted.
  //
  // The following example shows how to only allow credentials with a mapped 'google.groups'
  // value of 'admins':
  // '''
  // "'admins' in google.groups"
  // '''
  string attribute_condition = 1 [json_name = "attribute_condition"];

  // Maps attributes from authentication credentials issued by an external identity provider
  // to Google Cloud attributes, such as 'subject' and 'segment'.
  //
  // Each key must be a string specifying the Google Cloud IAM attribute to map to.
  //
  // The following keys are supported:
  //  * 'google.subject': The principal IAM is authenticating. You can reference this value
  //    in IAM bindings. This is also the subject that appears in Cloud Logging logs.
  //    Cannot exceed 127 characters.
  //  * 'google.groups': Groups the external identity belongs to. You can grant groups
  //    access to resources using an IAM 'principalSet' binding; access applies to all
  //    members of the group.
  //
  // You can also provide custom attributes by specifying 'attribute.{custom_attribute}',
  // where '{custom_attribute}' is the name of the custom attribute to be mapped. You can
  // define a maximum of 50 custom attributes. The maximum length of a mapped attribute key
  // is 100 characters, and the key may only contain the characters [a-z0-9_].
  //
  // You can reference these attributes in IAM policies to define fine-grained access for a
  // workload to Google Cloud resources. For example:
  //  * 'google.subject':
  //    'principal://iam.googleapis.com/projects/{project}/locations/{location}/workloadIdentityPools/{pool}/subject/{value}'
  //  * 'google.groups':
  //    'principalSet://iam.googleapis.com/projects/{project}/locations/{location}/workloadIdentityPools/{pool}/group/{value}'
  //  * 'attribute.{custom_attribute}':
  //    'principalSet://iam.googleapis.com/projects/{project}/locations/{location}/workloadIdentityPools/{pool}/attribute.{custom_attribute}/{value}'
  //
  // Each value must be a [Common Expression Language](https://opensource.google/projects/cel)
  // function that maps an identity provider credential to the normalized attribute specified
  // by the corresponding map key.
  //
  // You can use the 'assertion' keyword in the expression to access a JSON representation of
  // the authentication credential issued by the provider.
  //
  // The maximum length of an attribute mapping expression is 2048 characters. When evaluated,
  // the total size of all mapped attributes must not exceed 8KB.
  //
  // For AWS providers, the following rules apply:
  //  - If no attribute mapping is defined, the following default mapping applies:
  //    '''
  //    {
  //      "google.subject":"assertion.arn",
  //      "attribute.aws_role":
  //        "assertion.arn.contains('assumed-role')"
  //        " ? assertion.arn.extract('{account_arn}assumed-role/')"
  //        "   + 'assumed-role/'"
  //        "   + assertion.arn.extract('assumed-role/{role_name}/')"
  //        " : assertion.arn",
  //    }
  //    '''
  //  - If any custom attribute mappings are defined, they must include a mapping to the
  //    'google.subject' attribute.
  //
  // For OIDC providers, the following rules apply:
  //  - Custom attribute mappings must be defined, and must include a mapping to the
  //    'google.subject' attribute. For example, the following maps the 'sub' claim of the
  //    incoming credential to the 'subject' attribute on a Google token.
  //    '''
  //    {"google.subject": "assertion.sub"}
  //    '''
  map<string, string> attribute_mapping = 2 [json_name = "attribute_mapping"];

  // A description for the provider. Cannot exceed 256 characters.
  string description = 3;

  // Whether the provider is disabled. You cannot use a disabled provider to exchange tokens.
  // However, existing tokens still grant access.
  bool disabled = 4;

  // A display name for the provider. Cannot exceed 32 characters.
  string display_name = 5 [json_name = "display_name"];

  string id = 6;

  // The resource name of the provider as
  // 'projects/{project_number}/locations/global/workloadIdentityPools/{workload_identity_pool_id}/providers/{workload_identity_pool_provider_id}'.
  string name = 7;

  string project = 8;

  // The state of the provider.
  // * STATE_UNSPECIFIED: State unspecified.
  // * ACTIVE: The provider is active, and may be used to validate authentication credentials.
  // * DELETED: The provider is soft-deleted. Soft-deleted providers are permanently deleted
  //  after approximately 30 days. You can restore a soft-deleted provider using
  //  UndeleteWorkloadIdentityPoolProvider. You cannot reuse the ID of a soft-deleted provider
  //  until it is permanently deleted.
  string state = 9;

  // The ID used for the pool, which is the final component of the pool resource name. This
  // value should be 4-32 characters, and may contain the characters [a-z0-9-]. The prefix
  // 'gcp-' is reserved for use by Google, and may not be specified.
  string workload_identity_pool_id = 10 [json_name = "workload_identity_pool_id"];

  // The ID for the provider, which becomes the final component of the resource name. This
  // value must be 4-32 characters, and may contain the characters [a-z0-9-]. The prefix
  // 'gcp-' is reserved for use by Google, and may not be specified.
  string workload_identity_pool_provider_id = 11 [json_name = "workload_identity_pool_provider_id"];

  Aws aws = 12;

  Oidc oidc = 13;

  repeated Timeouts timeouts = 14;

  map<string, string> for_each = 15 [json_name = "for_each"];

  repeated string depends_on = 16 [json_name = "depends_on"];

  int32 count = 17;

  string provider = 18;

  terraform.v1.Lifecycle lifecycle = 19;

  message Aws {
    // The AWS account ID.
    string account_id = 1 [json_name = "account_id"];
  }

  message Oidc {
    // Acceptable values for the 'aud' field (audience) in the OIDC token. Token exchange
    // requests are rejected if the token audience does not match one of the configured
    // values. Each audience may be at most 256 characters. A maximum of 10 audiences may
    // be configured.
    //
    // If this list is empty, the OIDC token audience must be equal to the full canonical
    // resource name of the WorkloadIdentityPoolProvider, with or without the HTTPS prefix.
    // For example:
    // '''
    // //iam.googleapis.com/projects/<project-number>/locations/<location>/workloadIdentityPools/<pool-id>/providers/<provider-id>
    // https://iam.googleapis.com/projects/<project-number>/locations/<location>/workloadIdentityPools/<pool-id>/providers/<provider-id>
    // '''
    repeated string allowed_audiences = 1 [json_name = "allowed_audiences"];

    // The OIDC issuer URL.
    string issuer_uri = 2 [json_name = "issuer_uri"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}
