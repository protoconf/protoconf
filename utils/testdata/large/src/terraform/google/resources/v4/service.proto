syntax = "proto3";

// Provider: google 4.69.1
package terraform.google.resources.v4;

import "terraform/v1/meta.proto";

// GoogleServiceAccount version is 0
message GoogleServiceAccount {
  // The account id that is used to generate the service account email address and a stable unique id. It is unique within a project, must be 6-30 characters long, and match the regular expression [a-z]([-a-z0-9]*[a-z0-9]) to comply with RFC1035. Changing this forces a new service account to be created.
  string account_id = 1 [json_name = "account_id"];

  // A text description of the service account. Must be less than or equal to 256 UTF-8 bytes.
  string description = 2;

  // Whether the service account is disabled. Defaults to false
  bool disabled = 3;

  // The display name for the service account. Can be updated without creating a new resource.
  string display_name = 4 [json_name = "display_name"];

  // The e-mail address of the service account. This value should be referenced from any google_iam_policy data sources that would grant the service account privileges.
  string email = 5;

  string id = 6;

  // The Identity of the service account in the form 'serviceAccount:{email}'. This value is often used to refer to the service account in order to grant IAM permissions.
  string member = 7;

  // The fully-qualified name of the service account.
  string name = 8;

  // The ID of the project that the service account will be created in. Defaults to the provider project configuration.
  string project = 9;

  // The unique id of the service account.
  string unique_id = 10 [json_name = "unique_id"];

  repeated Timeouts timeouts = 11;

  map<string, string> for_each = 12 [json_name = "for_each"];

  repeated string depends_on = 13 [json_name = "depends_on"];

  int32 count = 14;

  string provider = 15;

  terraform.v1.Lifecycle lifecycle = 16;

  message Timeouts {
    string create = 1;
  }
}

// GoogleServiceAccountIamBinding version is 0
message GoogleServiceAccountIamBinding {
  string etag = 1;

  string id = 2;

  repeated string members = 3;

  string role = 4;

  string service_account_id = 5 [json_name = "service_account_id"];

  Condition condition = 6;

  map<string, string> for_each = 7 [json_name = "for_each"];

  repeated string depends_on = 8 [json_name = "depends_on"];

  int32 count = 9;

  string provider = 10;

  terraform.v1.Lifecycle lifecycle = 11;

  message Condition {
    string description = 1;

    string expression = 2;

    string title = 3;
  }
}

// GoogleServiceAccountIamMember version is 0
message GoogleServiceAccountIamMember {
  string etag = 1;

  string id = 2;

  string member = 3;

  string role = 4;

  string service_account_id = 5 [json_name = "service_account_id"];

  Condition condition = 6;

  map<string, string> for_each = 7 [json_name = "for_each"];

  repeated string depends_on = 8 [json_name = "depends_on"];

  int32 count = 9;

  string provider = 10;

  terraform.v1.Lifecycle lifecycle = 11;

  message Condition {
    string description = 1;

    string expression = 2;

    string title = 3;
  }
}

// GoogleServiceAccountIamPolicy version is 0
message GoogleServiceAccountIamPolicy {
  string etag = 1;

  string id = 2;

  string policy_data = 3 [json_name = "policy_data"];

  string service_account_id = 4 [json_name = "service_account_id"];

  map<string, string> for_each = 5 [json_name = "for_each"];

  repeated string depends_on = 6 [json_name = "depends_on"];

  int32 count = 7;

  string provider = 8;

  terraform.v1.Lifecycle lifecycle = 9;
}

// GoogleServiceAccountKey version is 0
message GoogleServiceAccountKey {
  string id = 1;

  // Arbitrary map of values that, when changed, will trigger recreation of resource.
  map<string, string> keepers = 2;

  // The algorithm used to generate the key, used only on create. KEY_ALG_RSA_2048 is the default algorithm. Valid values are: "KEY_ALG_RSA_1024", "KEY_ALG_RSA_2048".
  string key_algorithm = 3 [json_name = "key_algorithm"];

  // The name used for this key pair
  string name = 4;

  // The private key in JSON format, base64 encoded. This is what you normally get as a file when creating service account keys through the CLI or web console. This is only populated when creating a new key.
  string private_key = 5 [json_name = "private_key"];

  string private_key_type = 6 [json_name = "private_key_type"];

  // The public key, base64 encoded
  string public_key = 7 [json_name = "public_key"];

  // A field that allows clients to upload their own public key. If set, use this public key data to create a service account key for given service account. Please note, the expected format for this field is a base64 encoded X509_PEM.
  string public_key_data = 8 [json_name = "public_key_data"];

  string public_key_type = 9 [json_name = "public_key_type"];

  // The ID of the parent service account of the key. This can be a string in the format {ACCOUNT} or projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}, where {ACCOUNT} is the email address or unique id of the service account. If the {ACCOUNT} syntax is used, the project will be inferred from the provider's configuration.
  string service_account_id = 10 [json_name = "service_account_id"];

  // The key can be used after this timestamp. A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
  string valid_after = 11 [json_name = "valid_after"];

  // The key can be used before this timestamp. A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
  string valid_before = 12 [json_name = "valid_before"];

  map<string, string> for_each = 13 [json_name = "for_each"];

  repeated string depends_on = 14 [json_name = "depends_on"];

  int32 count = 15;

  string provider = 16;

  terraform.v1.Lifecycle lifecycle = 17;
}

// GoogleServiceNetworkingConnection version is 0
message GoogleServiceNetworkingConnection {
  string id = 1;

  // Name of VPC network connected with service producers using VPC peering.
  string network = 2;

  string peering = 3;

  // Named IP address range(s) of PEERING type reserved for this service provider. Note that invoking this method with a different range when connection is already established will not reallocate already provisioned service producer subnetworks.
  repeated string reserved_peering_ranges = 4 [json_name = "reserved_peering_ranges"];

  // Provider peering service that is managing peering connectivity for a service provider organization. For Google services that support this functionality it is 'servicenetworking.googleapis.com'.
  string service = 5;

  repeated Timeouts timeouts = 6;

  map<string, string> for_each = 7 [json_name = "for_each"];

  repeated string depends_on = 8 [json_name = "depends_on"];

  int32 count = 9;

  string provider = 10;

  terraform.v1.Lifecycle lifecycle = 11;

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

// GoogleServiceNetworkingPeeredDnsDomain version is 0
message GoogleServiceNetworkingPeeredDnsDomain {
  // The DNS domain name suffix of the peered DNS domain.
  string dns_suffix = 1 [json_name = "dns_suffix"];

  string id = 2;

  // Name of the peered DNS domain.
  string name = 3;

  // Network in the consumer project to peer with.
  string network = 4;

  string parent = 5;

  // The ID of the project that the service account will be created in. Defaults to the provider project configuration.
  string project = 6;

  // The name of the service to create a peered DNS domain for, e.g. servicenetworking.googleapis.com
  string service = 7;

  repeated Timeouts timeouts = 8;

  map<string, string> for_each = 9 [json_name = "for_each"];

  repeated string depends_on = 10 [json_name = "depends_on"];

  int32 count = 11;

  string provider = 12;

  terraform.v1.Lifecycle lifecycle = 13;

  message Timeouts {
    string create = 1;

    string delete = 2;

    string read = 3;
  }
}
