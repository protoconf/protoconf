syntax = "proto3";

// Provider: google 4.69.1
package terraform.google.resources.v4;

import "terraform/v1/meta.proto";

// GoogleCloudiotDevice version is 0
message GoogleCloudiotDevice {
  // If a device is blocked, connections or requests from this device will fail.
  bool blocked = 1;

  // The most recent device configuration, which is eventually sent from Cloud IoT Core to the device.
  repeated Config config = 2;

  string id = 3;

  // The last time a cloud-to-device config version acknowledgment was received from the device.
  string last_config_ack_time = 4 [json_name = "last_config_ack_time"];

  // The last time a cloud-to-device config version was sent to the device.
  string last_config_send_time = 5 [json_name = "last_config_send_time"];

  // The error message of the most recent error, such as a failure to publish to Cloud Pub/Sub.
  repeated LastErrorStatus last_error_status = 6 [json_name = "last_error_status"];

  // The time the most recent error occurred, such as a failure to publish to Cloud Pub/Sub.
  string last_error_time = 7 [json_name = "last_error_time"];

  // The last time a telemetry event was received.
  string last_event_time = 8 [json_name = "last_event_time"];

  // The last time an MQTT PINGREQ was received.
  string last_heartbeat_time = 9 [json_name = "last_heartbeat_time"];

  // The last time a state event was received.
  string last_state_time = 10 [json_name = "last_state_time"];

  // The logging verbosity for device activity. Possible values: ["NONE", "ERROR", "INFO", "DEBUG"]
  string log_level = 11 [json_name = "log_level"];

  // The metadata key-value pairs assigned to the device.
  map<string, string> metadata = 12;

  // A unique name for the resource.
  string name = 13;

  // A server-defined unique numeric ID for the device.
  // This is a more compact way to identify devices, and it is globally unique.
  string num_id = 14 [json_name = "num_id"];

  // The name of the device registry where this device should be created.
  string registry = 15;

  // The state most recently received from the device.
  repeated State state = 16;

  repeated Credentials credentials = 17;

  GatewayConfig gateway_config = 18 [json_name = "gateway_config"];

  repeated Timeouts timeouts = 19;

  map<string, string> for_each = 20 [json_name = "for_each"];

  repeated string depends_on = 21 [json_name = "depends_on"];

  int32 count = 22;

  string provider = 23;

  terraform.v1.Lifecycle lifecycle = 24;

  message Config {
    // binary_data: string
    string binary_data = 1 [json_name = "binary_data"];

    // cloud_update_time: string
    string cloud_update_time = 2 [json_name = "cloud_update_time"];

    // device_ack_time: string
    string device_ack_time = 3 [json_name = "device_ack_time"];

    // version: string
    string version = 4;
  }

  message LastErrorStatus {
    // details: list of map of string
    map<string, string> details = 1;

    // message: string
    string message = 2;

    // number: number
    int64 number = 3;
  }

  message State {
    // binary_data: string
    string binary_data = 1 [json_name = "binary_data"];

    // update_time: string
    string update_time = 2 [json_name = "update_time"];
  }

  message Credentials {
    // The time at which this credential becomes invalid.
    string expiration_time = 1 [json_name = "expiration_time"];

    PublicKey public_key = 2 [json_name = "public_key"];

    message PublicKey {
      // The format of the key. Possible values: ["RSA_PEM", "RSA_X509_PEM", "ES256_PEM", "ES256_X509_PEM"]
      string format = 1;

      // The key data.
      string key = 2;
    }
  }

  message GatewayConfig {
    // Indicates whether the device is a gateway. Possible values: ["ASSOCIATION_ONLY", "DEVICE_AUTH_TOKEN_ONLY", "ASSOCIATION_AND_DEVICE_AUTH_TOKEN"]
    string gateway_auth_method = 1 [json_name = "gateway_auth_method"];

    // Indicates whether the device is a gateway. Default value: "NON_GATEWAY" Possible values: ["GATEWAY", "NON_GATEWAY"]
    string gateway_type = 2 [json_name = "gateway_type"];

    // The ID of the gateway the device accessed most recently.
    string last_accessed_gateway_id = 3 [json_name = "last_accessed_gateway_id"];

    // The most recent time at which the device accessed the gateway specified in last_accessed_gateway.
    string last_accessed_gateway_time = 4 [json_name = "last_accessed_gateway_time"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

// GoogleCloudiotRegistry version is 0
message GoogleCloudiotRegistry {
  // Activate or deactivate HTTP.
  map<string, string> http_config = 1 [json_name = "http_config"];

  string id = 2;

  // The default logging verbosity for activity from devices in this
  // registry. Specifies which events should be written to logs. For
  // example, if the LogLevel is ERROR, only events that terminate in
  // errors will be logged. LogLevel is inclusive; enabling INFO logging
  // will also enable ERROR logging. Default value: "NONE" Possible values: ["NONE", "ERROR", "INFO", "DEBUG"]
  string log_level = 3 [json_name = "log_level"];

  // Activate or deactivate MQTT.
  map<string, string> mqtt_config = 4 [json_name = "mqtt_config"];

  // A unique name for the resource, required by device registry.
  string name = 5;

  string project = 6;

  // The region in which the created registry should reside.
  // If it is not provided, the provider region is used.
  string region = 7;

  // A PubSub topic to publish device state updates.
  map<string, string> state_notification_config = 8 [json_name = "state_notification_config"];

  repeated Credentials credentials = 9;

  repeated EventNotificationConfigs event_notification_configs = 10 [json_name = "event_notification_configs"];

  repeated Timeouts timeouts = 11;

  map<string, string> for_each = 12 [json_name = "for_each"];

  repeated string depends_on = 13 [json_name = "depends_on"];

  int32 count = 14;

  string provider = 15;

  terraform.v1.Lifecycle lifecycle = 16;

  message Credentials {
    // A public key certificate format and data.
    map<string, string> public_key_certificate = 1 [json_name = "public_key_certificate"];
  }

  message EventNotificationConfigs {
    // PubSub topic name to publish device events.
    string pubsub_topic_name = 1 [json_name = "pubsub_topic_name"];

    // If the subfolder name matches this string exactly, this
    // configuration will be used. The string must not include the
    // leading '/' character. If empty, all strings are matched. Empty
    // value can only be used for the last 'event_notification_configs'
    // item.
    string subfolder_matches = 2 [json_name = "subfolder_matches"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

// GoogleCloudiotRegistryIamBinding version is 0
message GoogleCloudiotRegistryIamBinding {
  string etag = 1;

  string id = 2;

  repeated string members = 3;

  string name = 4;

  string project = 5;

  string region = 6;

  string role = 7;

  Condition condition = 8;

  map<string, string> for_each = 9 [json_name = "for_each"];

  repeated string depends_on = 10 [json_name = "depends_on"];

  int32 count = 11;

  string provider = 12;

  terraform.v1.Lifecycle lifecycle = 13;

  message Condition {
    string description = 1;

    string expression = 2;

    string title = 3;
  }
}

// GoogleCloudiotRegistryIamMember version is 0
message GoogleCloudiotRegistryIamMember {
  string etag = 1;

  string id = 2;

  string member = 3;

  string name = 4;

  string project = 5;

  string region = 6;

  string role = 7;

  Condition condition = 8;

  map<string, string> for_each = 9 [json_name = "for_each"];

  repeated string depends_on = 10 [json_name = "depends_on"];

  int32 count = 11;

  string provider = 12;

  terraform.v1.Lifecycle lifecycle = 13;

  message Condition {
    string description = 1;

    string expression = 2;

    string title = 3;
  }
}

// GoogleCloudiotRegistryIamPolicy version is 0
message GoogleCloudiotRegistryIamPolicy {
  string etag = 1;

  string id = 2;

  string name = 3;

  string policy_data = 4 [json_name = "policy_data"];

  string project = 5;

  string region = 6;

  map<string, string> for_each = 7 [json_name = "for_each"];

  repeated string depends_on = 8 [json_name = "depends_on"];

  int32 count = 9;

  string provider = 10;

  terraform.v1.Lifecycle lifecycle = 11;
}
