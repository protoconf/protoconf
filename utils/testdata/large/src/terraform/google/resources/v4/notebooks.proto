syntax = "proto3";

// Provider: google 4.69.1
package terraform.google.resources.v4;

import "terraform/v1/meta.proto";

// GoogleNotebooksEnvironment version is 0
message GoogleNotebooksEnvironment {
  // Instance creation time
  string create_time = 1 [json_name = "create_time"];

  // A brief description of this environment.
  string description = 2;

  // Display name of this environment for the UI.
  string display_name = 3 [json_name = "display_name"];

  string id = 4;

  // A reference to the zone where the machine resides.
  string location = 5;

  // The name specified for the Environment instance.
  // Format: projects/{project_id}/locations/{location}/environments/{environmentId}
  string name = 6;

  // Path to a Bash script that automatically runs after a notebook instance fully boots up.
  // The path must be a URL or Cloud Storage path. Example: "gs://path-to-file/file-name"
  string post_startup_script = 7 [json_name = "post_startup_script"];

  string project = 8;

  ContainerImage container_image = 9 [json_name = "container_image"];

  repeated Timeouts timeouts = 10;

  VmImage vm_image = 11 [json_name = "vm_image"];

  map<string, string> for_each = 12 [json_name = "for_each"];

  repeated string depends_on = 13 [json_name = "depends_on"];

  int32 count = 14;

  string provider = 15;

  terraform.v1.Lifecycle lifecycle = 16;

  message ContainerImage {
    // The path to the container image repository.
    // For example: gcr.io/{project_id}/{imageName}
    string repository = 1;

    // The tag of the container image. If not specified, this defaults to the latest tag.
    string tag = 2;
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }

  message VmImage {
    // Use this VM image family to find the image; the newest image in this family will be used.
    string image_family = 1 [json_name = "image_family"];

    // Use VM image name to find the image.
    string image_name = 2 [json_name = "image_name"];

    // The name of the Google Cloud project that this VM image belongs to.
    // Format: projects/{project_id}
    string project = 3;
  }
}

// GoogleNotebooksInstance version is 0
message GoogleNotebooksInstance {
  // The size of the boot disk in GB attached to this instance,
  // up to a maximum of 64000 GB (64 TB). The minimum recommended value is 100 GB.
  // If not specified, this defaults to 100.
  int64 boot_disk_size_gb = 1 [json_name = "boot_disk_size_gb"];

  // Possible disk types for notebook instances. Possible values: ["DISK_TYPE_UNSPECIFIED", "PD_STANDARD", "PD_SSD", "PD_BALANCED", "PD_EXTREME"]
  string boot_disk_type = 2 [json_name = "boot_disk_type"];

  // Instance creation time
  string create_time = 3 [json_name = "create_time"];

  // Specify a custom Cloud Storage path where the GPU driver is stored.
  // If not specified, we'll automatically choose from official GPU drivers.
  string custom_gpu_driver_path = 4 [json_name = "custom_gpu_driver_path"];

  // The size of the data disk in GB attached to this instance,
  // up to a maximum of 64000 GB (64 TB).
  // You can choose the size of the data disk based on how big your notebooks and data are.
  // If not specified, this defaults to 100.
  int64 data_disk_size_gb = 5 [json_name = "data_disk_size_gb"];

  // Possible disk types for notebook instances. Possible values: ["DISK_TYPE_UNSPECIFIED", "PD_STANDARD", "PD_SSD", "PD_BALANCED", "PD_EXTREME"]
  string data_disk_type = 6 [json_name = "data_disk_type"];

  // Disk encryption method used on the boot and data disks, defaults to GMEK. Possible values: ["DISK_ENCRYPTION_UNSPECIFIED", "GMEK", "CMEK"]
  string disk_encryption = 7 [json_name = "disk_encryption"];

  string id = 8;

  // Whether the end user authorizes Google Cloud to install GPU driver
  // on this instance. If this field is empty or set to false, the GPU driver
  // won't be installed. Only applicable to instances with GPUs.
  bool install_gpu_driver = 9 [json_name = "install_gpu_driver"];

  // The list of owners of this instance after creation.
  // Format: alias@example.com.
  // Currently supports one owner only.
  // If not specified, all of the service account users of
  // your VM instance's service account can use the instance.
  repeated string instance_owners = 10 [json_name = "instance_owners"];

  // The KMS key used to encrypt the disks, only applicable if diskEncryption is CMEK.
  // Format: projects/{project_id}/locations/{location}/keyRings/{key_ring_id}/cryptoKeys/{key_id}
  string kms_key = 11 [json_name = "kms_key"];

  // Labels to apply to this instance. These can be later modified by the setLabels method.
  // An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
  map<string, string> labels = 12;

  // A reference to the zone where the machine resides.
  string location = 13;

  // A reference to a machine type which defines VM kind.
  string machine_type = 14 [json_name = "machine_type"];

  // Custom metadata to apply to this instance.
  // An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
  map<string, string> metadata = 15;

  // The name specified for the Notebook instance.
  string name = 16;

  // The name of the VPC that this instance is in.
  // Format: projects/{project_id}/global/networks/{network_id}
  string network = 17;

  // The type of vNIC driver. Possible values: ["UNSPECIFIED_NIC_TYPE", "VIRTIO_NET", "GVNIC"]
  string nic_type = 18 [json_name = "nic_type"];

  // The notebook instance will not register with the proxy..
  bool no_proxy_access = 19 [json_name = "no_proxy_access"];

  // No public IP will be assigned to this instance.
  bool no_public_ip = 20 [json_name = "no_public_ip"];

  // If true, the data disk will not be auto deleted when deleting the instance.
  bool no_remove_data_disk = 21 [json_name = "no_remove_data_disk"];

  // Path to a Bash script that automatically runs after a
  // notebook instance fully boots up. The path must be a URL
  // or Cloud Storage path (gs://path-to-file/file-name).
  string post_startup_script = 22 [json_name = "post_startup_script"];

  string project = 23;

  // The proxy endpoint that is used to access the Jupyter notebook.
  // Only returned when the resource is in a 'PROVISIONED' state. If
  // needed you can utilize 'terraform apply -refresh-only' to await
  // the population of this value.
  string proxy_uri = 24 [json_name = "proxy_uri"];

  // The service account on this instance, giving access to other
  // Google Cloud services. You can use any service account within
  // the same project, but you must have the service account user
  // permission to use the instance. If not specified,
  // the Compute Engine default service account is used.
  string service_account = 25 [json_name = "service_account"];

  // Optional. The URIs of service account scopes to be included in Compute Engine instances.
  // If not specified, the following scopes are defined:
  // - https://www.googleapis.com/auth/cloud-platform
  // - https://www.googleapis.com/auth/userinfo.email
  repeated string service_account_scopes = 26 [json_name = "service_account_scopes"];

  // The state of this instance.
  string state = 27;

  // The name of the subnet that this instance is in.
  // Format: projects/{project_id}/regions/{region}/subnetworks/{subnetwork_id}
  string subnet = 28;

  // The Compute Engine tags to add to instance.
  repeated string tags = 29;

  // Instance update time.
  string update_time = 30 [json_name = "update_time"];

  AcceleratorConfig accelerator_config = 31 [json_name = "accelerator_config"];

  ContainerImage container_image = 32 [json_name = "container_image"];

  ReservationAffinity reservation_affinity = 33 [json_name = "reservation_affinity"];

  ShieldedInstanceConfig shielded_instance_config = 34 [json_name = "shielded_instance_config"];

  repeated Timeouts timeouts = 35;

  VmImage vm_image = 36 [json_name = "vm_image"];

  map<string, string> for_each = 37 [json_name = "for_each"];

  repeated string depends_on = 38 [json_name = "depends_on"];

  int32 count = 39;

  string provider = 40;

  terraform.v1.Lifecycle lifecycle = 41;

  message AcceleratorConfig {
    // Count of cores of this accelerator.
    int64 core_count = 1 [json_name = "core_count"];

    // Type of this accelerator. Possible values: ["ACCELERATOR_TYPE_UNSPECIFIED", "NVIDIA_TESLA_K80", "NVIDIA_TESLA_P100", "NVIDIA_TESLA_V100", "NVIDIA_TESLA_P4", "NVIDIA_TESLA_T4", "NVIDIA_TESLA_T4_VWS", "NVIDIA_TESLA_P100_VWS", "NVIDIA_TESLA_P4_VWS", "NVIDIA_TESLA_A100", "TPU_V2", "TPU_V3"]
    string type = 2;
  }

  message ContainerImage {
    // The path to the container image repository.
    // For example: gcr.io/{project_id}/{imageName}
    string repository = 1;

    // The tag of the container image. If not specified, this defaults to the latest tag.
    string tag = 2;
  }

  message ReservationAffinity {
    // The type of Compute Reservation. Possible values: ["NO_RESERVATION", "ANY_RESERVATION", "SPECIFIC_RESERVATION"]
    string consume_reservation_type = 1 [json_name = "consume_reservation_type"];

    // Corresponds to the label key of reservation resource.
    string key = 2;

    // Corresponds to the label values of reservation resource.
    repeated string values = 3;
  }

  message ShieldedInstanceConfig {
    // Defines whether the instance has integrity monitoring enabled. Enables monitoring and attestation of the
    // boot integrity of the instance. The attestation is performed against the integrity policy baseline.
    // This baseline is initially derived from the implicitly trusted boot image when the instance is created.
    // Enabled by default.
    bool enable_integrity_monitoring = 1 [json_name = "enable_integrity_monitoring"];

    // Defines whether the instance has Secure Boot enabled. Secure Boot helps ensure that the system only runs
    // authentic software by verifying the digital signature of all boot components, and halting the boot process
    // if signature verification fails.
    // Disabled by default.
    bool enable_secure_boot = 2 [json_name = "enable_secure_boot"];

    // Defines whether the instance has the vTPM enabled.
    // Enabled by default.
    bool enable_vtpm = 3 [json_name = "enable_vtpm"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }

  message VmImage {
    // Use this VM image family to find the image; the newest image in this family will be used.
    string image_family = 1 [json_name = "image_family"];

    // Use VM image name to find the image.
    string image_name = 2 [json_name = "image_name"];

    // The name of the Google Cloud project that this VM image belongs to.
    // Format: projects/{project_id}
    string project = 3;
  }
}

// GoogleNotebooksInstanceIamBinding version is 0
message GoogleNotebooksInstanceIamBinding {
  string etag = 1;

  string id = 2;

  string instance_name = 3 [json_name = "instance_name"];

  string location = 4;

  repeated string members = 5;

  string project = 6;

  string role = 7;

  Condition condition = 8;

  map<string, string> for_each = 9 [json_name = "for_each"];

  repeated string depends_on = 10 [json_name = "depends_on"];

  int32 count = 11;

  string provider = 12;

  terraform.v1.Lifecycle lifecycle = 13;

  message Condition {
    string description = 1;

    string expression = 2;

    string title = 3;
  }
}

// GoogleNotebooksInstanceIamMember version is 0
message GoogleNotebooksInstanceIamMember {
  string etag = 1;

  string id = 2;

  string instance_name = 3 [json_name = "instance_name"];

  string location = 4;

  string member = 5;

  string project = 6;

  string role = 7;

  Condition condition = 8;

  map<string, string> for_each = 9 [json_name = "for_each"];

  repeated string depends_on = 10 [json_name = "depends_on"];

  int32 count = 11;

  string provider = 12;

  terraform.v1.Lifecycle lifecycle = 13;

  message Condition {
    string description = 1;

    string expression = 2;

    string title = 3;
  }
}

// GoogleNotebooksInstanceIamPolicy version is 0
message GoogleNotebooksInstanceIamPolicy {
  string etag = 1;

  string id = 2;

  string instance_name = 3 [json_name = "instance_name"];

  string location = 4;

  string policy_data = 5 [json_name = "policy_data"];

  string project = 6;

  map<string, string> for_each = 7 [json_name = "for_each"];

  repeated string depends_on = 8 [json_name = "depends_on"];

  int32 count = 9;

  string provider = 10;

  terraform.v1.Lifecycle lifecycle = 11;
}

// GoogleNotebooksLocation version is 0
message GoogleNotebooksLocation {
  string id = 1;

  // Name of the Location resource.
  string name = 2;

  string project = 3;

  string self_link = 4 [json_name = "self_link"];

  repeated Timeouts timeouts = 5;

  map<string, string> for_each = 6 [json_name = "for_each"];

  repeated string depends_on = 7 [json_name = "depends_on"];

  int32 count = 8;

  string provider = 9;

  terraform.v1.Lifecycle lifecycle = 10;

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

// GoogleNotebooksRuntime version is 0
message GoogleNotebooksRuntime {
  // The health state of this runtime. For a list of possible output
  // values, see 'https://cloud.google.com/vertex-ai/docs/workbench/
  // reference/rest/v1/projects.locations.runtimes#healthstate'.
  string health_state = 1 [json_name = "health_state"];

  string id = 2;

  // A reference to the zone where the machine resides.
  string location = 3;

  // Contains Runtime daemon metrics such as Service status and JupyterLab
  // status
  repeated Metrics metrics = 4;

  // The name specified for the Notebook runtime.
  string name = 5;

  string project = 6;

  // The state of this runtime.
  string state = 7;

  AccessConfig access_config = 8 [json_name = "access_config"];

  SoftwareConfig software_config = 9 [json_name = "software_config"];

  repeated Timeouts timeouts = 10;

  VirtualMachine virtual_machine = 11 [json_name = "virtual_machine"];

  map<string, string> for_each = 12 [json_name = "for_each"];

  repeated string depends_on = 13 [json_name = "depends_on"];

  int32 count = 14;

  string provider = 15;

  terraform.v1.Lifecycle lifecycle = 16;

  message Metrics {
    // system_metrics: map of string
    map<string, string> system_metrics = 1 [json_name = "system_metrics"];
  }

  message AccessConfig {
    // The type of access mode this instance. For valid values, see
    // 'https://cloud.google.com/vertex-ai/docs/workbench/reference/
    // rest/v1/projects.locations.runtimes#RuntimeAccessType'.
    string access_type = 1 [json_name = "access_type"];

    // The proxy endpoint that is used to access the runtime.
    string proxy_uri = 2 [json_name = "proxy_uri"];

    // The owner of this runtime after creation. Format: 'alias@example.com'.
    // Currently supports one owner only.
    string runtime_owner = 3 [json_name = "runtime_owner"];
  }

  message SoftwareConfig {
    // Specify a custom Cloud Storage path where the GPU driver is stored.
    // If not specified, we'll automatically choose from official GPU drivers.
    string custom_gpu_driver_path = 1 [json_name = "custom_gpu_driver_path"];

    // Verifies core internal services are running. Default: True.
    bool enable_health_monitoring = 2 [json_name = "enable_health_monitoring"];

    // Runtime will automatically shutdown after idle_shutdown_time.
    // Default: True
    bool idle_shutdown = 3 [json_name = "idle_shutdown"];

    // Time in minutes to wait before shuting down runtime.
    // Default: 180 minutes
    int64 idle_shutdown_timeout = 4 [json_name = "idle_shutdown_timeout"];

    // Install Nvidia Driver automatically.
    bool install_gpu_driver = 5 [json_name = "install_gpu_driver"];

    // Cron expression in UTC timezone for schedule instance auto upgrade.
    // Please follow the [cron format](https://en.wikipedia.org/wiki/Cron).
    string notebook_upgrade_schedule = 6 [json_name = "notebook_upgrade_schedule"];

    // Path to a Bash script that automatically runs after a notebook instance
    // fully boots up. The path must be a URL or
    // Cloud Storage path (gs://path-to-file/file-name).
    string post_startup_script = 7 [json_name = "post_startup_script"];

    // Behavior for the post startup script. Possible values: ["POST_STARTUP_SCRIPT_BEHAVIOR_UNSPECIFIED", "RUN_EVERY_START", "DOWNLOAD_AND_RUN_EVERY_START"]
    string post_startup_script_behavior = 8 [json_name = "post_startup_script_behavior"];

    // Bool indicating whether an newer image is available in an image family.
    bool upgradeable = 9;

    repeated Kernels kernels = 10;

    message Kernels {
      // The path to the container image repository.
      // For example: gcr.io/{project_id}/{imageName}
      string repository = 1;

      // The tag of the container image. If not specified, this defaults to the latest tag.
      string tag = 2;
    }
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }

  message VirtualMachine {
    // The unique identifier of the Managed Compute Engine instance.
    string instance_id = 1 [json_name = "instance_id"];

    // The user-friendly name of the Managed Compute Engine instance.
    string instance_name = 2 [json_name = "instance_name"];

    VirtualMachineConfig virtual_machine_config = 3 [json_name = "virtual_machine_config"];

    message VirtualMachineConfig {
      // The Compute Engine guest attributes. (see [Project and instance
      // guest attributes](https://cloud.google.com/compute/docs/
      // storing-retrieving-metadata#guest_attributes)).
      map<string, string> guest_attributes = 1 [json_name = "guest_attributes"];

      // If true, runtime will only have internal IP addresses. By default,
      // runtimes are not restricted to internal IP addresses, and will
      // have ephemeral external IP addresses assigned to each vm. This
      // 'internal_ip_only' restriction can only be enabled for subnetwork
      // enabled networks, and all dependencies must be configured to be
      // accessible without external IP addresses.
      bool internal_ip_only = 2 [json_name = "internal_ip_only"];

      // The labels to associate with this runtime. Label **keys** must
      // contain 1 to 63 characters, and must conform to [RFC 1035]
      // (https://www.ietf.org/rfc/rfc1035.txt). Label **values** may be
      // empty, but, if present, must contain 1 to 63 characters, and must
      // conform to [RFC 1035](https://www.ietf.org/rfc/rfc1035.txt). No
      // more than 32 labels can be associated with a cluster.
      map<string, string> labels = 3;

      // The Compute Engine machine type used for runtimes.
      string machine_type = 4 [json_name = "machine_type"];

      // The Compute Engine metadata entries to add to virtual machine.
      // (see [Project and instance metadata](https://cloud.google.com
      // /compute/docs/storing-retrieving-metadata#project_and_instance
      // _metadata)).
      map<string, string> metadata = 5;

      // The Compute Engine network to be used for machine communications.
      // Cannot be specified with subnetwork. If neither 'network' nor
      // 'subnet' is specified, the "default" network of the project is
      // used, if it exists. A full URL or partial URI. Examples:
      //  * 'https://www.googleapis.com/compute/v1/projects/[project_id]/
      //  regions/global/default'
      //  * 'projects/[project_id]/regions/global/default'
      // Runtimes are managed resources inside Google Infrastructure.
      // Runtimes support the following network configurations:
      //  * Google Managed Network (Network & subnet are empty)
      //  * Consumer Project VPC (network & subnet are required). Requires
      //  configuring Private Service Access.
      //  * Shared VPC (network & subnet are required). Requires
      //  configuring Private Service Access.
      string network = 6;

      // The type of vNIC to be used on this interface. This may be gVNIC
      // or VirtioNet. Possible values: ["UNSPECIFIED_NIC_TYPE", "VIRTIO_NET", "GVNIC"]
      string nic_type = 7 [json_name = "nic_type"];

      // Reserved IP Range name is used for VPC Peering. The
      // subnetwork allocation will use the range *name* if it's assigned.
      string reserved_ip_range = 8 [json_name = "reserved_ip_range"];

      // The Compute Engine subnetwork to be used for machine
      // communications. Cannot be specified with network. A full URL or
      // partial URI are valid. Examples:
      //  * 'https://www.googleapis.com/compute/v1/projects/[project_id]/
      //  regions/us-east1/subnetworks/sub0'
      //  * 'projects/[project_id]/regions/us-east1/subnetworks/sub0'
      string subnet = 9;

      // The Compute Engine tags to add to runtime (see [Tagging instances]
      // (https://cloud.google.com/compute/docs/
      // label-or-tag-resources#tags)).
      repeated string tags = 10;

      // The zone where the virtual machine is located.
      string zone = 11;

      AcceleratorConfig accelerator_config = 12 [json_name = "accelerator_config"];

      repeated ContainerImages container_images = 13 [json_name = "container_images"];

      DataDisk data_disk = 14 [json_name = "data_disk"];

      EncryptionConfig encryption_config = 15 [json_name = "encryption_config"];

      ShieldedInstanceConfig shielded_instance_config = 16 [json_name = "shielded_instance_config"];

      message AcceleratorConfig {
        // Count of cores of this accelerator.
        int64 core_count = 1 [json_name = "core_count"];

        // Accelerator model. For valid values, see
        // 'https://cloud.google.com/vertex-ai/docs/workbench/reference/
        // rest/v1/projects.locations.runtimes#AcceleratorType'
        string type = 2;
      }

      message ContainerImages {
        // The path to the container image repository.
        // For example: gcr.io/{project_id}/{imageName}
        string repository = 1;

        // The tag of the container image. If not specified, this defaults to the latest tag.
        string tag = 2;
      }

      message DataDisk {
        // Optional. Specifies whether the disk will be auto-deleted
        // when the instance is deleted (but not when the disk is
        // detached from the instance).
        bool auto_delete = 1 [json_name = "auto_delete"];

        // Optional. Indicates that this is a boot disk. The virtual
        // machine will use the first partition of the disk for its
        // root filesystem.
        bool boot = 2;

        // Optional. Specifies a unique device name of your choice
        // that is reflected into the /dev/disk/by-id/google-* tree
        // of a Linux operating system running within the instance.
        // This name can be used to reference the device for mounting,
        // resizing, and so on, from within the instance.
        // If not specified, the server chooses a default device name
        // to apply to this disk, in the form persistent-disk-x, where
        // x is a number assigned by Google Compute Engine. This field
        // is only applicable for persistent disks.
        string device_name = 3 [json_name = "device_name"];

        // Indicates a list of features to enable on the guest operating
        // system. Applicable only for bootable images. To see a list of
        // available features, read 'https://cloud.google.com/compute/docs/
        // images/create-delete-deprecate-private-images#guest-os-features'
        // options. ''
        repeated string guest_os_features = 4 [json_name = "guest_os_features"];

        // Output only. A zero-based index to this disk, where 0 is
        // reserved for the boot disk. If you have many disks attached
        // to an instance, each disk would have a unique index number.
        int64 index = 5;

        // "Specifies the disk interface to use for attaching this disk,
        // which is either SCSI or NVME. The default is SCSI. Persistent
        // disks must always use SCSI and the request will fail if you attempt
        // to attach a persistent disk in any other format than SCSI. Local SSDs
        // can use either NVME or SCSI. For performance characteristics of SCSI
        // over NVMe, see Local SSD performance. Valid values: * NVME * SCSI".
        string interface = 6;

        // Type of the resource. Always compute#attachedDisk for attached
        // disks.
        string kind = 7;

        // Output only. Any valid publicly visible licenses.
        repeated string licenses = 8;

        // The mode in which to attach this disk, either READ_WRITE
        // or READ_ONLY. If not specified, the default is to attach
        // the disk in READ_WRITE mode.
        string mode = 9;

        // Specifies a valid partial or full URL to an existing
        // Persistent Disk resource.
        string source = 10;

        // Specifies the type of the disk, either SCRATCH or PERSISTENT.
        // If not specified, the default is PERSISTENT.
        string type = 11;

        InitializeParams initialize_params = 12 [json_name = "initialize_params"];

        message InitializeParams {
          // Provide this property when creating the disk.
          string description = 1;

          // Specifies the disk name. If not specified, the default is
          // to use the name of the instance. If the disk with the
          // instance name exists already in the given zone/region, a
          // new name will be automatically generated.
          string disk_name = 2 [json_name = "disk_name"];

          // Specifies the size of the disk in base-2 GB. If not
          // specified, the disk will be the same size as the image
          // (usually 10GB). If specified, the size must be equal to
          // or larger than 10GB. Default 100 GB.
          int64 disk_size_gb = 3 [json_name = "disk_size_gb"];

          // The type of the boot disk attached to this runtime,
          // defaults to standard persistent disk. For valid values,
          // see 'https://cloud.google.com/vertex-ai/docs/workbench/
          // reference/rest/v1/projects.locations.runtimes#disktype'
          string disk_type = 4 [json_name = "disk_type"];

          // Labels to apply to this disk. These can be later modified
          // by the disks.setLabels method. This field is only
          // applicable for persistent disks.
          map<string, string> labels = 5;
        }
      }

      message EncryptionConfig {
        // The Cloud KMS resource identifier of the customer-managed
        // encryption key used to protect a resource, such as a disks.
        // It has the following format:
        // 'projects/{PROJECT_ID}/locations/{REGION}/keyRings/
        // {KEY_RING_NAME}/cryptoKeys/{KEY_NAME}'
        string kms_key = 1 [json_name = "kms_key"];
      }

      message ShieldedInstanceConfig {
        // Defines whether the instance has integrity monitoring enabled.
        // Enables monitoring and attestation of the boot integrity of
        // the instance. The attestation is performed against the
        // integrity policy baseline. This baseline is initially derived
        // from the implicitly trusted boot image when the instance is
        // created. Enabled by default.
        bool enable_integrity_monitoring = 1 [json_name = "enable_integrity_monitoring"];

        // Defines whether the instance has Secure Boot enabled.Secure
        // Boot helps ensure that the system only runs authentic software
        // by verifying the digital signature of all boot components, and
        // halting the boot process if signature verification fails.
        // Disabled by default.
        bool enable_secure_boot = 2 [json_name = "enable_secure_boot"];

        // Defines whether the instance has the vTPM enabled. Enabled by
        // default.
        bool enable_vtpm = 3 [json_name = "enable_vtpm"];
      }
    }
  }
}

// GoogleNotebooksRuntimeIamBinding version is 0
message GoogleNotebooksRuntimeIamBinding {
  string etag = 1;

  string id = 2;

  string location = 3;

  repeated string members = 4;

  string project = 5;

  string role = 6;

  string runtime_name = 7 [json_name = "runtime_name"];

  Condition condition = 8;

  map<string, string> for_each = 9 [json_name = "for_each"];

  repeated string depends_on = 10 [json_name = "depends_on"];

  int32 count = 11;

  string provider = 12;

  terraform.v1.Lifecycle lifecycle = 13;

  message Condition {
    string description = 1;

    string expression = 2;

    string title = 3;
  }
}

// GoogleNotebooksRuntimeIamMember version is 0
message GoogleNotebooksRuntimeIamMember {
  string etag = 1;

  string id = 2;

  string location = 3;

  string member = 4;

  string project = 5;

  string role = 6;

  string runtime_name = 7 [json_name = "runtime_name"];

  Condition condition = 8;

  map<string, string> for_each = 9 [json_name = "for_each"];

  repeated string depends_on = 10 [json_name = "depends_on"];

  int32 count = 11;

  string provider = 12;

  terraform.v1.Lifecycle lifecycle = 13;

  message Condition {
    string description = 1;

    string expression = 2;

    string title = 3;
  }
}

// GoogleNotebooksRuntimeIamPolicy version is 0
message GoogleNotebooksRuntimeIamPolicy {
  string etag = 1;

  string id = 2;

  string location = 3;

  string policy_data = 4 [json_name = "policy_data"];

  string project = 5;

  string runtime_name = 6 [json_name = "runtime_name"];

  map<string, string> for_each = 7 [json_name = "for_each"];

  repeated string depends_on = 8 [json_name = "depends_on"];

  int32 count = 9;

  string provider = 10;

  terraform.v1.Lifecycle lifecycle = 11;
}
