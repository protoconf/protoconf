syntax = "proto3";

// Provider: google 4.69.1
package terraform.google.resources.v4;

import "terraform/v1/meta.proto";

// GoogleSecretManagerSecret version is 0
message GoogleSecretManagerSecret {
  // The time at which the Secret was created.
  string create_time = 1 [json_name = "create_time"];

  // Timestamp in UTC when the Secret is scheduled to expire. This is always provided on output, regardless of what was sent on input.
  // A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
  string expire_time = 2 [json_name = "expire_time"];

  string id = 3;

  // The labels assigned to this Secret.
  //
  // Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes,
  // and must conform to the following PCRE regular expression: [\p{Ll}\p{Lo}][\p{Ll}\p{Lo}\p{N}_-]{0,62}
  //
  // Label values must be between 0 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes,
  // and must conform to the following PCRE regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63}
  //
  // No more than 64 labels can be assigned to a given resource.
  //
  // An object containing a list of "key": value pairs. Example:
  // { "name": "wrench", "mass": "1.3kg", "count": "3" }.
  map<string, string> labels = 4;

  // The resource name of the Secret. Format:
  // 'projects/{{project}}/secrets/{{secret_id}}'
  string name = 5;

  string project = 6;

  // This must be unique within the project.
  string secret_id = 7 [json_name = "secret_id"];

  // The TTL for the Secret.
  // A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
  string ttl = 8;

  Replication replication = 9;

  Rotation rotation = 10;

  repeated Timeouts timeouts = 11;

  repeated Topics topics = 12;

  map<string, string> for_each = 13 [json_name = "for_each"];

  repeated string depends_on = 14 [json_name = "depends_on"];

  int32 count = 15;

  string provider = 16;

  terraform.v1.Lifecycle lifecycle = 17;

  message Replication {
    // The Secret will automatically be replicated without any restrictions.
    bool automatic = 1;

    UserManaged user_managed = 2 [json_name = "user_managed"];

    message UserManaged {
      repeated Replicas replicas = 1;

      message Replicas {
        // The canonical IDs of the location to replicate data. For example: "us-east1".
        string location = 1;

        CustomerManagedEncryption customer_managed_encryption = 2 [json_name = "customer_managed_encryption"];

        message CustomerManagedEncryption {
          // Describes the Cloud KMS encryption key that will be used to protect destination secret.
          string kms_key_name = 1 [json_name = "kms_key_name"];
        }
      }
    }
  }

  message Rotation {
    // Timestamp in UTC at which the Secret is scheduled to rotate.
    // A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
    string next_rotation_time = 1 [json_name = "next_rotation_time"];

    // The Duration between rotation notifications. Must be in seconds and at least 3600s (1h) and at most 3153600000s (100 years).
    // If rotationPeriod is set, 'next_rotation_time' must be set. 'next_rotation_time' will be advanced by this period when the service automatically sends rotation notifications.
    string rotation_period = 2 [json_name = "rotation_period"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }

  message Topics {
    // The resource name of the Pub/Sub topic that will be published to, in the following format: projects/*/topics/*.
    // For publication to succeed, the Secret Manager Service Agent service account must have pubsub.publisher permissions on the topic.
    string name = 1;
  }
}

// GoogleSecretManagerSecretIamBinding version is 0
message GoogleSecretManagerSecretIamBinding {
  string etag = 1;

  string id = 2;

  repeated string members = 3;

  string project = 4;

  string role = 5;

  string secret_id = 6 [json_name = "secret_id"];

  Condition condition = 7;

  map<string, string> for_each = 8 [json_name = "for_each"];

  repeated string depends_on = 9 [json_name = "depends_on"];

  int32 count = 10;

  string provider = 11;

  terraform.v1.Lifecycle lifecycle = 12;

  message Condition {
    string description = 1;

    string expression = 2;

    string title = 3;
  }
}

// GoogleSecretManagerSecretIamMember version is 0
message GoogleSecretManagerSecretIamMember {
  string etag = 1;

  string id = 2;

  string member = 3;

  string project = 4;

  string role = 5;

  string secret_id = 6 [json_name = "secret_id"];

  Condition condition = 7;

  map<string, string> for_each = 8 [json_name = "for_each"];

  repeated string depends_on = 9 [json_name = "depends_on"];

  int32 count = 10;

  string provider = 11;

  terraform.v1.Lifecycle lifecycle = 12;

  message Condition {
    string description = 1;

    string expression = 2;

    string title = 3;
  }
}

// GoogleSecretManagerSecretIamPolicy version is 0
message GoogleSecretManagerSecretIamPolicy {
  string etag = 1;

  string id = 2;

  string policy_data = 3 [json_name = "policy_data"];

  string project = 4;

  string secret_id = 5 [json_name = "secret_id"];

  map<string, string> for_each = 6 [json_name = "for_each"];

  repeated string depends_on = 7 [json_name = "depends_on"];

  int32 count = 8;

  string provider = 9;

  terraform.v1.Lifecycle lifecycle = 10;
}

// GoogleSecretManagerSecretVersion version is 0
message GoogleSecretManagerSecretVersion {
  // The time at which the Secret was created.
  string create_time = 1 [json_name = "create_time"];

  // The time at which the Secret was destroyed. Only present if state is DESTROYED.
  string destroy_time = 2 [json_name = "destroy_time"];

  // The current state of the SecretVersion.
  bool enabled = 3;

  string id = 4;

  // The resource name of the SecretVersion. Format:
  // 'projects/{{project}}/secrets/{{secret_id}}/versions/{{version}}'
  string name = 5;

  // Secret Manager secret resource
  string secret = 6;

  // The secret data. Must be no larger than 64KiB.
  string secret_data = 7 [json_name = "secret_data"];

  // The version of the Secret.
  string version = 8;

  repeated Timeouts timeouts = 9;

  map<string, string> for_each = 10 [json_name = "for_each"];

  repeated string depends_on = 11 [json_name = "depends_on"];

  int32 count = 12;

  string provider = 13;

  terraform.v1.Lifecycle lifecycle = 14;

  message Timeouts {
    string create = 1;

    string delete = 2;
  }
}
