syntax = "proto3";

// Provider: google 4.69.1
package terraform.google.resources.v4;

import "terraform/v1/meta.proto";

// GoogleAppEngineApplication version is 0
message GoogleAppEngineApplication {
  // Identifier of the app.
  string app_id = 1 [json_name = "app_id"];

  // The domain to authenticate users with when using App Engine's User API.
  string auth_domain = 2 [json_name = "auth_domain"];

  // The GCS bucket code is being stored in for this app.
  string code_bucket = 3 [json_name = "code_bucket"];

  string database_type = 4 [json_name = "database_type"];

  // The GCS bucket content is being stored in for this app.
  string default_bucket = 5 [json_name = "default_bucket"];

  // The default hostname for this app.
  string default_hostname = 6 [json_name = "default_hostname"];

  // The GCR domain used for storing managed Docker images for this app.
  string gcr_domain = 7 [json_name = "gcr_domain"];

  string id = 8;

  // The location to serve the app from.
  string location_id = 9 [json_name = "location_id"];

  // Unique name of the app.
  string name = 10;

  // The project ID to create the application under.
  string project = 11;

  // The serving status of the app.
  string serving_status = 12 [json_name = "serving_status"];

  // A list of dispatch rule blocks. Each block has a domain, path, and service field.
  repeated UrlDispatchRule url_dispatch_rule = 13 [json_name = "url_dispatch_rule"];

  FeatureSettings feature_settings = 14 [json_name = "feature_settings"];

  Iap iap = 15;

  repeated Timeouts timeouts = 16;

  map<string, string> for_each = 17 [json_name = "for_each"];

  repeated string depends_on = 18 [json_name = "depends_on"];

  int32 count = 19;

  string provider = 20;

  terraform.v1.Lifecycle lifecycle = 21;

  message UrlDispatchRule {
    // domain: string
    string domain = 1;

    // path: string
    string path = 2;

    // service: string
    string service = 3;
  }

  message FeatureSettings {
    bool split_health_checks = 1 [json_name = "split_health_checks"];
  }

  message Iap {
    // Adapted for use with the app
    bool enabled = 1;

    // OAuth2 client ID to use for the authentication flow.
    string oauth2_client_id = 2 [json_name = "oauth2_client_id"];

    // OAuth2 client secret to use for the authentication flow. The SHA-256 hash of the value is returned in the oauth2ClientSecretSha256 field.
    string oauth2_client_secret = 3 [json_name = "oauth2_client_secret"];

    // Hex-encoded SHA-256 hash of the client secret.
    string oauth2_client_secret_sha256 = 4 [json_name = "oauth2_client_secret_sha256"];
  }

  message Timeouts {
    string create = 1;

    string update = 2;
  }
}

// GoogleAppEngineApplicationUrlDispatchRules version is 0
message GoogleAppEngineApplicationUrlDispatchRules {
  string id = 1;

  string project = 2;

  repeated DispatchRules dispatch_rules = 3 [json_name = "dispatch_rules"];

  repeated Timeouts timeouts = 4;

  map<string, string> for_each = 5 [json_name = "for_each"];

  repeated string depends_on = 6 [json_name = "depends_on"];

  int32 count = 7;

  string provider = 8;

  terraform.v1.Lifecycle lifecycle = 9;

  message DispatchRules {
    // Domain name to match against. The wildcard "*" is supported if specified before a period: "*.".
    // Defaults to matching all domains: "*".
    string domain = 1;

    // Pathname within the host. Must start with a "/". A single "*" can be included at the end of the path.
    // The sum of the lengths of the domain and path may not exceed 100 characters.
    string path = 2;

    // Pathname within the host. Must start with a "/". A single "*" can be included at the end of the path.
    // The sum of the lengths of the domain and path may not exceed 100 characters.
    string service = 3;
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

// GoogleAppEngineDomainMapping version is 0
message GoogleAppEngineDomainMapping {
  // Relative name of the domain serving the application. Example: example.com.
  string domain_name = 1 [json_name = "domain_name"];

  string id = 2;

  // Full path to the DomainMapping resource in the API. Example: apps/myapp/domainMapping/example.com.
  string name = 3;

  // Whether the domain creation should override any existing mappings for this domain.
  // By default, overrides are rejected. Default value: "STRICT" Possible values: ["STRICT", "OVERRIDE"]
  string override_strategy = 4 [json_name = "override_strategy"];

  string project = 5;

  // The resource records required to configure this domain mapping. These records must be added to the domain's DNS
  // configuration in order to serve the application via this domain mapping.
  repeated ResourceRecords resource_records = 6 [json_name = "resource_records"];

  SslSettings ssl_settings = 7 [json_name = "ssl_settings"];

  repeated Timeouts timeouts = 8;

  map<string, string> for_each = 9 [json_name = "for_each"];

  repeated string depends_on = 10 [json_name = "depends_on"];

  int32 count = 11;

  string provider = 12;

  terraform.v1.Lifecycle lifecycle = 13;

  message ResourceRecords {
    // name: string
    string name = 1;

    // rrdata: string
    string rrdata = 2;

    // type: string
    string type = 3;
  }

  message SslSettings {
    // ID of the AuthorizedCertificate resource configuring SSL for the application. Clearing this field will
    // remove SSL support.
    // By default, a managed certificate is automatically created for every domain mapping. To omit SSL support
    // or to configure SSL manually, specify 'SslManagementType.MANUAL' on a 'CREATE' or 'UPDATE' request. You must be
    // authorized to administer the 'AuthorizedCertificate' resource to manually map it to a DomainMapping resource.
    // Example: 12345.
    string certificate_id = 1 [json_name = "certificate_id"];

    // ID of the managed 'AuthorizedCertificate' resource currently being provisioned, if applicable. Until the new
    // managed certificate has been successfully provisioned, the previous SSL state will be preserved. Once the
    // provisioning process completes, the 'certificateId' field will reflect the new managed certificate and this
    // field will be left empty. To remove SSL support while there is still a pending managed certificate, clear the
    // 'certificateId' field with an update request.
    string pending_managed_certificate_id = 2 [json_name = "pending_managed_certificate_id"];

    // SSL management type for this domain. If 'AUTOMATIC', a managed certificate is automatically provisioned.
    // If 'MANUAL', 'certificateId' must be manually specified in order to configure SSL for this domain. Possible values: ["AUTOMATIC", "MANUAL"]
    string ssl_management_type = 3 [json_name = "ssl_management_type"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

// GoogleAppEngineFirewallRule version is 0
message GoogleAppEngineFirewallRule {
  // The action to take if this rule matches. Possible values: ["UNSPECIFIED_ACTION", "ALLOW", "DENY"]
  string action = 1;

  // An optional string description of this rule.
  string description = 2;

  string id = 3;

  // A positive integer that defines the order of rule evaluation.
  // Rules with the lowest priority are evaluated first.
  //
  // A default rule at priority Int32.MaxValue matches all IPv4 and
  // IPv6 traffic when no previous rule matches. Only the action of
  // this rule can be modified by the user.
  int64 priority = 4;

  string project = 5;

  // IP address or range, defined using CIDR notation, of requests that this rule applies to.
  string source_range = 6 [json_name = "source_range"];

  repeated Timeouts timeouts = 7;

  map<string, string> for_each = 8 [json_name = "for_each"];

  repeated string depends_on = 9 [json_name = "depends_on"];

  int32 count = 10;

  string provider = 11;

  terraform.v1.Lifecycle lifecycle = 12;

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

// GoogleAppEngineFlexibleAppVersion version is 0
message GoogleAppEngineFlexibleAppVersion {
  // Metadata settings that are supplied to this version to enable beta runtime features.
  map<string, string> beta_settings = 1 [json_name = "beta_settings"];

  // Duration that static files should be cached by web proxies and browsers.
  // Only applicable if the corresponding StaticFilesHandler does not specify its own expiration time.
  string default_expiration = 2 [json_name = "default_expiration"];

  // If set to 'true', the service will be deleted if it is the last version.
  bool delete_service_on_destroy = 3 [json_name = "delete_service_on_destroy"];

  // Environment variables available to the application.  As these are not returned in the API request, Terraform will not detect any changes made outside of the Terraform config.
  map<string, string> env_variables = 4 [json_name = "env_variables"];

  string id = 5;

  // A list of the types of messages that this application is able to receive. Possible values: ["INBOUND_SERVICE_MAIL", "INBOUND_SERVICE_MAIL_BOUNCE", "INBOUND_SERVICE_XMPP_ERROR", "INBOUND_SERVICE_XMPP_MESSAGE", "INBOUND_SERVICE_XMPP_SUBSCRIBE", "INBOUND_SERVICE_XMPP_PRESENCE", "INBOUND_SERVICE_CHANNEL_PRESENCE", "INBOUND_SERVICE_WARMUP"]
  repeated string inbound_services = 6 [json_name = "inbound_services"];

  // Instance class that is used to run this version. Valid values are
  // AutomaticScaling: F1, F2, F4, F4_1G
  // ManualScaling: B1, B2, B4, B8, B4_1G
  // Defaults to F1 for AutomaticScaling and B1 for ManualScaling.
  string instance_class = 7 [json_name = "instance_class"];

  // Full path to the Version resource in the API. Example, "v1".
  string name = 8;

  // Files that match this pattern will not be built into this version. Only applicable for Go runtimes.
  string nobuild_files_regex = 9 [json_name = "nobuild_files_regex"];

  // If set to 'true', the application version will not be deleted.
  bool noop_on_destroy = 10 [json_name = "noop_on_destroy"];

  string project = 11;

  // Desired runtime. Example python27.
  string runtime = 12;

  // The version of the API in the given runtime environment.
  // Please see the app.yaml reference for valid values at 'https://cloud.google.com/appengine/docs/standard/<language>/config/appref'\
  // Substitute '<language>' with 'python', 'java', 'php', 'ruby', 'go' or 'nodejs'.
  string runtime_api_version = 13 [json_name = "runtime_api_version"];

  // The channel of the runtime to use. Only available for some runtimes.
  string runtime_channel = 14 [json_name = "runtime_channel"];

  // The path or name of the app's main executable.
  string runtime_main_executable_path = 15 [json_name = "runtime_main_executable_path"];

  // AppEngine service resource. Can contain numbers, letters, and hyphens.
  string service = 16;

  // The identity that the deployed version will run as. Admin API will use the App Engine Appspot service account as
  // default if this field is neither provided in app.yaml file nor through CLI flag.
  string service_account = 17 [json_name = "service_account"];

  // Current serving status of this version. Only the versions with a SERVING status create instances and can be billed. Default value: "SERVING" Possible values: ["SERVING", "STOPPED"]
  string serving_status = 18 [json_name = "serving_status"];

  // Relative name of the version within the service. For example, 'v1'. Version names can contain only lowercase letters, numbers, or hyphens.
  // Reserved names,"default", "latest", and any name with the prefix "ah-".
  string version_id = 19 [json_name = "version_id"];

  ApiConfig api_config = 20 [json_name = "api_config"];

  AutomaticScaling automatic_scaling = 21 [json_name = "automatic_scaling"];

  Deployment deployment = 22;

  EndpointsApiService endpoints_api_service = 23 [json_name = "endpoints_api_service"];

  Entrypoint entrypoint = 24;

  repeated Handlers handlers = 25;

  LivenessCheck liveness_check = 26 [json_name = "liveness_check"];

  ManualScaling manual_scaling = 27 [json_name = "manual_scaling"];

  Network network = 28;

  ReadinessCheck readiness_check = 29 [json_name = "readiness_check"];

  Resources resources = 30;

  repeated Timeouts timeouts = 31;

  VpcAccessConnector vpc_access_connector = 32 [json_name = "vpc_access_connector"];

  map<string, string> for_each = 33 [json_name = "for_each"];

  repeated string depends_on = 34 [json_name = "depends_on"];

  int32 count = 35;

  string provider = 36;

  terraform.v1.Lifecycle lifecycle = 37;

  message ApiConfig {
    // Action to take when users access resources that require authentication. Default value: "AUTH_FAIL_ACTION_REDIRECT" Possible values: ["AUTH_FAIL_ACTION_REDIRECT", "AUTH_FAIL_ACTION_UNAUTHORIZED"]
    string auth_fail_action = 1 [json_name = "auth_fail_action"];

    // Level of login required to access this resource. Default value: "LOGIN_OPTIONAL" Possible values: ["LOGIN_OPTIONAL", "LOGIN_ADMIN", "LOGIN_REQUIRED"]
    string login = 2;

    // Path to the script from the application root directory.
    string script = 3;

    // Security (HTTPS) enforcement for this URL. Possible values: ["SECURE_DEFAULT", "SECURE_NEVER", "SECURE_OPTIONAL", "SECURE_ALWAYS"]
    string security_level = 4 [json_name = "security_level"];

    // URL to serve the endpoint at.
    string url = 5;
  }

  message AutomaticScaling {
    // The time period that the Autoscaler should wait before it starts collecting information from a new instance.
    // This prevents the autoscaler from collecting information when the instance is initializing,
    // during which the collected usage would not be reliable. Default: 120s
    string cool_down_period = 1 [json_name = "cool_down_period"];

    // Number of concurrent requests an automatic scaling instance can accept before the scheduler spawns a new instance.
    //
    // Defaults to a runtime-specific value.
    int64 max_concurrent_requests = 2 [json_name = "max_concurrent_requests"];

    // Maximum number of idle instances that should be maintained for this version.
    int64 max_idle_instances = 3 [json_name = "max_idle_instances"];

    // Maximum amount of time that a request should wait in the pending queue before starting a new instance to handle it.
    string max_pending_latency = 4 [json_name = "max_pending_latency"];

    // Maximum number of instances that should be started to handle requests for this version. Default: 20
    int64 max_total_instances = 5 [json_name = "max_total_instances"];

    // Minimum number of idle instances that should be maintained for this version. Only applicable for the default version of a service.
    int64 min_idle_instances = 6 [json_name = "min_idle_instances"];

    // Minimum amount of time a request should wait in the pending queue before starting a new instance to handle it.
    string min_pending_latency = 7 [json_name = "min_pending_latency"];

    // Minimum number of running instances that should be maintained for this version. Default: 2
    int64 min_total_instances = 8 [json_name = "min_total_instances"];

    CpuUtilization cpu_utilization = 9 [json_name = "cpu_utilization"];

    DiskUtilization disk_utilization = 10 [json_name = "disk_utilization"];

    NetworkUtilization network_utilization = 11 [json_name = "network_utilization"];

    RequestUtilization request_utilization = 12 [json_name = "request_utilization"];

    message CpuUtilization {
      // Period of time over which CPU utilization is calculated.
      string aggregation_window_length = 1 [json_name = "aggregation_window_length"];

      // Target CPU utilization ratio to maintain when scaling. Must be between 0 and 1.
      int64 target_utilization = 2 [json_name = "target_utilization"];
    }

    message DiskUtilization {
      // Target bytes read per second.
      int64 target_read_bytes_per_second = 1 [json_name = "target_read_bytes_per_second"];

      // Target ops read per seconds.
      int64 target_read_ops_per_second = 2 [json_name = "target_read_ops_per_second"];

      // Target bytes written per second.
      int64 target_write_bytes_per_second = 3 [json_name = "target_write_bytes_per_second"];

      // Target ops written per second.
      int64 target_write_ops_per_second = 4 [json_name = "target_write_ops_per_second"];
    }

    message NetworkUtilization {
      // Target bytes received per second.
      int64 target_received_bytes_per_second = 1 [json_name = "target_received_bytes_per_second"];

      // Target packets received per second.
      int64 target_received_packets_per_second = 2 [json_name = "target_received_packets_per_second"];

      // Target bytes sent per second.
      int64 target_sent_bytes_per_second = 3 [json_name = "target_sent_bytes_per_second"];

      // Target packets sent per second.
      int64 target_sent_packets_per_second = 4 [json_name = "target_sent_packets_per_second"];
    }

    message RequestUtilization {
      // Target number of concurrent requests.
      int64 target_concurrent_requests = 1 [json_name = "target_concurrent_requests"];

      // Target requests per second.
      string target_request_count_per_second = 2 [json_name = "target_request_count_per_second"];
    }
  }

  message Deployment {
    CloudBuildOptions cloud_build_options = 1 [json_name = "cloud_build_options"];

    Container container = 2;

    repeated Files files = 3;

    Zip zip = 4;

    message CloudBuildOptions {
      // Path to the yaml file used in deployment, used to determine runtime configuration details.
      string app_yaml_path = 1 [json_name = "app_yaml_path"];

      // The Cloud Build timeout used as part of any dependent builds performed by version creation. Defaults to 10 minutes.
      //
      // A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
      string cloud_build_timeout = 2 [json_name = "cloud_build_timeout"];
    }

    message Container {
      // URI to the hosted container image in Google Container Registry. The URI must be fully qualified and include a tag or digest.
      // Examples: "gcr.io/my-project/image:tag" or "gcr.io/my-project/image@digest"
      string image = 1;
    }

    message Files {
      string name = 1;

      // SHA1 checksum of the file
      string sha1_sum = 2 [json_name = "sha1_sum"];

      // Source URL
      string source_url = 3 [json_name = "source_url"];
    }

    message Zip {
      // files count
      int64 files_count = 1 [json_name = "files_count"];

      // Source URL
      string source_url = 2 [json_name = "source_url"];
    }
  }

  message EndpointsApiService {
    // Endpoints service configuration ID as specified by the Service Management API. For example "2016-09-19r1".
    //
    // By default, the rollout strategy for Endpoints is "FIXED". This means that Endpoints starts up with a particular configuration ID.
    // When a new configuration is rolled out, Endpoints must be given the new configuration ID. The configId field is used to give the configuration ID
    // and is required in this case.
    //
    // Endpoints also has a rollout strategy called "MANAGED". When using this, Endpoints fetches the latest configuration and does not need
    // the configuration ID. In this case, configId must be omitted.
    string config_id = 1 [json_name = "config_id"];

    // Enable or disable trace sampling. By default, this is set to false for enabled.
    bool disable_trace_sampling = 2 [json_name = "disable_trace_sampling"];

    // Endpoints service name which is the name of the "service" resource in the Service Management API.
    // For example "myapi.endpoints.myproject.cloud.goog"
    string name = 3;

    // Endpoints rollout strategy. If FIXED, configId must be specified. If MANAGED, configId must be omitted. Default value: "FIXED" Possible values: ["FIXED", "MANAGED"]
    string rollout_strategy = 4 [json_name = "rollout_strategy"];
  }

  message Entrypoint {
    // The format should be a shell command that can be fed to bash -c.
    string shell = 1;
  }

  message Handlers {
    // Actions to take when the user is not logged in. Possible values: ["AUTH_FAIL_ACTION_REDIRECT", "AUTH_FAIL_ACTION_UNAUTHORIZED"]
    string auth_fail_action = 1 [json_name = "auth_fail_action"];

    // Methods to restrict access to a URL based on login status. Possible values: ["LOGIN_OPTIONAL", "LOGIN_ADMIN", "LOGIN_REQUIRED"]
    string login = 2;

    // 30x code to use when performing redirects for the secure field. Possible values: ["REDIRECT_HTTP_RESPONSE_CODE_301", "REDIRECT_HTTP_RESPONSE_CODE_302", "REDIRECT_HTTP_RESPONSE_CODE_303", "REDIRECT_HTTP_RESPONSE_CODE_307"]
    string redirect_http_response_code = 3 [json_name = "redirect_http_response_code"];

    // Security (HTTPS) enforcement for this URL. Possible values: ["SECURE_DEFAULT", "SECURE_NEVER", "SECURE_OPTIONAL", "SECURE_ALWAYS"]
    string security_level = 4 [json_name = "security_level"];

    // URL prefix. Uses regular expression syntax, which means regexp special characters must be escaped, but should not contain groupings.
    // All URLs that begin with this prefix are handled by this handler, using the portion of the URL after the prefix as part of the file path.
    string url_regex = 5 [json_name = "url_regex"];

    Script script = 6;

    StaticFiles static_files = 7 [json_name = "static_files"];

    message Script {
      // Path to the script from the application root directory.
      string script_path = 1 [json_name = "script_path"];
    }

    message StaticFiles {
      // Whether files should also be uploaded as code data. By default, files declared in static file handlers are
      // uploaded as static data and are only served to end users; they cannot be read by the application. If enabled,
      // uploads are charged against both your code and static data storage resource quotas.
      bool application_readable = 1 [json_name = "application_readable"];

      // Time a static file served by this handler should be cached by web proxies and browsers.
      // A duration in seconds with up to nine fractional digits, terminated by 's'. Example "3.5s".
      // Default is '0s'
      string expiration = 2;

      // HTTP headers to use for all responses from these URLs.
      // An object containing a list of "key:value" value pairs.".
      map<string, string> http_headers = 3 [json_name = "http_headers"];

      // MIME type used to serve all files served by this handler.
      // Defaults to file-specific MIME types, which are derived from each file's filename extension.
      string mime_type = 4 [json_name = "mime_type"];

      // Path to the static files matched by the URL pattern, from the application root directory.
      // The path can refer to text matched in groupings in the URL pattern.
      string path = 5;

      // Whether this handler should match the request if the file referenced by the handler does not exist.
      bool require_matching_file = 6 [json_name = "require_matching_file"];

      // Regular expression that matches the file paths for all files that should be referenced by this handler.
      string upload_path_regex = 7 [json_name = "upload_path_regex"];
    }
  }

  message LivenessCheck {
    // Interval between health checks.
    string check_interval = 1 [json_name = "check_interval"];

    // Number of consecutive failed checks required before considering the VM unhealthy. Default: 4.
    int64 failure_threshold = 2 [json_name = "failure_threshold"];

    // Host header to send when performing a HTTP Readiness check. Example: "myapp.appspot.com"
    string host = 3;

    // The initial delay before starting to execute the checks. Default: "300s"
    string initial_delay = 4 [json_name = "initial_delay"];

    // The request path.
    string path = 5;

    // Number of consecutive successful checks required before considering the VM healthy. Default: 2.
    int64 success_threshold = 6 [json_name = "success_threshold"];

    // Time before the check is considered failed. Default: "4s"
    string timeout = 7;
  }

  message ManualScaling {
    // Number of instances to assign to the service at the start.
    //
    // **Note:** When managing the number of instances at runtime through the App Engine Admin API or the (now deprecated) Python 2
    // Modules API set_num_instances() you must use 'lifecycle.ignore_changes = ["manual_scaling"[0].instances]' to prevent drift detection.
    int64 instances = 1;
  }

  message Network {
    // List of ports, or port pairs, to forward from the virtual machine to the application container.
    repeated string forwarded_ports = 1 [json_name = "forwarded_ports"];

    // Tag to apply to the instance during creation.
    string instance_tag = 2 [json_name = "instance_tag"];

    // Google Compute Engine network where the virtual machines are created. Specify the short name, not the resource path.
    string name = 3;

    // Enable session affinity.
    bool session_affinity = 4 [json_name = "session_affinity"];

    // Google Cloud Platform sub-network where the virtual machines are created. Specify the short name, not the resource path.
    //
    // If the network that the instance is being created in is a Legacy network, then the IP address is allocated from the IPv4Range.
    // If the network that the instance is being created in is an auto Subnet Mode Network, then only network name should be specified (not the subnetworkName) and the IP address is created from the IPCidrRange of the subnetwork that exists in that zone for that network.
    // If the network that the instance is being created in is a custom Subnet Mode Network, then the subnetworkName must be specified and the IP address is created from the IPCidrRange of the subnetwork.
    // If specified, the subnetwork must exist in the same region as the App Engine flexible environment application.
    string subnetwork = 5;
  }

  message ReadinessCheck {
    // A maximum time limit on application initialization, measured from moment the application successfully
    // replies to a healthcheck until it is ready to serve traffic. Default: "300s"
    string app_start_timeout = 1 [json_name = "app_start_timeout"];

    // Interval between health checks.  Default: "5s".
    string check_interval = 2 [json_name = "check_interval"];

    // Number of consecutive failed checks required before removing traffic. Default: 2.
    int64 failure_threshold = 3 [json_name = "failure_threshold"];

    // Host header to send when performing a HTTP Readiness check. Example: "myapp.appspot.com"
    string host = 4;

    // The request path.
    string path = 5;

    // Number of consecutive successful checks required before receiving traffic. Default: 2.
    int64 success_threshold = 6 [json_name = "success_threshold"];

    // Time before the check is considered failed. Default: "4s"
    string timeout = 7;
  }

  message Resources {
    // Number of CPU cores needed.
    int64 cpu = 1;

    // Disk size (GB) needed.
    int64 disk_gb = 2 [json_name = "disk_gb"];

    // Memory (GB) needed.
    int64 memory_gb = 3 [json_name = "memory_gb"];

    repeated Volumes volumes = 4;

    message Volumes {
      // Unique name for the volume.
      string name = 1;

      // Volume size in gigabytes.
      int64 size_gb = 2 [json_name = "size_gb"];

      // Underlying volume type, e.g. 'tmpfs'.
      string volume_type = 3 [json_name = "volume_type"];
    }
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }

  message VpcAccessConnector {
    // Full Serverless VPC Access Connector name e.g. /projects/my-project/locations/us-central1/connectors/c1.
    string name = 1;
  }
}

// GoogleAppEngineServiceNetworkSettings version is 0
message GoogleAppEngineServiceNetworkSettings {
  string id = 1;

  string project = 2;

  // The name of the service these settings apply to.
  string service = 3;

  NetworkSettings network_settings = 4 [json_name = "network_settings"];

  repeated Timeouts timeouts = 5;

  map<string, string> for_each = 6 [json_name = "for_each"];

  repeated string depends_on = 7 [json_name = "depends_on"];

  int32 count = 8;

  string provider = 9;

  terraform.v1.Lifecycle lifecycle = 10;

  message NetworkSettings {
    // The ingress settings for version or service. Default value: "INGRESS_TRAFFIC_ALLOWED_UNSPECIFIED" Possible values: ["INGRESS_TRAFFIC_ALLOWED_UNSPECIFIED", "INGRESS_TRAFFIC_ALLOWED_ALL", "INGRESS_TRAFFIC_ALLOWED_INTERNAL_ONLY", "INGRESS_TRAFFIC_ALLOWED_INTERNAL_AND_LB"]
    string ingress_traffic_allowed = 1 [json_name = "ingress_traffic_allowed"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

// GoogleAppEngineServiceSplitTraffic version is 0
message GoogleAppEngineServiceSplitTraffic {
  string id = 1;

  // If set to true traffic will be migrated to this version.
  bool migrate_traffic = 2 [json_name = "migrate_traffic"];

  string project = 3;

  // The name of the service these settings apply to.
  string service = 4;

  Split split = 5;

  repeated Timeouts timeouts = 6;

  map<string, string> for_each = 7 [json_name = "for_each"];

  repeated string depends_on = 8 [json_name = "depends_on"];

  int32 count = 9;

  string provider = 10;

  terraform.v1.Lifecycle lifecycle = 11;

  message Split {
    // Mapping from version IDs within the service to fractional (0.000, 1] allocations of traffic for that version. Each version can be specified only once, but some versions in the service may not have any traffic allocation. Services that have traffic allocated cannot be deleted until either the service is deleted or their traffic allocation is removed. Allocations must sum to 1. Up to two decimal place precision is supported for IP-based splits and up to three decimal places is supported for cookie-based splits.
    map<string, string> allocations = 1;

    // Mechanism used to determine which version a request is sent to. The traffic selection algorithm will be stable for either type until allocations are changed. Possible values: ["UNSPECIFIED", "COOKIE", "IP", "RANDOM"]
    string shard_by = 2 [json_name = "shard_by"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

// GoogleAppEngineStandardAppVersion version is 0
message GoogleAppEngineStandardAppVersion {
  // Allows App Engine second generation runtimes to access the legacy bundled services.
  bool app_engine_apis = 1 [json_name = "app_engine_apis"];

  // If set to 'true', the service will be deleted if it is the last version.
  bool delete_service_on_destroy = 2 [json_name = "delete_service_on_destroy"];

  // Environment variables available to the application.
  map<string, string> env_variables = 3 [json_name = "env_variables"];

  string id = 4;

  // A list of the types of messages that this application is able to receive. Possible values: ["INBOUND_SERVICE_MAIL", "INBOUND_SERVICE_MAIL_BOUNCE", "INBOUND_SERVICE_XMPP_ERROR", "INBOUND_SERVICE_XMPP_MESSAGE", "INBOUND_SERVICE_XMPP_SUBSCRIBE", "INBOUND_SERVICE_XMPP_PRESENCE", "INBOUND_SERVICE_CHANNEL_PRESENCE", "INBOUND_SERVICE_WARMUP"]
  repeated string inbound_services = 5 [json_name = "inbound_services"];

  // Instance class that is used to run this version. Valid values are
  // AutomaticScaling: F1, F2, F4, F4_1G
  // BasicScaling or ManualScaling: B1, B2, B4, B4_1G, B8
  // Defaults to F1 for AutomaticScaling and B2 for ManualScaling and BasicScaling. If no scaling is specified, AutomaticScaling is chosen.
  string instance_class = 6 [json_name = "instance_class"];

  // Full path to the Version resource in the API. Example, "v1".
  string name = 7;

  // If set to 'true', the application version will not be deleted.
  bool noop_on_destroy = 8 [json_name = "noop_on_destroy"];

  string project = 9;

  // Desired runtime. Example python27.
  string runtime = 10;

  // The version of the API in the given runtime environment.
  // Please see the app.yaml reference for valid values at 'https://cloud.google.com/appengine/docs/standard/<language>/config/appref'\
  // Substitute '<language>' with 'python', 'java', 'php', 'ruby', 'go' or 'nodejs'.
  string runtime_api_version = 11 [json_name = "runtime_api_version"];

  // AppEngine service resource
  string service = 12;

  // The identity that the deployed version will run as. Admin API will use the App Engine Appspot service account as default if this field is neither provided in app.yaml file nor through CLI flag.
  string service_account = 13 [json_name = "service_account"];

  // Whether multiple requests can be dispatched to this version at once.
  bool threadsafe = 14;

  // Relative name of the version within the service. For example, 'v1'. Version names can contain only lowercase letters, numbers, or hyphens. Reserved names,"default", "latest", and any name with the prefix "ah-".
  string version_id = 15 [json_name = "version_id"];

  AutomaticScaling automatic_scaling = 16 [json_name = "automatic_scaling"];

  BasicScaling basic_scaling = 17 [json_name = "basic_scaling"];

  Deployment deployment = 18;

  Entrypoint entrypoint = 19;

  repeated Handlers handlers = 20;

  repeated Libraries libraries = 21;

  ManualScaling manual_scaling = 22 [json_name = "manual_scaling"];

  repeated Timeouts timeouts = 23;

  VpcAccessConnector vpc_access_connector = 24 [json_name = "vpc_access_connector"];

  map<string, string> for_each = 25 [json_name = "for_each"];

  repeated string depends_on = 26 [json_name = "depends_on"];

  int32 count = 27;

  string provider = 28;

  terraform.v1.Lifecycle lifecycle = 29;

  message AutomaticScaling {
    // Number of concurrent requests an automatic scaling instance can accept before the scheduler spawns a new instance.
    //
    // Defaults to a runtime-specific value.
    int64 max_concurrent_requests = 1 [json_name = "max_concurrent_requests"];

    // Maximum number of idle instances that should be maintained for this version.
    int64 max_idle_instances = 2 [json_name = "max_idle_instances"];

    // Maximum amount of time that a request should wait in the pending queue before starting a new instance to handle it.
    // A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
    string max_pending_latency = 3 [json_name = "max_pending_latency"];

    // Minimum number of idle instances that should be maintained for this version. Only applicable for the default version of a service.
    int64 min_idle_instances = 4 [json_name = "min_idle_instances"];

    // Minimum amount of time a request should wait in the pending queue before starting a new instance to handle it.
    // A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
    string min_pending_latency = 5 [json_name = "min_pending_latency"];

    StandardSchedulerSettings standard_scheduler_settings = 6 [json_name = "standard_scheduler_settings"];

    message StandardSchedulerSettings {
      // Maximum number of instances to run for this version. Set to zero to disable maxInstances configuration.
      int64 max_instances = 1 [json_name = "max_instances"];

      // Minimum number of instances to run for this version. Set to zero to disable minInstances configuration.
      int64 min_instances = 2 [json_name = "min_instances"];

      // Target CPU utilization ratio to maintain when scaling. Should be a value in the range [0.50, 0.95], zero, or a negative value.
      int64 target_cpu_utilization = 3 [json_name = "target_cpu_utilization"];

      // Target throughput utilization ratio to maintain when scaling. Should be a value in the range [0.50, 0.95], zero, or a negative value.
      int64 target_throughput_utilization = 4 [json_name = "target_throughput_utilization"];
    }
  }

  message BasicScaling {
    // Duration of time after the last request that an instance must wait before the instance is shut down.
    // A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s". Defaults to 900s.
    string idle_timeout = 1 [json_name = "idle_timeout"];

    // Maximum number of instances to create for this version. Must be in the range [1.0, 200.0].
    int64 max_instances = 2 [json_name = "max_instances"];
  }

  message Deployment {
    repeated Files files = 1;

    Zip zip = 2;

    message Files {
      string name = 1;

      // SHA1 checksum of the file
      string sha1_sum = 2 [json_name = "sha1_sum"];

      // Source URL
      string source_url = 3 [json_name = "source_url"];
    }

    message Zip {
      // files count
      int64 files_count = 1 [json_name = "files_count"];

      // Source URL
      string source_url = 2 [json_name = "source_url"];
    }
  }

  message Entrypoint {
    // The format should be a shell command that can be fed to bash -c.
    string shell = 1;
  }

  message Handlers {
    // Actions to take when the user is not logged in. Possible values: ["AUTH_FAIL_ACTION_REDIRECT", "AUTH_FAIL_ACTION_UNAUTHORIZED"]
    string auth_fail_action = 1 [json_name = "auth_fail_action"];

    // Methods to restrict access to a URL based on login status. Possible values: ["LOGIN_OPTIONAL", "LOGIN_ADMIN", "LOGIN_REQUIRED"]
    string login = 2;

    // 30x code to use when performing redirects for the secure field. Possible values: ["REDIRECT_HTTP_RESPONSE_CODE_301", "REDIRECT_HTTP_RESPONSE_CODE_302", "REDIRECT_HTTP_RESPONSE_CODE_303", "REDIRECT_HTTP_RESPONSE_CODE_307"]
    string redirect_http_response_code = 3 [json_name = "redirect_http_response_code"];

    // Security (HTTPS) enforcement for this URL. Possible values: ["SECURE_DEFAULT", "SECURE_NEVER", "SECURE_OPTIONAL", "SECURE_ALWAYS"]
    string security_level = 4 [json_name = "security_level"];

    // URL prefix. Uses regular expression syntax, which means regexp special characters must be escaped, but should not contain groupings.
    // All URLs that begin with this prefix are handled by this handler, using the portion of the URL after the prefix as part of the file path.
    string url_regex = 5 [json_name = "url_regex"];

    Script script = 6;

    StaticFiles static_files = 7 [json_name = "static_files"];

    message Script {
      // Path to the script from the application root directory.
      string script_path = 1 [json_name = "script_path"];
    }

    message StaticFiles {
      // Whether files should also be uploaded as code data. By default, files declared in static file handlers are uploaded as
      // static data and are only served to end users; they cannot be read by the application. If enabled, uploads are charged
      // against both your code and static data storage resource quotas.
      bool application_readable = 1 [json_name = "application_readable"];

      // Time a static file served by this handler should be cached by web proxies and browsers.
      // A duration in seconds with up to nine fractional digits, terminated by 's'. Example "3.5s".
      string expiration = 2;

      // HTTP headers to use for all responses from these URLs.
      // An object containing a list of "key:value" value pairs.".
      map<string, string> http_headers = 3 [json_name = "http_headers"];

      // MIME type used to serve all files served by this handler.
      // Defaults to file-specific MIME types, which are derived from each file's filename extension.
      string mime_type = 4 [json_name = "mime_type"];

      // Path to the static files matched by the URL pattern, from the application root directory. The path can refer to text matched in groupings in the URL pattern.
      string path = 5;

      // Whether this handler should match the request if the file referenced by the handler does not exist.
      bool require_matching_file = 6 [json_name = "require_matching_file"];

      // Regular expression that matches the file paths for all files that should be referenced by this handler.
      string upload_path_regex = 7 [json_name = "upload_path_regex"];
    }
  }

  message Libraries {
    // Name of the library. Example "django".
    string name = 1;

    // Version of the library to select, or "latest".
    string version = 2;
  }

  message ManualScaling {
    // Number of instances to assign to the service at the start.
    //
    // **Note:** When managing the number of instances at runtime through the App Engine Admin API or the (now deprecated) Python 2
    // Modules API set_num_instances() you must use 'lifecycle.ignore_changes = ["manual_scaling"[0].instances]' to prevent drift detection.
    int64 instances = 1;
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }

  message VpcAccessConnector {
    // The egress setting for the connector, controlling what traffic is diverted through it.
    string egress_setting = 1 [json_name = "egress_setting"];

    // Full Serverless VPC Access Connector name e.g. /projects/my-project/locations/us-central1/connectors/c1.
    string name = 2;
  }
}
